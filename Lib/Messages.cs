// Generated by ProtoGen, Version=2.4.1.521, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace Gauge.Messages {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class Messages {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_gauge_messages_KillProcessRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gauge.Messages.KillProcessRequest, global::Gauge.Messages.KillProcessRequest.Builder> internal__static_gauge_messages_KillProcessRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gauge_messages_ExecutionStatusResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gauge.Messages.ExecutionStatusResponse, global::Gauge.Messages.ExecutionStatusResponse.Builder> internal__static_gauge_messages_ExecutionStatusResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gauge_messages_ExecutionStartingRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gauge.Messages.ExecutionStartingRequest, global::Gauge.Messages.ExecutionStartingRequest.Builder> internal__static_gauge_messages_ExecutionStartingRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gauge_messages_SpecExecutionStartingRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gauge.Messages.SpecExecutionStartingRequest, global::Gauge.Messages.SpecExecutionStartingRequest.Builder> internal__static_gauge_messages_SpecExecutionStartingRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gauge_messages_SpecExecutionEndingRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gauge.Messages.SpecExecutionEndingRequest, global::Gauge.Messages.SpecExecutionEndingRequest.Builder> internal__static_gauge_messages_SpecExecutionEndingRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gauge_messages_ScenarioExecutionStartingRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gauge.Messages.ScenarioExecutionStartingRequest, global::Gauge.Messages.ScenarioExecutionStartingRequest.Builder> internal__static_gauge_messages_ScenarioExecutionStartingRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gauge_messages_ScenarioExecutionEndingRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gauge.Messages.ScenarioExecutionEndingRequest, global::Gauge.Messages.ScenarioExecutionEndingRequest.Builder> internal__static_gauge_messages_ScenarioExecutionEndingRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gauge_messages_StepExecutionStartingRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gauge.Messages.StepExecutionStartingRequest, global::Gauge.Messages.StepExecutionStartingRequest.Builder> internal__static_gauge_messages_StepExecutionStartingRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gauge_messages_StepExecutionEndingRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gauge.Messages.StepExecutionEndingRequest, global::Gauge.Messages.StepExecutionEndingRequest.Builder> internal__static_gauge_messages_StepExecutionEndingRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gauge_messages_ExecutionInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gauge.Messages.ExecutionInfo, global::Gauge.Messages.ExecutionInfo.Builder> internal__static_gauge_messages_ExecutionInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gauge_messages_SpecInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gauge.Messages.SpecInfo, global::Gauge.Messages.SpecInfo.Builder> internal__static_gauge_messages_SpecInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gauge_messages_ScenarioInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gauge.Messages.ScenarioInfo, global::Gauge.Messages.ScenarioInfo.Builder> internal__static_gauge_messages_ScenarioInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gauge_messages_StepInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gauge.Messages.StepInfo, global::Gauge.Messages.StepInfo.Builder> internal__static_gauge_messages_StepInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gauge_messages_ExecuteStepRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gauge.Messages.ExecuteStepRequest, global::Gauge.Messages.ExecuteStepRequest.Builder> internal__static_gauge_messages_ExecuteStepRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gauge_messages_StepValidateRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gauge.Messages.StepValidateRequest, global::Gauge.Messages.StepValidateRequest.Builder> internal__static_gauge_messages_StepValidateRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gauge_messages_StepValidateResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gauge.Messages.StepValidateResponse, global::Gauge.Messages.StepValidateResponse.Builder> internal__static_gauge_messages_StepValidateResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gauge_messages_ExecutionEndingRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gauge.Messages.ExecutionEndingRequest, global::Gauge.Messages.ExecutionEndingRequest.Builder> internal__static_gauge_messages_ExecutionEndingRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gauge_messages_SuiteExecutionResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gauge.Messages.SuiteExecutionResult, global::Gauge.Messages.SuiteExecutionResult.Builder> internal__static_gauge_messages_SuiteExecutionResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gauge_messages_StepNamesRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gauge.Messages.StepNamesRequest, global::Gauge.Messages.StepNamesRequest.Builder> internal__static_gauge_messages_StepNamesRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gauge_messages_StepNamesResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gauge.Messages.StepNamesResponse, global::Gauge.Messages.StepNamesResponse.Builder> internal__static_gauge_messages_StepNamesResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gauge_messages_ScenarioDataStoreInitRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gauge.Messages.ScenarioDataStoreInitRequest, global::Gauge.Messages.ScenarioDataStoreInitRequest.Builder> internal__static_gauge_messages_ScenarioDataStoreInitRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gauge_messages_SpecDataStoreInitRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gauge.Messages.SpecDataStoreInitRequest, global::Gauge.Messages.SpecDataStoreInitRequest.Builder> internal__static_gauge_messages_SpecDataStoreInitRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gauge_messages_SuiteDataStoreInitRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gauge.Messages.SuiteDataStoreInitRequest, global::Gauge.Messages.SuiteDataStoreInitRequest.Builder> internal__static_gauge_messages_SuiteDataStoreInitRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gauge_messages_ParameterPosition__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gauge.Messages.ParameterPosition, global::Gauge.Messages.ParameterPosition.Builder> internal__static_gauge_messages_ParameterPosition__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gauge_messages_RefactorRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gauge.Messages.RefactorRequest, global::Gauge.Messages.RefactorRequest.Builder> internal__static_gauge_messages_RefactorRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gauge_messages_RefactorResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gauge.Messages.RefactorResponse, global::Gauge.Messages.RefactorResponse.Builder> internal__static_gauge_messages_RefactorResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gauge_messages_StepNameRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gauge.Messages.StepNameRequest, global::Gauge.Messages.StepNameRequest.Builder> internal__static_gauge_messages_StepNameRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gauge_messages_StepNameResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gauge.Messages.StepNameResponse, global::Gauge.Messages.StepNameResponse.Builder> internal__static_gauge_messages_StepNameResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gauge_messages_Message__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gauge.Messages.Message, global::Gauge.Messages.Message.Builder> internal__static_gauge_messages_Message__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static Messages() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "Cg5tZXNzYWdlcy5wcm90bxIOZ2F1Z2UubWVzc2FnZXMaCnNwZWMucHJvdG8i" + 
          "FAoSS2lsbFByb2Nlc3NSZXF1ZXN0IlgKF0V4ZWN1dGlvblN0YXR1c1Jlc3Bv" + 
          "bnNlEj0KD2V4ZWN1dGlvblJlc3VsdBgBIAIoCzIkLmdhdWdlLm1lc3NhZ2Vz" + 
          "LlByb3RvRXhlY3V0aW9uUmVzdWx0IlcKGEV4ZWN1dGlvblN0YXJ0aW5nUmVx" + 
          "dWVzdBI7ChRjdXJyZW50RXhlY3V0aW9uSW5mbxgBIAEoCzIdLmdhdWdlLm1l" + 
          "c3NhZ2VzLkV4ZWN1dGlvbkluZm8iWwocU3BlY0V4ZWN1dGlvblN0YXJ0aW5n" + 
          "UmVxdWVzdBI7ChRjdXJyZW50RXhlY3V0aW9uSW5mbxgBIAEoCzIdLmdhdWdl" + 
          "Lm1lc3NhZ2VzLkV4ZWN1dGlvbkluZm8iWQoaU3BlY0V4ZWN1dGlvbkVuZGlu" + 
          "Z1JlcXVlc3QSOwoUY3VycmVudEV4ZWN1dGlvbkluZm8YASABKAsyHS5nYXVn" + 
          "ZS5tZXNzYWdlcy5FeGVjdXRpb25JbmZvIl8KIFNjZW5hcmlvRXhlY3V0aW9u" + 
          "U3RhcnRpbmdSZXF1ZXN0EjsKFGN1cnJlbnRFeGVjdXRpb25JbmZvGAEgASgL" + 
          "Mh0uZ2F1Z2UubWVzc2FnZXMuRXhlY3V0aW9uSW5mbyJdCh5TY2VuYXJpb0V4" + 
          "ZWN1dGlvbkVuZGluZ1JlcXVlc3QSOwoUY3VycmVudEV4ZWN1dGlvbkluZm8Y" + 
          "ASABKAsyHS5nYXVnZS5tZXNzYWdlcy5FeGVjdXRpb25JbmZvIlsKHFN0ZXBF" + 
          "eGVjdXRpb25TdGFydGluZ1JlcXVlc3QSOwoUY3VycmVudEV4ZWN1dGlvbklu" + 
          "Zm8YASABKAsyHS5nYXVnZS5tZXNzYWdlcy5FeGVjdXRpb25JbmZvIlkKGlN0" + 
          "ZXBFeGVjdXRpb25FbmRpbmdSZXF1ZXN0EjsKFGN1cnJlbnRFeGVjdXRpb25J" + 
          "bmZvGAEgASgLMh0uZ2F1Z2UubWVzc2FnZXMuRXhlY3V0aW9uSW5mbyK4AQoN" + 
          "RXhlY3V0aW9uSW5mbxItCgtjdXJyZW50U3BlYxgBIAEoCzIYLmdhdWdlLm1l" + 
          "c3NhZ2VzLlNwZWNJbmZvEjUKD2N1cnJlbnRTY2VuYXJpbxgCIAEoCzIcLmdh" + 
          "dWdlLm1lc3NhZ2VzLlNjZW5hcmlvSW5mbxItCgtjdXJyZW50U3RlcBgDIAEo" + 
          "CzIYLmdhdWdlLm1lc3NhZ2VzLlN0ZXBJbmZvEhIKCnN0YWNrdHJhY2UYBCAB" + 
          "KAkiSgoIU3BlY0luZm8SDAoEbmFtZRgBIAIoCRIQCghmaWxlTmFtZRgCIAIo" + 
          "CRIQCghpc0ZhaWxlZBgDIAIoCBIMCgR0YWdzGAQgAygJIjwKDFNjZW5hcmlv" + 
          "SW5mbxIMCgRuYW1lGAEgAigJEhAKCGlzRmFpbGVkGAIgAigIEgwKBHRhZ3MY" + 
          "AyADKAkiTgoIU3RlcEluZm8SMAoEc3RlcBgBIAIoCzIiLmdhdWdlLm1lc3Nh" + 
          "Z2VzLkV4ZWN1dGVTdGVwUmVxdWVzdBIQCghpc0ZhaWxlZBgCIAIoCCKMAQoS" + 
          "RXhlY3V0ZVN0ZXBSZXF1ZXN0EhYKDmFjdHVhbFN0ZXBUZXh0GAEgAigJEhYK" + 
          "DnBhcnNlZFN0ZXBUZXh0GAIgAigJEhcKD3NjZW5hcmlvRmFpbGluZxgDIAEo" + 
          "CBItCgpwYXJhbWV0ZXJzGAQgAygLMhkuZ2F1Z2UubWVzc2FnZXMuUGFyYW1l" + 
          "dGVyIkMKE1N0ZXBWYWxpZGF0ZVJlcXVlc3QSEAoIc3RlcFRleHQYASACKAkS" + 
          "GgoSbnVtYmVyT2ZQYXJhbWV0ZXJzGAIgAigFIj0KFFN0ZXBWYWxpZGF0ZVJl" + 
          "c3BvbnNlEg8KB2lzVmFsaWQYASACKAgSFAoMZXJyb3JNZXNzYWdlGAIgASgJ" + 
          "IlUKFkV4ZWN1dGlvbkVuZGluZ1JlcXVlc3QSOwoUY3VycmVudEV4ZWN1dGlv" + 
          "bkluZm8YASABKAsyHS5nYXVnZS5tZXNzYWdlcy5FeGVjdXRpb25JbmZvIk0K" + 
          "FFN1aXRlRXhlY3V0aW9uUmVzdWx0EjUKC3N1aXRlUmVzdWx0GAEgAigLMiAu" + 
          "Z2F1Z2UubWVzc2FnZXMuUHJvdG9TdWl0ZVJlc3VsdCISChBTdGVwTmFtZXNS" + 
          "ZXF1ZXN0IiIKEVN0ZXBOYW1lc1Jlc3BvbnNlEg0KBXN0ZXBzGAEgAygJIh4K" + 
          "HFNjZW5hcmlvRGF0YVN0b3JlSW5pdFJlcXVlc3QiGgoYU3BlY0RhdGFTdG9y" + 
          "ZUluaXRSZXF1ZXN0IhsKGVN1aXRlRGF0YVN0b3JlSW5pdFJlcXVlc3QiPQoR" + 
          "UGFyYW1ldGVyUG9zaXRpb24SEwoLb2xkUG9zaXRpb24YASACKAUSEwoLbmV3" + 
          "UG9zaXRpb24YAiACKAUiuAEKD1JlZmFjdG9yUmVxdWVzdBI0CgxvbGRTdGVw" + 
          "VmFsdWUYASACKAsyHi5nYXVnZS5tZXNzYWdlcy5Qcm90b1N0ZXBWYWx1ZRI0" + 
          "CgxuZXdTdGVwVmFsdWUYAiACKAsyHi5nYXVnZS5tZXNzYWdlcy5Qcm90b1N0" + 
          "ZXBWYWx1ZRI5Cg5wYXJhbVBvc2l0aW9ucxgDIAMoCzIhLmdhdWdlLm1lc3Nh" + 
          "Z2VzLlBhcmFtZXRlclBvc2l0aW9uIkgKEFJlZmFjdG9yUmVzcG9uc2USDwoH" + 
          "c3VjY2VzcxgBIAIoCBINCgVlcnJvchgCIAEoCRIUCgxmaWxlc0NoYW5nZWQY" + 
          "AyADKAkiJAoPU3RlcE5hbWVSZXF1ZXN0EhEKCXN0ZXBWYWx1ZRgBIAIoCSJN" + 
          "ChBTdGVwTmFtZVJlc3BvbnNlEhUKDWlzU3RlcFByZXNlbnQYASACKAgSEAoI" + 
          "c3RlcE5hbWUYAiADKAkSEAoIaGFzQWxpYXMYAyACKAgijhIKB01lc3NhZ2US" + 
          "OAoLbWVzc2FnZVR5cGUYASACKA4yIy5nYXVnZS5tZXNzYWdlcy5NZXNzYWdl" + 
          "Lk1lc3NhZ2VUeXBlEhEKCW1lc3NhZ2VJZBgCIAIoAxJKChhleGVjdXRpb25T" + 
          "dGFydGluZ1JlcXVlc3QYAyABKAsyKC5nYXVnZS5tZXNzYWdlcy5FeGVjdXRp" + 
          "b25TdGFydGluZ1JlcXVlc3QSUgocc3BlY0V4ZWN1dGlvblN0YXJ0aW5nUmVx" + 
          "dWVzdBgEIAEoCzIsLmdhdWdlLm1lc3NhZ2VzLlNwZWNFeGVjdXRpb25TdGFy" + 
          "dGluZ1JlcXVlc3QSTgoac3BlY0V4ZWN1dGlvbkVuZGluZ1JlcXVlc3QYBSAB" + 
          "KAsyKi5nYXVnZS5tZXNzYWdlcy5TcGVjRXhlY3V0aW9uRW5kaW5nUmVxdWVz" + 
          "dBJaCiBzY2VuYXJpb0V4ZWN1dGlvblN0YXJ0aW5nUmVxdWVzdBgGIAEoCzIw" + 
          "LmdhdWdlLm1lc3NhZ2VzLlNjZW5hcmlvRXhlY3V0aW9uU3RhcnRpbmdSZXF1" + 
          "ZXN0ElYKHnNjZW5hcmlvRXhlY3V0aW9uRW5kaW5nUmVxdWVzdBgHIAEoCzIu" + 
          "LmdhdWdlLm1lc3NhZ2VzLlNjZW5hcmlvRXhlY3V0aW9uRW5kaW5nUmVxdWVz" + 
          "dBJSChxzdGVwRXhlY3V0aW9uU3RhcnRpbmdSZXF1ZXN0GAggASgLMiwuZ2F1" + 
          "Z2UubWVzc2FnZXMuU3RlcEV4ZWN1dGlvblN0YXJ0aW5nUmVxdWVzdBJOChpz" + 
          "dGVwRXhlY3V0aW9uRW5kaW5nUmVxdWVzdBgJIAEoCzIqLmdhdWdlLm1lc3Nh" + 
          "Z2VzLlN0ZXBFeGVjdXRpb25FbmRpbmdSZXF1ZXN0Ej4KEmV4ZWN1dGVTdGVw" + 
          "UmVxdWVzdBgKIAEoCzIiLmdhdWdlLm1lc3NhZ2VzLkV4ZWN1dGVTdGVwUmVx" + 
          "dWVzdBJGChZleGVjdXRpb25FbmRpbmdSZXF1ZXN0GAsgASgLMiYuZ2F1Z2Uu" + 
          "bWVzc2FnZXMuRXhlY3V0aW9uRW5kaW5nUmVxdWVzdBJAChNzdGVwVmFsaWRh" + 
          "dGVSZXF1ZXN0GAwgASgLMiMuZ2F1Z2UubWVzc2FnZXMuU3RlcFZhbGlkYXRl" + 
          "UmVxdWVzdBJCChRzdGVwVmFsaWRhdGVSZXNwb25zZRgNIAEoCzIkLmdhdWdl" + 
          "Lm1lc3NhZ2VzLlN0ZXBWYWxpZGF0ZVJlc3BvbnNlEkgKF2V4ZWN1dGlvblN0" + 
          "YXR1c1Jlc3BvbnNlGA4gASgLMicuZ2F1Z2UubWVzc2FnZXMuRXhlY3V0aW9u" + 
          "U3RhdHVzUmVzcG9uc2USOgoQc3RlcE5hbWVzUmVxdWVzdBgPIAEoCzIgLmdh" + 
          "dWdlLm1lc3NhZ2VzLlN0ZXBOYW1lc1JlcXVlc3QSPAoRc3RlcE5hbWVzUmVz" + 
          "cG9uc2UYECABKAsyIS5nYXVnZS5tZXNzYWdlcy5TdGVwTmFtZXNSZXNwb25z" + 
          "ZRJCChRzdWl0ZUV4ZWN1dGlvblJlc3VsdBgRIAEoCzIkLmdhdWdlLm1lc3Nh" + 
          "Z2VzLlN1aXRlRXhlY3V0aW9uUmVzdWx0Ej4KEmtpbGxQcm9jZXNzUmVxdWVz" + 
          "dBgSIAEoCzIiLmdhdWdlLm1lc3NhZ2VzLktpbGxQcm9jZXNzUmVxdWVzdBJS" + 
          "ChxzY2VuYXJpb0RhdGFTdG9yZUluaXRSZXF1ZXN0GBMgASgLMiwuZ2F1Z2Uu" + 
          "bWVzc2FnZXMuU2NlbmFyaW9EYXRhU3RvcmVJbml0UmVxdWVzdBJKChhzcGVj" + 
          "RGF0YVN0b3JlSW5pdFJlcXVlc3QYFCABKAsyKC5nYXVnZS5tZXNzYWdlcy5T" + 
          "cGVjRGF0YVN0b3JlSW5pdFJlcXVlc3QSTAoZc3VpdGVEYXRhU3RvcmVJbml0" + 
          "UmVxdWVzdBgVIAEoCzIpLmdhdWdlLm1lc3NhZ2VzLlN1aXRlRGF0YVN0b3Jl" + 
          "SW5pdFJlcXVlc3QSOAoPc3RlcE5hbWVSZXF1ZXN0GBYgASgLMh8uZ2F1Z2Uu" + 
          "bWVzc2FnZXMuU3RlcE5hbWVSZXF1ZXN0EjoKEHN0ZXBOYW1lUmVzcG9uc2UY" + 
          "FyABKAsyIC5nYXVnZS5tZXNzYWdlcy5TdGVwTmFtZVJlc3BvbnNlEjgKD3Jl" + 
          "ZmFjdG9yUmVxdWVzdBgYIAEoCzIfLmdhdWdlLm1lc3NhZ2VzLlJlZmFjdG9y" + 
          "UmVxdWVzdBI6ChByZWZhY3RvclJlc3BvbnNlGBkgASgLMiAuZ2F1Z2UubWVz" + 
          "c2FnZXMuUmVmYWN0b3JSZXNwb25zZSK9BAoLTWVzc2FnZVR5cGUSFQoRRXhl" + 
          "Y3V0aW9uU3RhcnRpbmcQABIZChVTcGVjRXhlY3V0aW9uU3RhcnRpbmcQARIX" + 
          "ChNTcGVjRXhlY3V0aW9uRW5kaW5nEAISHQoZU2NlbmFyaW9FeGVjdXRpb25T" + 
          "dGFydGluZxADEhsKF1NjZW5hcmlvRXhlY3V0aW9uRW5kaW5nEAQSGQoVU3Rl" + 
          "cEV4ZWN1dGlvblN0YXJ0aW5nEAUSFwoTU3RlcEV4ZWN1dGlvbkVuZGluZxAG" + 
          "Eg8KC0V4ZWN1dGVTdGVwEAcSEwoPRXhlY3V0aW9uRW5kaW5nEAgSFwoTU3Rl" + 
          "cFZhbGlkYXRlUmVxdWVzdBAJEhgKFFN0ZXBWYWxpZGF0ZVJlc3BvbnNlEAoS" + 
          "GwoXRXhlY3V0aW9uU3RhdHVzUmVzcG9uc2UQCxIUChBTdGVwTmFtZXNSZXF1" + 
          "ZXN0EAwSFQoRU3RlcE5hbWVzUmVzcG9uc2UQDRIWChJLaWxsUHJvY2Vzc1Jl" + 
          "cXVlc3QQDhIYChRTdWl0ZUV4ZWN1dGlvblJlc3VsdBAPEhkKFVNjZW5hcmlv" + 
          "RGF0YVN0b3JlSW5pdBAQEhUKEVNwZWNEYXRhU3RvcmVJbml0EBESFgoSU3Vp" + 
          "dGVEYXRhU3RvcmVJbml0EBISEwoPU3RlcE5hbWVSZXF1ZXN0EBMSFAoQU3Rl" + 
          "cE5hbWVSZXNwb25zZRAUEhMKD1JlZmFjdG9yUmVxdWVzdBAVEhQKEFJlZmFj" + 
          "dG9yUmVzcG9uc2UQFg==");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_gauge_messages_KillProcessRequest__Descriptor = Descriptor.MessageTypes[0];
        internal__static_gauge_messages_KillProcessRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gauge.Messages.KillProcessRequest, global::Gauge.Messages.KillProcessRequest.Builder>(internal__static_gauge_messages_KillProcessRequest__Descriptor,
                new string[] { });
        internal__static_gauge_messages_ExecutionStatusResponse__Descriptor = Descriptor.MessageTypes[1];
        internal__static_gauge_messages_ExecutionStatusResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gauge.Messages.ExecutionStatusResponse, global::Gauge.Messages.ExecutionStatusResponse.Builder>(internal__static_gauge_messages_ExecutionStatusResponse__Descriptor,
                new string[] { "ExecutionResult", });
        internal__static_gauge_messages_ExecutionStartingRequest__Descriptor = Descriptor.MessageTypes[2];
        internal__static_gauge_messages_ExecutionStartingRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gauge.Messages.ExecutionStartingRequest, global::Gauge.Messages.ExecutionStartingRequest.Builder>(internal__static_gauge_messages_ExecutionStartingRequest__Descriptor,
                new string[] { "CurrentExecutionInfo", });
        internal__static_gauge_messages_SpecExecutionStartingRequest__Descriptor = Descriptor.MessageTypes[3];
        internal__static_gauge_messages_SpecExecutionStartingRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gauge.Messages.SpecExecutionStartingRequest, global::Gauge.Messages.SpecExecutionStartingRequest.Builder>(internal__static_gauge_messages_SpecExecutionStartingRequest__Descriptor,
                new string[] { "CurrentExecutionInfo", });
        internal__static_gauge_messages_SpecExecutionEndingRequest__Descriptor = Descriptor.MessageTypes[4];
        internal__static_gauge_messages_SpecExecutionEndingRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gauge.Messages.SpecExecutionEndingRequest, global::Gauge.Messages.SpecExecutionEndingRequest.Builder>(internal__static_gauge_messages_SpecExecutionEndingRequest__Descriptor,
                new string[] { "CurrentExecutionInfo", });
        internal__static_gauge_messages_ScenarioExecutionStartingRequest__Descriptor = Descriptor.MessageTypes[5];
        internal__static_gauge_messages_ScenarioExecutionStartingRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gauge.Messages.ScenarioExecutionStartingRequest, global::Gauge.Messages.ScenarioExecutionStartingRequest.Builder>(internal__static_gauge_messages_ScenarioExecutionStartingRequest__Descriptor,
                new string[] { "CurrentExecutionInfo", });
        internal__static_gauge_messages_ScenarioExecutionEndingRequest__Descriptor = Descriptor.MessageTypes[6];
        internal__static_gauge_messages_ScenarioExecutionEndingRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gauge.Messages.ScenarioExecutionEndingRequest, global::Gauge.Messages.ScenarioExecutionEndingRequest.Builder>(internal__static_gauge_messages_ScenarioExecutionEndingRequest__Descriptor,
                new string[] { "CurrentExecutionInfo", });
        internal__static_gauge_messages_StepExecutionStartingRequest__Descriptor = Descriptor.MessageTypes[7];
        internal__static_gauge_messages_StepExecutionStartingRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gauge.Messages.StepExecutionStartingRequest, global::Gauge.Messages.StepExecutionStartingRequest.Builder>(internal__static_gauge_messages_StepExecutionStartingRequest__Descriptor,
                new string[] { "CurrentExecutionInfo", });
        internal__static_gauge_messages_StepExecutionEndingRequest__Descriptor = Descriptor.MessageTypes[8];
        internal__static_gauge_messages_StepExecutionEndingRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gauge.Messages.StepExecutionEndingRequest, global::Gauge.Messages.StepExecutionEndingRequest.Builder>(internal__static_gauge_messages_StepExecutionEndingRequest__Descriptor,
                new string[] { "CurrentExecutionInfo", });
        internal__static_gauge_messages_ExecutionInfo__Descriptor = Descriptor.MessageTypes[9];
        internal__static_gauge_messages_ExecutionInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gauge.Messages.ExecutionInfo, global::Gauge.Messages.ExecutionInfo.Builder>(internal__static_gauge_messages_ExecutionInfo__Descriptor,
                new string[] { "CurrentSpec", "CurrentScenario", "CurrentStep", "Stacktrace", });
        internal__static_gauge_messages_SpecInfo__Descriptor = Descriptor.MessageTypes[10];
        internal__static_gauge_messages_SpecInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gauge.Messages.SpecInfo, global::Gauge.Messages.SpecInfo.Builder>(internal__static_gauge_messages_SpecInfo__Descriptor,
                new string[] { "Name", "FileName", "IsFailed", "Tags", });
        internal__static_gauge_messages_ScenarioInfo__Descriptor = Descriptor.MessageTypes[11];
        internal__static_gauge_messages_ScenarioInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gauge.Messages.ScenarioInfo, global::Gauge.Messages.ScenarioInfo.Builder>(internal__static_gauge_messages_ScenarioInfo__Descriptor,
                new string[] { "Name", "IsFailed", "Tags", });
        internal__static_gauge_messages_StepInfo__Descriptor = Descriptor.MessageTypes[12];
        internal__static_gauge_messages_StepInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gauge.Messages.StepInfo, global::Gauge.Messages.StepInfo.Builder>(internal__static_gauge_messages_StepInfo__Descriptor,
                new string[] { "Step", "IsFailed", });
        internal__static_gauge_messages_ExecuteStepRequest__Descriptor = Descriptor.MessageTypes[13];
        internal__static_gauge_messages_ExecuteStepRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gauge.Messages.ExecuteStepRequest, global::Gauge.Messages.ExecuteStepRequest.Builder>(internal__static_gauge_messages_ExecuteStepRequest__Descriptor,
                new string[] { "ActualStepText", "ParsedStepText", "ScenarioFailing", "Parameters", });
        internal__static_gauge_messages_StepValidateRequest__Descriptor = Descriptor.MessageTypes[14];
        internal__static_gauge_messages_StepValidateRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gauge.Messages.StepValidateRequest, global::Gauge.Messages.StepValidateRequest.Builder>(internal__static_gauge_messages_StepValidateRequest__Descriptor,
                new string[] { "StepText", "NumberOfParameters", });
        internal__static_gauge_messages_StepValidateResponse__Descriptor = Descriptor.MessageTypes[15];
        internal__static_gauge_messages_StepValidateResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gauge.Messages.StepValidateResponse, global::Gauge.Messages.StepValidateResponse.Builder>(internal__static_gauge_messages_StepValidateResponse__Descriptor,
                new string[] { "IsValid", "ErrorMessage", });
        internal__static_gauge_messages_ExecutionEndingRequest__Descriptor = Descriptor.MessageTypes[16];
        internal__static_gauge_messages_ExecutionEndingRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gauge.Messages.ExecutionEndingRequest, global::Gauge.Messages.ExecutionEndingRequest.Builder>(internal__static_gauge_messages_ExecutionEndingRequest__Descriptor,
                new string[] { "CurrentExecutionInfo", });
        internal__static_gauge_messages_SuiteExecutionResult__Descriptor = Descriptor.MessageTypes[17];
        internal__static_gauge_messages_SuiteExecutionResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gauge.Messages.SuiteExecutionResult, global::Gauge.Messages.SuiteExecutionResult.Builder>(internal__static_gauge_messages_SuiteExecutionResult__Descriptor,
                new string[] { "SuiteResult", });
        internal__static_gauge_messages_StepNamesRequest__Descriptor = Descriptor.MessageTypes[18];
        internal__static_gauge_messages_StepNamesRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gauge.Messages.StepNamesRequest, global::Gauge.Messages.StepNamesRequest.Builder>(internal__static_gauge_messages_StepNamesRequest__Descriptor,
                new string[] { });
        internal__static_gauge_messages_StepNamesResponse__Descriptor = Descriptor.MessageTypes[19];
        internal__static_gauge_messages_StepNamesResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gauge.Messages.StepNamesResponse, global::Gauge.Messages.StepNamesResponse.Builder>(internal__static_gauge_messages_StepNamesResponse__Descriptor,
                new string[] { "Steps", });
        internal__static_gauge_messages_ScenarioDataStoreInitRequest__Descriptor = Descriptor.MessageTypes[20];
        internal__static_gauge_messages_ScenarioDataStoreInitRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gauge.Messages.ScenarioDataStoreInitRequest, global::Gauge.Messages.ScenarioDataStoreInitRequest.Builder>(internal__static_gauge_messages_ScenarioDataStoreInitRequest__Descriptor,
                new string[] { });
        internal__static_gauge_messages_SpecDataStoreInitRequest__Descriptor = Descriptor.MessageTypes[21];
        internal__static_gauge_messages_SpecDataStoreInitRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gauge.Messages.SpecDataStoreInitRequest, global::Gauge.Messages.SpecDataStoreInitRequest.Builder>(internal__static_gauge_messages_SpecDataStoreInitRequest__Descriptor,
                new string[] { });
        internal__static_gauge_messages_SuiteDataStoreInitRequest__Descriptor = Descriptor.MessageTypes[22];
        internal__static_gauge_messages_SuiteDataStoreInitRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gauge.Messages.SuiteDataStoreInitRequest, global::Gauge.Messages.SuiteDataStoreInitRequest.Builder>(internal__static_gauge_messages_SuiteDataStoreInitRequest__Descriptor,
                new string[] { });
        internal__static_gauge_messages_ParameterPosition__Descriptor = Descriptor.MessageTypes[23];
        internal__static_gauge_messages_ParameterPosition__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gauge.Messages.ParameterPosition, global::Gauge.Messages.ParameterPosition.Builder>(internal__static_gauge_messages_ParameterPosition__Descriptor,
                new string[] { "OldPosition", "NewPosition", });
        internal__static_gauge_messages_RefactorRequest__Descriptor = Descriptor.MessageTypes[24];
        internal__static_gauge_messages_RefactorRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gauge.Messages.RefactorRequest, global::Gauge.Messages.RefactorRequest.Builder>(internal__static_gauge_messages_RefactorRequest__Descriptor,
                new string[] { "OldStepValue", "NewStepValue", "ParamPositions", });
        internal__static_gauge_messages_RefactorResponse__Descriptor = Descriptor.MessageTypes[25];
        internal__static_gauge_messages_RefactorResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gauge.Messages.RefactorResponse, global::Gauge.Messages.RefactorResponse.Builder>(internal__static_gauge_messages_RefactorResponse__Descriptor,
                new string[] { "Success", "Error", "FilesChanged", });
        internal__static_gauge_messages_StepNameRequest__Descriptor = Descriptor.MessageTypes[26];
        internal__static_gauge_messages_StepNameRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gauge.Messages.StepNameRequest, global::Gauge.Messages.StepNameRequest.Builder>(internal__static_gauge_messages_StepNameRequest__Descriptor,
                new string[] { "StepValue", });
        internal__static_gauge_messages_StepNameResponse__Descriptor = Descriptor.MessageTypes[27];
        internal__static_gauge_messages_StepNameResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gauge.Messages.StepNameResponse, global::Gauge.Messages.StepNameResponse.Builder>(internal__static_gauge_messages_StepNameResponse__Descriptor,
                new string[] { "IsStepPresent", "StepName", "HasAlias", });
        internal__static_gauge_messages_Message__Descriptor = Descriptor.MessageTypes[28];
        internal__static_gauge_messages_Message__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gauge.Messages.Message, global::Gauge.Messages.Message.Builder>(internal__static_gauge_messages_Message__Descriptor,
                new string[] { "MessageType", "MessageId", "ExecutionStartingRequest", "SpecExecutionStartingRequest", "SpecExecutionEndingRequest", "ScenarioExecutionStartingRequest", "ScenarioExecutionEndingRequest", "StepExecutionStartingRequest", "StepExecutionEndingRequest", "ExecuteStepRequest", "ExecutionEndingRequest", "StepValidateRequest", "StepValidateResponse", "ExecutionStatusResponse", "StepNamesRequest", "StepNamesResponse", "SuiteExecutionResult", "KillProcessRequest", "ScenarioDataStoreInitRequest", "SpecDataStoreInitRequest", "SuiteDataStoreInitRequest", "StepNameRequest", "StepNameResponse", "RefactorRequest", "RefactorResponse", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::Gauge.Messages.Spec.Descriptor, 
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class KillProcessRequest : pb::GeneratedMessage<KillProcessRequest, KillProcessRequest.Builder> {
    private KillProcessRequest() { }
    private static readonly KillProcessRequest defaultInstance = new KillProcessRequest().MakeReadOnly();
    private static readonly string[] _killProcessRequestFieldNames = new string[] {  };
    private static readonly uint[] _killProcessRequestFieldTags = new uint[] {  };
    public static KillProcessRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override KillProcessRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override KillProcessRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.Messages.internal__static_gauge_messages_KillProcessRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<KillProcessRequest, KillProcessRequest.Builder> InternalFieldAccessors {
      get { return global::Gauge.Messages.Messages.internal__static_gauge_messages_KillProcessRequest__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _killProcessRequestFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static KillProcessRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static KillProcessRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static KillProcessRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static KillProcessRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static KillProcessRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static KillProcessRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static KillProcessRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static KillProcessRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static KillProcessRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static KillProcessRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private KillProcessRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(KillProcessRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<KillProcessRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(KillProcessRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private KillProcessRequest result;
      
      private KillProcessRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          KillProcessRequest original = result;
          result = new KillProcessRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override KillProcessRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gauge.Messages.KillProcessRequest.Descriptor; }
      }
      
      public override KillProcessRequest DefaultInstanceForType {
        get { return global::Gauge.Messages.KillProcessRequest.DefaultInstance; }
      }
      
      public override KillProcessRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is KillProcessRequest) {
          return MergeFrom((KillProcessRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(KillProcessRequest other) {
        if (other == global::Gauge.Messages.KillProcessRequest.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_killProcessRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _killProcessRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static KillProcessRequest() {
      object.ReferenceEquals(global::Gauge.Messages.Messages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ExecutionStatusResponse : pb::GeneratedMessage<ExecutionStatusResponse, ExecutionStatusResponse.Builder> {
    private ExecutionStatusResponse() { }
    private static readonly ExecutionStatusResponse defaultInstance = new ExecutionStatusResponse().MakeReadOnly();
    private static readonly string[] _executionStatusResponseFieldNames = new string[] { "executionResult" };
    private static readonly uint[] _executionStatusResponseFieldTags = new uint[] { 10 };
    public static ExecutionStatusResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ExecutionStatusResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ExecutionStatusResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.Messages.internal__static_gauge_messages_ExecutionStatusResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ExecutionStatusResponse, ExecutionStatusResponse.Builder> InternalFieldAccessors {
      get { return global::Gauge.Messages.Messages.internal__static_gauge_messages_ExecutionStatusResponse__FieldAccessorTable; }
    }
    
    public const int ExecutionResultFieldNumber = 1;
    private bool hasExecutionResult;
    private global::Gauge.Messages.ProtoExecutionResult executionResult_;
    public bool HasExecutionResult {
      get { return hasExecutionResult; }
    }
    public global::Gauge.Messages.ProtoExecutionResult ExecutionResult {
      get { return executionResult_ ?? global::Gauge.Messages.ProtoExecutionResult.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasExecutionResult) return false;
        if (!ExecutionResult.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _executionStatusResponseFieldNames;
      if (hasExecutionResult) {
        output.WriteMessage(1, field_names[0], ExecutionResult);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasExecutionResult) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, ExecutionResult);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ExecutionStatusResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ExecutionStatusResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ExecutionStatusResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ExecutionStatusResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ExecutionStatusResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ExecutionStatusResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ExecutionStatusResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ExecutionStatusResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ExecutionStatusResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ExecutionStatusResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ExecutionStatusResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ExecutionStatusResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ExecutionStatusResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ExecutionStatusResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ExecutionStatusResponse result;
      
      private ExecutionStatusResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          ExecutionStatusResponse original = result;
          result = new ExecutionStatusResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ExecutionStatusResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gauge.Messages.ExecutionStatusResponse.Descriptor; }
      }
      
      public override ExecutionStatusResponse DefaultInstanceForType {
        get { return global::Gauge.Messages.ExecutionStatusResponse.DefaultInstance; }
      }
      
      public override ExecutionStatusResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ExecutionStatusResponse) {
          return MergeFrom((ExecutionStatusResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ExecutionStatusResponse other) {
        if (other == global::Gauge.Messages.ExecutionStatusResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasExecutionResult) {
          MergeExecutionResult(other.ExecutionResult);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_executionStatusResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _executionStatusResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Gauge.Messages.ProtoExecutionResult.Builder subBuilder = global::Gauge.Messages.ProtoExecutionResult.CreateBuilder();
              if (result.hasExecutionResult) {
                subBuilder.MergeFrom(ExecutionResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ExecutionResult = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasExecutionResult {
       get { return result.hasExecutionResult; }
      }
      public global::Gauge.Messages.ProtoExecutionResult ExecutionResult {
        get { return result.ExecutionResult; }
        set { SetExecutionResult(value); }
      }
      public Builder SetExecutionResult(global::Gauge.Messages.ProtoExecutionResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasExecutionResult = true;
        result.executionResult_ = value;
        return this;
      }
      public Builder SetExecutionResult(global::Gauge.Messages.ProtoExecutionResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasExecutionResult = true;
        result.executionResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeExecutionResult(global::Gauge.Messages.ProtoExecutionResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasExecutionResult &&
            result.executionResult_ != global::Gauge.Messages.ProtoExecutionResult.DefaultInstance) {
            result.executionResult_ = global::Gauge.Messages.ProtoExecutionResult.CreateBuilder(result.executionResult_).MergeFrom(value).BuildPartial();
        } else {
          result.executionResult_ = value;
        }
        result.hasExecutionResult = true;
        return this;
      }
      public Builder ClearExecutionResult() {
        PrepareBuilder();
        result.hasExecutionResult = false;
        result.executionResult_ = null;
        return this;
      }
    }
    static ExecutionStatusResponse() {
      object.ReferenceEquals(global::Gauge.Messages.Messages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ExecutionStartingRequest : pb::GeneratedMessage<ExecutionStartingRequest, ExecutionStartingRequest.Builder> {
    private ExecutionStartingRequest() { }
    private static readonly ExecutionStartingRequest defaultInstance = new ExecutionStartingRequest().MakeReadOnly();
    private static readonly string[] _executionStartingRequestFieldNames = new string[] { "currentExecutionInfo" };
    private static readonly uint[] _executionStartingRequestFieldTags = new uint[] { 10 };
    public static ExecutionStartingRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ExecutionStartingRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ExecutionStartingRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.Messages.internal__static_gauge_messages_ExecutionStartingRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ExecutionStartingRequest, ExecutionStartingRequest.Builder> InternalFieldAccessors {
      get { return global::Gauge.Messages.Messages.internal__static_gauge_messages_ExecutionStartingRequest__FieldAccessorTable; }
    }
    
    public const int CurrentExecutionInfoFieldNumber = 1;
    private bool hasCurrentExecutionInfo;
    private global::Gauge.Messages.ExecutionInfo currentExecutionInfo_;
    public bool HasCurrentExecutionInfo {
      get { return hasCurrentExecutionInfo; }
    }
    public global::Gauge.Messages.ExecutionInfo CurrentExecutionInfo {
      get { return currentExecutionInfo_ ?? global::Gauge.Messages.ExecutionInfo.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasCurrentExecutionInfo) {
          if (!CurrentExecutionInfo.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _executionStartingRequestFieldNames;
      if (hasCurrentExecutionInfo) {
        output.WriteMessage(1, field_names[0], CurrentExecutionInfo);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasCurrentExecutionInfo) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, CurrentExecutionInfo);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ExecutionStartingRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ExecutionStartingRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ExecutionStartingRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ExecutionStartingRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ExecutionStartingRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ExecutionStartingRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ExecutionStartingRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ExecutionStartingRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ExecutionStartingRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ExecutionStartingRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ExecutionStartingRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ExecutionStartingRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ExecutionStartingRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ExecutionStartingRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ExecutionStartingRequest result;
      
      private ExecutionStartingRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          ExecutionStartingRequest original = result;
          result = new ExecutionStartingRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ExecutionStartingRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gauge.Messages.ExecutionStartingRequest.Descriptor; }
      }
      
      public override ExecutionStartingRequest DefaultInstanceForType {
        get { return global::Gauge.Messages.ExecutionStartingRequest.DefaultInstance; }
      }
      
      public override ExecutionStartingRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ExecutionStartingRequest) {
          return MergeFrom((ExecutionStartingRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ExecutionStartingRequest other) {
        if (other == global::Gauge.Messages.ExecutionStartingRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCurrentExecutionInfo) {
          MergeCurrentExecutionInfo(other.CurrentExecutionInfo);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_executionStartingRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _executionStartingRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Gauge.Messages.ExecutionInfo.Builder subBuilder = global::Gauge.Messages.ExecutionInfo.CreateBuilder();
              if (result.hasCurrentExecutionInfo) {
                subBuilder.MergeFrom(CurrentExecutionInfo);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              CurrentExecutionInfo = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCurrentExecutionInfo {
       get { return result.hasCurrentExecutionInfo; }
      }
      public global::Gauge.Messages.ExecutionInfo CurrentExecutionInfo {
        get { return result.CurrentExecutionInfo; }
        set { SetCurrentExecutionInfo(value); }
      }
      public Builder SetCurrentExecutionInfo(global::Gauge.Messages.ExecutionInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCurrentExecutionInfo = true;
        result.currentExecutionInfo_ = value;
        return this;
      }
      public Builder SetCurrentExecutionInfo(global::Gauge.Messages.ExecutionInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCurrentExecutionInfo = true;
        result.currentExecutionInfo_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCurrentExecutionInfo(global::Gauge.Messages.ExecutionInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCurrentExecutionInfo &&
            result.currentExecutionInfo_ != global::Gauge.Messages.ExecutionInfo.DefaultInstance) {
            result.currentExecutionInfo_ = global::Gauge.Messages.ExecutionInfo.CreateBuilder(result.currentExecutionInfo_).MergeFrom(value).BuildPartial();
        } else {
          result.currentExecutionInfo_ = value;
        }
        result.hasCurrentExecutionInfo = true;
        return this;
      }
      public Builder ClearCurrentExecutionInfo() {
        PrepareBuilder();
        result.hasCurrentExecutionInfo = false;
        result.currentExecutionInfo_ = null;
        return this;
      }
    }
    static ExecutionStartingRequest() {
      object.ReferenceEquals(global::Gauge.Messages.Messages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SpecExecutionStartingRequest : pb::GeneratedMessage<SpecExecutionStartingRequest, SpecExecutionStartingRequest.Builder> {
    private SpecExecutionStartingRequest() { }
    private static readonly SpecExecutionStartingRequest defaultInstance = new SpecExecutionStartingRequest().MakeReadOnly();
    private static readonly string[] _specExecutionStartingRequestFieldNames = new string[] { "currentExecutionInfo" };
    private static readonly uint[] _specExecutionStartingRequestFieldTags = new uint[] { 10 };
    public static SpecExecutionStartingRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SpecExecutionStartingRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SpecExecutionStartingRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.Messages.internal__static_gauge_messages_SpecExecutionStartingRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SpecExecutionStartingRequest, SpecExecutionStartingRequest.Builder> InternalFieldAccessors {
      get { return global::Gauge.Messages.Messages.internal__static_gauge_messages_SpecExecutionStartingRequest__FieldAccessorTable; }
    }
    
    public const int CurrentExecutionInfoFieldNumber = 1;
    private bool hasCurrentExecutionInfo;
    private global::Gauge.Messages.ExecutionInfo currentExecutionInfo_;
    public bool HasCurrentExecutionInfo {
      get { return hasCurrentExecutionInfo; }
    }
    public global::Gauge.Messages.ExecutionInfo CurrentExecutionInfo {
      get { return currentExecutionInfo_ ?? global::Gauge.Messages.ExecutionInfo.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasCurrentExecutionInfo) {
          if (!CurrentExecutionInfo.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _specExecutionStartingRequestFieldNames;
      if (hasCurrentExecutionInfo) {
        output.WriteMessage(1, field_names[0], CurrentExecutionInfo);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasCurrentExecutionInfo) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, CurrentExecutionInfo);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SpecExecutionStartingRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SpecExecutionStartingRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SpecExecutionStartingRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SpecExecutionStartingRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SpecExecutionStartingRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SpecExecutionStartingRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SpecExecutionStartingRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SpecExecutionStartingRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SpecExecutionStartingRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SpecExecutionStartingRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SpecExecutionStartingRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SpecExecutionStartingRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SpecExecutionStartingRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SpecExecutionStartingRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SpecExecutionStartingRequest result;
      
      private SpecExecutionStartingRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          SpecExecutionStartingRequest original = result;
          result = new SpecExecutionStartingRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SpecExecutionStartingRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gauge.Messages.SpecExecutionStartingRequest.Descriptor; }
      }
      
      public override SpecExecutionStartingRequest DefaultInstanceForType {
        get { return global::Gauge.Messages.SpecExecutionStartingRequest.DefaultInstance; }
      }
      
      public override SpecExecutionStartingRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SpecExecutionStartingRequest) {
          return MergeFrom((SpecExecutionStartingRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SpecExecutionStartingRequest other) {
        if (other == global::Gauge.Messages.SpecExecutionStartingRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCurrentExecutionInfo) {
          MergeCurrentExecutionInfo(other.CurrentExecutionInfo);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_specExecutionStartingRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _specExecutionStartingRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Gauge.Messages.ExecutionInfo.Builder subBuilder = global::Gauge.Messages.ExecutionInfo.CreateBuilder();
              if (result.hasCurrentExecutionInfo) {
                subBuilder.MergeFrom(CurrentExecutionInfo);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              CurrentExecutionInfo = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCurrentExecutionInfo {
       get { return result.hasCurrentExecutionInfo; }
      }
      public global::Gauge.Messages.ExecutionInfo CurrentExecutionInfo {
        get { return result.CurrentExecutionInfo; }
        set { SetCurrentExecutionInfo(value); }
      }
      public Builder SetCurrentExecutionInfo(global::Gauge.Messages.ExecutionInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCurrentExecutionInfo = true;
        result.currentExecutionInfo_ = value;
        return this;
      }
      public Builder SetCurrentExecutionInfo(global::Gauge.Messages.ExecutionInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCurrentExecutionInfo = true;
        result.currentExecutionInfo_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCurrentExecutionInfo(global::Gauge.Messages.ExecutionInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCurrentExecutionInfo &&
            result.currentExecutionInfo_ != global::Gauge.Messages.ExecutionInfo.DefaultInstance) {
            result.currentExecutionInfo_ = global::Gauge.Messages.ExecutionInfo.CreateBuilder(result.currentExecutionInfo_).MergeFrom(value).BuildPartial();
        } else {
          result.currentExecutionInfo_ = value;
        }
        result.hasCurrentExecutionInfo = true;
        return this;
      }
      public Builder ClearCurrentExecutionInfo() {
        PrepareBuilder();
        result.hasCurrentExecutionInfo = false;
        result.currentExecutionInfo_ = null;
        return this;
      }
    }
    static SpecExecutionStartingRequest() {
      object.ReferenceEquals(global::Gauge.Messages.Messages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SpecExecutionEndingRequest : pb::GeneratedMessage<SpecExecutionEndingRequest, SpecExecutionEndingRequest.Builder> {
    private SpecExecutionEndingRequest() { }
    private static readonly SpecExecutionEndingRequest defaultInstance = new SpecExecutionEndingRequest().MakeReadOnly();
    private static readonly string[] _specExecutionEndingRequestFieldNames = new string[] { "currentExecutionInfo" };
    private static readonly uint[] _specExecutionEndingRequestFieldTags = new uint[] { 10 };
    public static SpecExecutionEndingRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SpecExecutionEndingRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SpecExecutionEndingRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.Messages.internal__static_gauge_messages_SpecExecutionEndingRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SpecExecutionEndingRequest, SpecExecutionEndingRequest.Builder> InternalFieldAccessors {
      get { return global::Gauge.Messages.Messages.internal__static_gauge_messages_SpecExecutionEndingRequest__FieldAccessorTable; }
    }
    
    public const int CurrentExecutionInfoFieldNumber = 1;
    private bool hasCurrentExecutionInfo;
    private global::Gauge.Messages.ExecutionInfo currentExecutionInfo_;
    public bool HasCurrentExecutionInfo {
      get { return hasCurrentExecutionInfo; }
    }
    public global::Gauge.Messages.ExecutionInfo CurrentExecutionInfo {
      get { return currentExecutionInfo_ ?? global::Gauge.Messages.ExecutionInfo.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasCurrentExecutionInfo) {
          if (!CurrentExecutionInfo.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _specExecutionEndingRequestFieldNames;
      if (hasCurrentExecutionInfo) {
        output.WriteMessage(1, field_names[0], CurrentExecutionInfo);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasCurrentExecutionInfo) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, CurrentExecutionInfo);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SpecExecutionEndingRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SpecExecutionEndingRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SpecExecutionEndingRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SpecExecutionEndingRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SpecExecutionEndingRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SpecExecutionEndingRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SpecExecutionEndingRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SpecExecutionEndingRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SpecExecutionEndingRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SpecExecutionEndingRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SpecExecutionEndingRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SpecExecutionEndingRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SpecExecutionEndingRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SpecExecutionEndingRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SpecExecutionEndingRequest result;
      
      private SpecExecutionEndingRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          SpecExecutionEndingRequest original = result;
          result = new SpecExecutionEndingRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SpecExecutionEndingRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gauge.Messages.SpecExecutionEndingRequest.Descriptor; }
      }
      
      public override SpecExecutionEndingRequest DefaultInstanceForType {
        get { return global::Gauge.Messages.SpecExecutionEndingRequest.DefaultInstance; }
      }
      
      public override SpecExecutionEndingRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SpecExecutionEndingRequest) {
          return MergeFrom((SpecExecutionEndingRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SpecExecutionEndingRequest other) {
        if (other == global::Gauge.Messages.SpecExecutionEndingRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCurrentExecutionInfo) {
          MergeCurrentExecutionInfo(other.CurrentExecutionInfo);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_specExecutionEndingRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _specExecutionEndingRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Gauge.Messages.ExecutionInfo.Builder subBuilder = global::Gauge.Messages.ExecutionInfo.CreateBuilder();
              if (result.hasCurrentExecutionInfo) {
                subBuilder.MergeFrom(CurrentExecutionInfo);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              CurrentExecutionInfo = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCurrentExecutionInfo {
       get { return result.hasCurrentExecutionInfo; }
      }
      public global::Gauge.Messages.ExecutionInfo CurrentExecutionInfo {
        get { return result.CurrentExecutionInfo; }
        set { SetCurrentExecutionInfo(value); }
      }
      public Builder SetCurrentExecutionInfo(global::Gauge.Messages.ExecutionInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCurrentExecutionInfo = true;
        result.currentExecutionInfo_ = value;
        return this;
      }
      public Builder SetCurrentExecutionInfo(global::Gauge.Messages.ExecutionInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCurrentExecutionInfo = true;
        result.currentExecutionInfo_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCurrentExecutionInfo(global::Gauge.Messages.ExecutionInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCurrentExecutionInfo &&
            result.currentExecutionInfo_ != global::Gauge.Messages.ExecutionInfo.DefaultInstance) {
            result.currentExecutionInfo_ = global::Gauge.Messages.ExecutionInfo.CreateBuilder(result.currentExecutionInfo_).MergeFrom(value).BuildPartial();
        } else {
          result.currentExecutionInfo_ = value;
        }
        result.hasCurrentExecutionInfo = true;
        return this;
      }
      public Builder ClearCurrentExecutionInfo() {
        PrepareBuilder();
        result.hasCurrentExecutionInfo = false;
        result.currentExecutionInfo_ = null;
        return this;
      }
    }
    static SpecExecutionEndingRequest() {
      object.ReferenceEquals(global::Gauge.Messages.Messages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ScenarioExecutionStartingRequest : pb::GeneratedMessage<ScenarioExecutionStartingRequest, ScenarioExecutionStartingRequest.Builder> {
    private ScenarioExecutionStartingRequest() { }
    private static readonly ScenarioExecutionStartingRequest defaultInstance = new ScenarioExecutionStartingRequest().MakeReadOnly();
    private static readonly string[] _scenarioExecutionStartingRequestFieldNames = new string[] { "currentExecutionInfo" };
    private static readonly uint[] _scenarioExecutionStartingRequestFieldTags = new uint[] { 10 };
    public static ScenarioExecutionStartingRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ScenarioExecutionStartingRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ScenarioExecutionStartingRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.Messages.internal__static_gauge_messages_ScenarioExecutionStartingRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ScenarioExecutionStartingRequest, ScenarioExecutionStartingRequest.Builder> InternalFieldAccessors {
      get { return global::Gauge.Messages.Messages.internal__static_gauge_messages_ScenarioExecutionStartingRequest__FieldAccessorTable; }
    }
    
    public const int CurrentExecutionInfoFieldNumber = 1;
    private bool hasCurrentExecutionInfo;
    private global::Gauge.Messages.ExecutionInfo currentExecutionInfo_;
    public bool HasCurrentExecutionInfo {
      get { return hasCurrentExecutionInfo; }
    }
    public global::Gauge.Messages.ExecutionInfo CurrentExecutionInfo {
      get { return currentExecutionInfo_ ?? global::Gauge.Messages.ExecutionInfo.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasCurrentExecutionInfo) {
          if (!CurrentExecutionInfo.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _scenarioExecutionStartingRequestFieldNames;
      if (hasCurrentExecutionInfo) {
        output.WriteMessage(1, field_names[0], CurrentExecutionInfo);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasCurrentExecutionInfo) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, CurrentExecutionInfo);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ScenarioExecutionStartingRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ScenarioExecutionStartingRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ScenarioExecutionStartingRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ScenarioExecutionStartingRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ScenarioExecutionStartingRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ScenarioExecutionStartingRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ScenarioExecutionStartingRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ScenarioExecutionStartingRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ScenarioExecutionStartingRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ScenarioExecutionStartingRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ScenarioExecutionStartingRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ScenarioExecutionStartingRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ScenarioExecutionStartingRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ScenarioExecutionStartingRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ScenarioExecutionStartingRequest result;
      
      private ScenarioExecutionStartingRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          ScenarioExecutionStartingRequest original = result;
          result = new ScenarioExecutionStartingRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ScenarioExecutionStartingRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gauge.Messages.ScenarioExecutionStartingRequest.Descriptor; }
      }
      
      public override ScenarioExecutionStartingRequest DefaultInstanceForType {
        get { return global::Gauge.Messages.ScenarioExecutionStartingRequest.DefaultInstance; }
      }
      
      public override ScenarioExecutionStartingRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ScenarioExecutionStartingRequest) {
          return MergeFrom((ScenarioExecutionStartingRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ScenarioExecutionStartingRequest other) {
        if (other == global::Gauge.Messages.ScenarioExecutionStartingRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCurrentExecutionInfo) {
          MergeCurrentExecutionInfo(other.CurrentExecutionInfo);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_scenarioExecutionStartingRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _scenarioExecutionStartingRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Gauge.Messages.ExecutionInfo.Builder subBuilder = global::Gauge.Messages.ExecutionInfo.CreateBuilder();
              if (result.hasCurrentExecutionInfo) {
                subBuilder.MergeFrom(CurrentExecutionInfo);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              CurrentExecutionInfo = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCurrentExecutionInfo {
       get { return result.hasCurrentExecutionInfo; }
      }
      public global::Gauge.Messages.ExecutionInfo CurrentExecutionInfo {
        get { return result.CurrentExecutionInfo; }
        set { SetCurrentExecutionInfo(value); }
      }
      public Builder SetCurrentExecutionInfo(global::Gauge.Messages.ExecutionInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCurrentExecutionInfo = true;
        result.currentExecutionInfo_ = value;
        return this;
      }
      public Builder SetCurrentExecutionInfo(global::Gauge.Messages.ExecutionInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCurrentExecutionInfo = true;
        result.currentExecutionInfo_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCurrentExecutionInfo(global::Gauge.Messages.ExecutionInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCurrentExecutionInfo &&
            result.currentExecutionInfo_ != global::Gauge.Messages.ExecutionInfo.DefaultInstance) {
            result.currentExecutionInfo_ = global::Gauge.Messages.ExecutionInfo.CreateBuilder(result.currentExecutionInfo_).MergeFrom(value).BuildPartial();
        } else {
          result.currentExecutionInfo_ = value;
        }
        result.hasCurrentExecutionInfo = true;
        return this;
      }
      public Builder ClearCurrentExecutionInfo() {
        PrepareBuilder();
        result.hasCurrentExecutionInfo = false;
        result.currentExecutionInfo_ = null;
        return this;
      }
    }
    static ScenarioExecutionStartingRequest() {
      object.ReferenceEquals(global::Gauge.Messages.Messages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ScenarioExecutionEndingRequest : pb::GeneratedMessage<ScenarioExecutionEndingRequest, ScenarioExecutionEndingRequest.Builder> {
    private ScenarioExecutionEndingRequest() { }
    private static readonly ScenarioExecutionEndingRequest defaultInstance = new ScenarioExecutionEndingRequest().MakeReadOnly();
    private static readonly string[] _scenarioExecutionEndingRequestFieldNames = new string[] { "currentExecutionInfo" };
    private static readonly uint[] _scenarioExecutionEndingRequestFieldTags = new uint[] { 10 };
    public static ScenarioExecutionEndingRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ScenarioExecutionEndingRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ScenarioExecutionEndingRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.Messages.internal__static_gauge_messages_ScenarioExecutionEndingRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ScenarioExecutionEndingRequest, ScenarioExecutionEndingRequest.Builder> InternalFieldAccessors {
      get { return global::Gauge.Messages.Messages.internal__static_gauge_messages_ScenarioExecutionEndingRequest__FieldAccessorTable; }
    }
    
    public const int CurrentExecutionInfoFieldNumber = 1;
    private bool hasCurrentExecutionInfo;
    private global::Gauge.Messages.ExecutionInfo currentExecutionInfo_;
    public bool HasCurrentExecutionInfo {
      get { return hasCurrentExecutionInfo; }
    }
    public global::Gauge.Messages.ExecutionInfo CurrentExecutionInfo {
      get { return currentExecutionInfo_ ?? global::Gauge.Messages.ExecutionInfo.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasCurrentExecutionInfo) {
          if (!CurrentExecutionInfo.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _scenarioExecutionEndingRequestFieldNames;
      if (hasCurrentExecutionInfo) {
        output.WriteMessage(1, field_names[0], CurrentExecutionInfo);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasCurrentExecutionInfo) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, CurrentExecutionInfo);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ScenarioExecutionEndingRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ScenarioExecutionEndingRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ScenarioExecutionEndingRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ScenarioExecutionEndingRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ScenarioExecutionEndingRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ScenarioExecutionEndingRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ScenarioExecutionEndingRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ScenarioExecutionEndingRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ScenarioExecutionEndingRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ScenarioExecutionEndingRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ScenarioExecutionEndingRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ScenarioExecutionEndingRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ScenarioExecutionEndingRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ScenarioExecutionEndingRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ScenarioExecutionEndingRequest result;
      
      private ScenarioExecutionEndingRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          ScenarioExecutionEndingRequest original = result;
          result = new ScenarioExecutionEndingRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ScenarioExecutionEndingRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gauge.Messages.ScenarioExecutionEndingRequest.Descriptor; }
      }
      
      public override ScenarioExecutionEndingRequest DefaultInstanceForType {
        get { return global::Gauge.Messages.ScenarioExecutionEndingRequest.DefaultInstance; }
      }
      
      public override ScenarioExecutionEndingRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ScenarioExecutionEndingRequest) {
          return MergeFrom((ScenarioExecutionEndingRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ScenarioExecutionEndingRequest other) {
        if (other == global::Gauge.Messages.ScenarioExecutionEndingRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCurrentExecutionInfo) {
          MergeCurrentExecutionInfo(other.CurrentExecutionInfo);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_scenarioExecutionEndingRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _scenarioExecutionEndingRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Gauge.Messages.ExecutionInfo.Builder subBuilder = global::Gauge.Messages.ExecutionInfo.CreateBuilder();
              if (result.hasCurrentExecutionInfo) {
                subBuilder.MergeFrom(CurrentExecutionInfo);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              CurrentExecutionInfo = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCurrentExecutionInfo {
       get { return result.hasCurrentExecutionInfo; }
      }
      public global::Gauge.Messages.ExecutionInfo CurrentExecutionInfo {
        get { return result.CurrentExecutionInfo; }
        set { SetCurrentExecutionInfo(value); }
      }
      public Builder SetCurrentExecutionInfo(global::Gauge.Messages.ExecutionInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCurrentExecutionInfo = true;
        result.currentExecutionInfo_ = value;
        return this;
      }
      public Builder SetCurrentExecutionInfo(global::Gauge.Messages.ExecutionInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCurrentExecutionInfo = true;
        result.currentExecutionInfo_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCurrentExecutionInfo(global::Gauge.Messages.ExecutionInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCurrentExecutionInfo &&
            result.currentExecutionInfo_ != global::Gauge.Messages.ExecutionInfo.DefaultInstance) {
            result.currentExecutionInfo_ = global::Gauge.Messages.ExecutionInfo.CreateBuilder(result.currentExecutionInfo_).MergeFrom(value).BuildPartial();
        } else {
          result.currentExecutionInfo_ = value;
        }
        result.hasCurrentExecutionInfo = true;
        return this;
      }
      public Builder ClearCurrentExecutionInfo() {
        PrepareBuilder();
        result.hasCurrentExecutionInfo = false;
        result.currentExecutionInfo_ = null;
        return this;
      }
    }
    static ScenarioExecutionEndingRequest() {
      object.ReferenceEquals(global::Gauge.Messages.Messages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class StepExecutionStartingRequest : pb::GeneratedMessage<StepExecutionStartingRequest, StepExecutionStartingRequest.Builder> {
    private StepExecutionStartingRequest() { }
    private static readonly StepExecutionStartingRequest defaultInstance = new StepExecutionStartingRequest().MakeReadOnly();
    private static readonly string[] _stepExecutionStartingRequestFieldNames = new string[] { "currentExecutionInfo" };
    private static readonly uint[] _stepExecutionStartingRequestFieldTags = new uint[] { 10 };
    public static StepExecutionStartingRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override StepExecutionStartingRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override StepExecutionStartingRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.Messages.internal__static_gauge_messages_StepExecutionStartingRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<StepExecutionStartingRequest, StepExecutionStartingRequest.Builder> InternalFieldAccessors {
      get { return global::Gauge.Messages.Messages.internal__static_gauge_messages_StepExecutionStartingRequest__FieldAccessorTable; }
    }
    
    public const int CurrentExecutionInfoFieldNumber = 1;
    private bool hasCurrentExecutionInfo;
    private global::Gauge.Messages.ExecutionInfo currentExecutionInfo_;
    public bool HasCurrentExecutionInfo {
      get { return hasCurrentExecutionInfo; }
    }
    public global::Gauge.Messages.ExecutionInfo CurrentExecutionInfo {
      get { return currentExecutionInfo_ ?? global::Gauge.Messages.ExecutionInfo.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasCurrentExecutionInfo) {
          if (!CurrentExecutionInfo.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _stepExecutionStartingRequestFieldNames;
      if (hasCurrentExecutionInfo) {
        output.WriteMessage(1, field_names[0], CurrentExecutionInfo);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasCurrentExecutionInfo) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, CurrentExecutionInfo);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static StepExecutionStartingRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StepExecutionStartingRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StepExecutionStartingRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StepExecutionStartingRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StepExecutionStartingRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StepExecutionStartingRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static StepExecutionStartingRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static StepExecutionStartingRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static StepExecutionStartingRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StepExecutionStartingRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private StepExecutionStartingRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(StepExecutionStartingRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<StepExecutionStartingRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(StepExecutionStartingRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private StepExecutionStartingRequest result;
      
      private StepExecutionStartingRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          StepExecutionStartingRequest original = result;
          result = new StepExecutionStartingRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override StepExecutionStartingRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gauge.Messages.StepExecutionStartingRequest.Descriptor; }
      }
      
      public override StepExecutionStartingRequest DefaultInstanceForType {
        get { return global::Gauge.Messages.StepExecutionStartingRequest.DefaultInstance; }
      }
      
      public override StepExecutionStartingRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is StepExecutionStartingRequest) {
          return MergeFrom((StepExecutionStartingRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(StepExecutionStartingRequest other) {
        if (other == global::Gauge.Messages.StepExecutionStartingRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCurrentExecutionInfo) {
          MergeCurrentExecutionInfo(other.CurrentExecutionInfo);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_stepExecutionStartingRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _stepExecutionStartingRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Gauge.Messages.ExecutionInfo.Builder subBuilder = global::Gauge.Messages.ExecutionInfo.CreateBuilder();
              if (result.hasCurrentExecutionInfo) {
                subBuilder.MergeFrom(CurrentExecutionInfo);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              CurrentExecutionInfo = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCurrentExecutionInfo {
       get { return result.hasCurrentExecutionInfo; }
      }
      public global::Gauge.Messages.ExecutionInfo CurrentExecutionInfo {
        get { return result.CurrentExecutionInfo; }
        set { SetCurrentExecutionInfo(value); }
      }
      public Builder SetCurrentExecutionInfo(global::Gauge.Messages.ExecutionInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCurrentExecutionInfo = true;
        result.currentExecutionInfo_ = value;
        return this;
      }
      public Builder SetCurrentExecutionInfo(global::Gauge.Messages.ExecutionInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCurrentExecutionInfo = true;
        result.currentExecutionInfo_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCurrentExecutionInfo(global::Gauge.Messages.ExecutionInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCurrentExecutionInfo &&
            result.currentExecutionInfo_ != global::Gauge.Messages.ExecutionInfo.DefaultInstance) {
            result.currentExecutionInfo_ = global::Gauge.Messages.ExecutionInfo.CreateBuilder(result.currentExecutionInfo_).MergeFrom(value).BuildPartial();
        } else {
          result.currentExecutionInfo_ = value;
        }
        result.hasCurrentExecutionInfo = true;
        return this;
      }
      public Builder ClearCurrentExecutionInfo() {
        PrepareBuilder();
        result.hasCurrentExecutionInfo = false;
        result.currentExecutionInfo_ = null;
        return this;
      }
    }
    static StepExecutionStartingRequest() {
      object.ReferenceEquals(global::Gauge.Messages.Messages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class StepExecutionEndingRequest : pb::GeneratedMessage<StepExecutionEndingRequest, StepExecutionEndingRequest.Builder> {
    private StepExecutionEndingRequest() { }
    private static readonly StepExecutionEndingRequest defaultInstance = new StepExecutionEndingRequest().MakeReadOnly();
    private static readonly string[] _stepExecutionEndingRequestFieldNames = new string[] { "currentExecutionInfo" };
    private static readonly uint[] _stepExecutionEndingRequestFieldTags = new uint[] { 10 };
    public static StepExecutionEndingRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override StepExecutionEndingRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override StepExecutionEndingRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.Messages.internal__static_gauge_messages_StepExecutionEndingRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<StepExecutionEndingRequest, StepExecutionEndingRequest.Builder> InternalFieldAccessors {
      get { return global::Gauge.Messages.Messages.internal__static_gauge_messages_StepExecutionEndingRequest__FieldAccessorTable; }
    }
    
    public const int CurrentExecutionInfoFieldNumber = 1;
    private bool hasCurrentExecutionInfo;
    private global::Gauge.Messages.ExecutionInfo currentExecutionInfo_;
    public bool HasCurrentExecutionInfo {
      get { return hasCurrentExecutionInfo; }
    }
    public global::Gauge.Messages.ExecutionInfo CurrentExecutionInfo {
      get { return currentExecutionInfo_ ?? global::Gauge.Messages.ExecutionInfo.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasCurrentExecutionInfo) {
          if (!CurrentExecutionInfo.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _stepExecutionEndingRequestFieldNames;
      if (hasCurrentExecutionInfo) {
        output.WriteMessage(1, field_names[0], CurrentExecutionInfo);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasCurrentExecutionInfo) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, CurrentExecutionInfo);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static StepExecutionEndingRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StepExecutionEndingRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StepExecutionEndingRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StepExecutionEndingRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StepExecutionEndingRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StepExecutionEndingRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static StepExecutionEndingRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static StepExecutionEndingRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static StepExecutionEndingRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StepExecutionEndingRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private StepExecutionEndingRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(StepExecutionEndingRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<StepExecutionEndingRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(StepExecutionEndingRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private StepExecutionEndingRequest result;
      
      private StepExecutionEndingRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          StepExecutionEndingRequest original = result;
          result = new StepExecutionEndingRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override StepExecutionEndingRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gauge.Messages.StepExecutionEndingRequest.Descriptor; }
      }
      
      public override StepExecutionEndingRequest DefaultInstanceForType {
        get { return global::Gauge.Messages.StepExecutionEndingRequest.DefaultInstance; }
      }
      
      public override StepExecutionEndingRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is StepExecutionEndingRequest) {
          return MergeFrom((StepExecutionEndingRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(StepExecutionEndingRequest other) {
        if (other == global::Gauge.Messages.StepExecutionEndingRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCurrentExecutionInfo) {
          MergeCurrentExecutionInfo(other.CurrentExecutionInfo);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_stepExecutionEndingRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _stepExecutionEndingRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Gauge.Messages.ExecutionInfo.Builder subBuilder = global::Gauge.Messages.ExecutionInfo.CreateBuilder();
              if (result.hasCurrentExecutionInfo) {
                subBuilder.MergeFrom(CurrentExecutionInfo);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              CurrentExecutionInfo = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCurrentExecutionInfo {
       get { return result.hasCurrentExecutionInfo; }
      }
      public global::Gauge.Messages.ExecutionInfo CurrentExecutionInfo {
        get { return result.CurrentExecutionInfo; }
        set { SetCurrentExecutionInfo(value); }
      }
      public Builder SetCurrentExecutionInfo(global::Gauge.Messages.ExecutionInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCurrentExecutionInfo = true;
        result.currentExecutionInfo_ = value;
        return this;
      }
      public Builder SetCurrentExecutionInfo(global::Gauge.Messages.ExecutionInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCurrentExecutionInfo = true;
        result.currentExecutionInfo_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCurrentExecutionInfo(global::Gauge.Messages.ExecutionInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCurrentExecutionInfo &&
            result.currentExecutionInfo_ != global::Gauge.Messages.ExecutionInfo.DefaultInstance) {
            result.currentExecutionInfo_ = global::Gauge.Messages.ExecutionInfo.CreateBuilder(result.currentExecutionInfo_).MergeFrom(value).BuildPartial();
        } else {
          result.currentExecutionInfo_ = value;
        }
        result.hasCurrentExecutionInfo = true;
        return this;
      }
      public Builder ClearCurrentExecutionInfo() {
        PrepareBuilder();
        result.hasCurrentExecutionInfo = false;
        result.currentExecutionInfo_ = null;
        return this;
      }
    }
    static StepExecutionEndingRequest() {
      object.ReferenceEquals(global::Gauge.Messages.Messages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ExecutionInfo : pb::GeneratedMessage<ExecutionInfo, ExecutionInfo.Builder> {
    private ExecutionInfo() { }
    private static readonly ExecutionInfo defaultInstance = new ExecutionInfo().MakeReadOnly();
    private static readonly string[] _executionInfoFieldNames = new string[] { "currentScenario", "currentSpec", "currentStep", "stacktrace" };
    private static readonly uint[] _executionInfoFieldTags = new uint[] { 18, 10, 26, 34 };
    public static ExecutionInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ExecutionInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ExecutionInfo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.Messages.internal__static_gauge_messages_ExecutionInfo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ExecutionInfo, ExecutionInfo.Builder> InternalFieldAccessors {
      get { return global::Gauge.Messages.Messages.internal__static_gauge_messages_ExecutionInfo__FieldAccessorTable; }
    }
    
    public const int CurrentSpecFieldNumber = 1;
    private bool hasCurrentSpec;
    private global::Gauge.Messages.SpecInfo currentSpec_;
    public bool HasCurrentSpec {
      get { return hasCurrentSpec; }
    }
    public global::Gauge.Messages.SpecInfo CurrentSpec {
      get { return currentSpec_ ?? global::Gauge.Messages.SpecInfo.DefaultInstance; }
    }
    
    public const int CurrentScenarioFieldNumber = 2;
    private bool hasCurrentScenario;
    private global::Gauge.Messages.ScenarioInfo currentScenario_;
    public bool HasCurrentScenario {
      get { return hasCurrentScenario; }
    }
    public global::Gauge.Messages.ScenarioInfo CurrentScenario {
      get { return currentScenario_ ?? global::Gauge.Messages.ScenarioInfo.DefaultInstance; }
    }
    
    public const int CurrentStepFieldNumber = 3;
    private bool hasCurrentStep;
    private global::Gauge.Messages.StepInfo currentStep_;
    public bool HasCurrentStep {
      get { return hasCurrentStep; }
    }
    public global::Gauge.Messages.StepInfo CurrentStep {
      get { return currentStep_ ?? global::Gauge.Messages.StepInfo.DefaultInstance; }
    }
    
    public const int StacktraceFieldNumber = 4;
    private bool hasStacktrace;
    private string stacktrace_ = "";
    public bool HasStacktrace {
      get { return hasStacktrace; }
    }
    public string Stacktrace {
      get { return stacktrace_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasCurrentSpec) {
          if (!CurrentSpec.IsInitialized) return false;
        }
        if (HasCurrentScenario) {
          if (!CurrentScenario.IsInitialized) return false;
        }
        if (HasCurrentStep) {
          if (!CurrentStep.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _executionInfoFieldNames;
      if (hasCurrentSpec) {
        output.WriteMessage(1, field_names[1], CurrentSpec);
      }
      if (hasCurrentScenario) {
        output.WriteMessage(2, field_names[0], CurrentScenario);
      }
      if (hasCurrentStep) {
        output.WriteMessage(3, field_names[2], CurrentStep);
      }
      if (hasStacktrace) {
        output.WriteString(4, field_names[3], Stacktrace);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasCurrentSpec) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, CurrentSpec);
        }
        if (hasCurrentScenario) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, CurrentScenario);
        }
        if (hasCurrentStep) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, CurrentStep);
        }
        if (hasStacktrace) {
          size += pb::CodedOutputStream.ComputeStringSize(4, Stacktrace);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ExecutionInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ExecutionInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ExecutionInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ExecutionInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ExecutionInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ExecutionInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ExecutionInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ExecutionInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ExecutionInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ExecutionInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ExecutionInfo MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ExecutionInfo prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ExecutionInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ExecutionInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ExecutionInfo result;
      
      private ExecutionInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          ExecutionInfo original = result;
          result = new ExecutionInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ExecutionInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gauge.Messages.ExecutionInfo.Descriptor; }
      }
      
      public override ExecutionInfo DefaultInstanceForType {
        get { return global::Gauge.Messages.ExecutionInfo.DefaultInstance; }
      }
      
      public override ExecutionInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ExecutionInfo) {
          return MergeFrom((ExecutionInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ExecutionInfo other) {
        if (other == global::Gauge.Messages.ExecutionInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCurrentSpec) {
          MergeCurrentSpec(other.CurrentSpec);
        }
        if (other.HasCurrentScenario) {
          MergeCurrentScenario(other.CurrentScenario);
        }
        if (other.HasCurrentStep) {
          MergeCurrentStep(other.CurrentStep);
        }
        if (other.HasStacktrace) {
          Stacktrace = other.Stacktrace;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_executionInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _executionInfoFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Gauge.Messages.SpecInfo.Builder subBuilder = global::Gauge.Messages.SpecInfo.CreateBuilder();
              if (result.hasCurrentSpec) {
                subBuilder.MergeFrom(CurrentSpec);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              CurrentSpec = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::Gauge.Messages.ScenarioInfo.Builder subBuilder = global::Gauge.Messages.ScenarioInfo.CreateBuilder();
              if (result.hasCurrentScenario) {
                subBuilder.MergeFrom(CurrentScenario);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              CurrentScenario = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::Gauge.Messages.StepInfo.Builder subBuilder = global::Gauge.Messages.StepInfo.CreateBuilder();
              if (result.hasCurrentStep) {
                subBuilder.MergeFrom(CurrentStep);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              CurrentStep = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              result.hasStacktrace = input.ReadString(ref result.stacktrace_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCurrentSpec {
       get { return result.hasCurrentSpec; }
      }
      public global::Gauge.Messages.SpecInfo CurrentSpec {
        get { return result.CurrentSpec; }
        set { SetCurrentSpec(value); }
      }
      public Builder SetCurrentSpec(global::Gauge.Messages.SpecInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCurrentSpec = true;
        result.currentSpec_ = value;
        return this;
      }
      public Builder SetCurrentSpec(global::Gauge.Messages.SpecInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCurrentSpec = true;
        result.currentSpec_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCurrentSpec(global::Gauge.Messages.SpecInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCurrentSpec &&
            result.currentSpec_ != global::Gauge.Messages.SpecInfo.DefaultInstance) {
            result.currentSpec_ = global::Gauge.Messages.SpecInfo.CreateBuilder(result.currentSpec_).MergeFrom(value).BuildPartial();
        } else {
          result.currentSpec_ = value;
        }
        result.hasCurrentSpec = true;
        return this;
      }
      public Builder ClearCurrentSpec() {
        PrepareBuilder();
        result.hasCurrentSpec = false;
        result.currentSpec_ = null;
        return this;
      }
      
      public bool HasCurrentScenario {
       get { return result.hasCurrentScenario; }
      }
      public global::Gauge.Messages.ScenarioInfo CurrentScenario {
        get { return result.CurrentScenario; }
        set { SetCurrentScenario(value); }
      }
      public Builder SetCurrentScenario(global::Gauge.Messages.ScenarioInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCurrentScenario = true;
        result.currentScenario_ = value;
        return this;
      }
      public Builder SetCurrentScenario(global::Gauge.Messages.ScenarioInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCurrentScenario = true;
        result.currentScenario_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCurrentScenario(global::Gauge.Messages.ScenarioInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCurrentScenario &&
            result.currentScenario_ != global::Gauge.Messages.ScenarioInfo.DefaultInstance) {
            result.currentScenario_ = global::Gauge.Messages.ScenarioInfo.CreateBuilder(result.currentScenario_).MergeFrom(value).BuildPartial();
        } else {
          result.currentScenario_ = value;
        }
        result.hasCurrentScenario = true;
        return this;
      }
      public Builder ClearCurrentScenario() {
        PrepareBuilder();
        result.hasCurrentScenario = false;
        result.currentScenario_ = null;
        return this;
      }
      
      public bool HasCurrentStep {
       get { return result.hasCurrentStep; }
      }
      public global::Gauge.Messages.StepInfo CurrentStep {
        get { return result.CurrentStep; }
        set { SetCurrentStep(value); }
      }
      public Builder SetCurrentStep(global::Gauge.Messages.StepInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCurrentStep = true;
        result.currentStep_ = value;
        return this;
      }
      public Builder SetCurrentStep(global::Gauge.Messages.StepInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCurrentStep = true;
        result.currentStep_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCurrentStep(global::Gauge.Messages.StepInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCurrentStep &&
            result.currentStep_ != global::Gauge.Messages.StepInfo.DefaultInstance) {
            result.currentStep_ = global::Gauge.Messages.StepInfo.CreateBuilder(result.currentStep_).MergeFrom(value).BuildPartial();
        } else {
          result.currentStep_ = value;
        }
        result.hasCurrentStep = true;
        return this;
      }
      public Builder ClearCurrentStep() {
        PrepareBuilder();
        result.hasCurrentStep = false;
        result.currentStep_ = null;
        return this;
      }
      
      public bool HasStacktrace {
        get { return result.hasStacktrace; }
      }
      public string Stacktrace {
        get { return result.Stacktrace; }
        set { SetStacktrace(value); }
      }
      public Builder SetStacktrace(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStacktrace = true;
        result.stacktrace_ = value;
        return this;
      }
      public Builder ClearStacktrace() {
        PrepareBuilder();
        result.hasStacktrace = false;
        result.stacktrace_ = "";
        return this;
      }
    }
    static ExecutionInfo() {
      object.ReferenceEquals(global::Gauge.Messages.Messages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SpecInfo : pb::GeneratedMessage<SpecInfo, SpecInfo.Builder> {
    private SpecInfo() { }
    private static readonly SpecInfo defaultInstance = new SpecInfo().MakeReadOnly();
    private static readonly string[] _specInfoFieldNames = new string[] { "fileName", "isFailed", "name", "tags" };
    private static readonly uint[] _specInfoFieldTags = new uint[] { 18, 24, 10, 34 };
    public static SpecInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SpecInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SpecInfo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.Messages.internal__static_gauge_messages_SpecInfo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SpecInfo, SpecInfo.Builder> InternalFieldAccessors {
      get { return global::Gauge.Messages.Messages.internal__static_gauge_messages_SpecInfo__FieldAccessorTable; }
    }
    
    public const int NameFieldNumber = 1;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public const int FileNameFieldNumber = 2;
    private bool hasFileName;
    private string fileName_ = "";
    public bool HasFileName {
      get { return hasFileName; }
    }
    public string FileName {
      get { return fileName_; }
    }
    
    public const int IsFailedFieldNumber = 3;
    private bool hasIsFailed;
    private bool isFailed_;
    public bool HasIsFailed {
      get { return hasIsFailed; }
    }
    public bool IsFailed {
      get { return isFailed_; }
    }
    
    public const int TagsFieldNumber = 4;
    private pbc::PopsicleList<string> tags_ = new pbc::PopsicleList<string>();
    public scg::IList<string> TagsList {
      get { return pbc::Lists.AsReadOnly(tags_); }
    }
    public int TagsCount {
      get { return tags_.Count; }
    }
    public string GetTags(int index) {
      return tags_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasName) return false;
        if (!hasFileName) return false;
        if (!hasIsFailed) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _specInfoFieldNames;
      if (hasName) {
        output.WriteString(1, field_names[2], Name);
      }
      if (hasFileName) {
        output.WriteString(2, field_names[0], FileName);
      }
      if (hasIsFailed) {
        output.WriteBool(3, field_names[1], IsFailed);
      }
      if (tags_.Count > 0) {
        output.WriteStringArray(4, field_names[3], tags_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasName) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Name);
        }
        if (hasFileName) {
          size += pb::CodedOutputStream.ComputeStringSize(2, FileName);
        }
        if (hasIsFailed) {
          size += pb::CodedOutputStream.ComputeBoolSize(3, IsFailed);
        }
        {
          int dataSize = 0;
          foreach (string element in TagsList) {
            dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
          }
          size += dataSize;
          size += 1 * tags_.Count;
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SpecInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SpecInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SpecInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SpecInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SpecInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SpecInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SpecInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SpecInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SpecInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SpecInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SpecInfo MakeReadOnly() {
      tags_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SpecInfo prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SpecInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SpecInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SpecInfo result;
      
      private SpecInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          SpecInfo original = result;
          result = new SpecInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SpecInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gauge.Messages.SpecInfo.Descriptor; }
      }
      
      public override SpecInfo DefaultInstanceForType {
        get { return global::Gauge.Messages.SpecInfo.DefaultInstance; }
      }
      
      public override SpecInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SpecInfo) {
          return MergeFrom((SpecInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SpecInfo other) {
        if (other == global::Gauge.Messages.SpecInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.HasFileName) {
          FileName = other.FileName;
        }
        if (other.HasIsFailed) {
          IsFailed = other.IsFailed;
        }
        if (other.tags_.Count != 0) {
          result.tags_.Add(other.tags_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_specInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _specInfoFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasName = input.ReadString(ref result.name_);
              break;
            }
            case 18: {
              result.hasFileName = input.ReadString(ref result.fileName_);
              break;
            }
            case 24: {
              result.hasIsFailed = input.ReadBool(ref result.isFailed_);
              break;
            }
            case 34: {
              input.ReadStringArray(tag, field_name, result.tags_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "";
        return this;
      }
      
      public bool HasFileName {
        get { return result.hasFileName; }
      }
      public string FileName {
        get { return result.FileName; }
        set { SetFileName(value); }
      }
      public Builder SetFileName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFileName = true;
        result.fileName_ = value;
        return this;
      }
      public Builder ClearFileName() {
        PrepareBuilder();
        result.hasFileName = false;
        result.fileName_ = "";
        return this;
      }
      
      public bool HasIsFailed {
        get { return result.hasIsFailed; }
      }
      public bool IsFailed {
        get { return result.IsFailed; }
        set { SetIsFailed(value); }
      }
      public Builder SetIsFailed(bool value) {
        PrepareBuilder();
        result.hasIsFailed = true;
        result.isFailed_ = value;
        return this;
      }
      public Builder ClearIsFailed() {
        PrepareBuilder();
        result.hasIsFailed = false;
        result.isFailed_ = false;
        return this;
      }
      
      public pbc::IPopsicleList<string> TagsList {
        get { return PrepareBuilder().tags_; }
      }
      public int TagsCount {
        get { return result.TagsCount; }
      }
      public string GetTags(int index) {
        return result.GetTags(index);
      }
      public Builder SetTags(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.tags_[index] = value;
        return this;
      }
      public Builder AddTags(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.tags_.Add(value);
        return this;
      }
      public Builder AddRangeTags(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.tags_.Add(values);
        return this;
      }
      public Builder ClearTags() {
        PrepareBuilder();
        result.tags_.Clear();
        return this;
      }
    }
    static SpecInfo() {
      object.ReferenceEquals(global::Gauge.Messages.Messages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ScenarioInfo : pb::GeneratedMessage<ScenarioInfo, ScenarioInfo.Builder> {
    private ScenarioInfo() { }
    private static readonly ScenarioInfo defaultInstance = new ScenarioInfo().MakeReadOnly();
    private static readonly string[] _scenarioInfoFieldNames = new string[] { "isFailed", "name", "tags" };
    private static readonly uint[] _scenarioInfoFieldTags = new uint[] { 16, 10, 26 };
    public static ScenarioInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ScenarioInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ScenarioInfo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.Messages.internal__static_gauge_messages_ScenarioInfo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ScenarioInfo, ScenarioInfo.Builder> InternalFieldAccessors {
      get { return global::Gauge.Messages.Messages.internal__static_gauge_messages_ScenarioInfo__FieldAccessorTable; }
    }
    
    public const int NameFieldNumber = 1;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public const int IsFailedFieldNumber = 2;
    private bool hasIsFailed;
    private bool isFailed_;
    public bool HasIsFailed {
      get { return hasIsFailed; }
    }
    public bool IsFailed {
      get { return isFailed_; }
    }
    
    public const int TagsFieldNumber = 3;
    private pbc::PopsicleList<string> tags_ = new pbc::PopsicleList<string>();
    public scg::IList<string> TagsList {
      get { return pbc::Lists.AsReadOnly(tags_); }
    }
    public int TagsCount {
      get { return tags_.Count; }
    }
    public string GetTags(int index) {
      return tags_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasName) return false;
        if (!hasIsFailed) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _scenarioInfoFieldNames;
      if (hasName) {
        output.WriteString(1, field_names[1], Name);
      }
      if (hasIsFailed) {
        output.WriteBool(2, field_names[0], IsFailed);
      }
      if (tags_.Count > 0) {
        output.WriteStringArray(3, field_names[2], tags_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasName) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Name);
        }
        if (hasIsFailed) {
          size += pb::CodedOutputStream.ComputeBoolSize(2, IsFailed);
        }
        {
          int dataSize = 0;
          foreach (string element in TagsList) {
            dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
          }
          size += dataSize;
          size += 1 * tags_.Count;
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ScenarioInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ScenarioInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ScenarioInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ScenarioInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ScenarioInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ScenarioInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ScenarioInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ScenarioInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ScenarioInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ScenarioInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ScenarioInfo MakeReadOnly() {
      tags_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ScenarioInfo prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ScenarioInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ScenarioInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ScenarioInfo result;
      
      private ScenarioInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          ScenarioInfo original = result;
          result = new ScenarioInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ScenarioInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gauge.Messages.ScenarioInfo.Descriptor; }
      }
      
      public override ScenarioInfo DefaultInstanceForType {
        get { return global::Gauge.Messages.ScenarioInfo.DefaultInstance; }
      }
      
      public override ScenarioInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ScenarioInfo) {
          return MergeFrom((ScenarioInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ScenarioInfo other) {
        if (other == global::Gauge.Messages.ScenarioInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.HasIsFailed) {
          IsFailed = other.IsFailed;
        }
        if (other.tags_.Count != 0) {
          result.tags_.Add(other.tags_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_scenarioInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _scenarioInfoFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasName = input.ReadString(ref result.name_);
              break;
            }
            case 16: {
              result.hasIsFailed = input.ReadBool(ref result.isFailed_);
              break;
            }
            case 26: {
              input.ReadStringArray(tag, field_name, result.tags_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "";
        return this;
      }
      
      public bool HasIsFailed {
        get { return result.hasIsFailed; }
      }
      public bool IsFailed {
        get { return result.IsFailed; }
        set { SetIsFailed(value); }
      }
      public Builder SetIsFailed(bool value) {
        PrepareBuilder();
        result.hasIsFailed = true;
        result.isFailed_ = value;
        return this;
      }
      public Builder ClearIsFailed() {
        PrepareBuilder();
        result.hasIsFailed = false;
        result.isFailed_ = false;
        return this;
      }
      
      public pbc::IPopsicleList<string> TagsList {
        get { return PrepareBuilder().tags_; }
      }
      public int TagsCount {
        get { return result.TagsCount; }
      }
      public string GetTags(int index) {
        return result.GetTags(index);
      }
      public Builder SetTags(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.tags_[index] = value;
        return this;
      }
      public Builder AddTags(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.tags_.Add(value);
        return this;
      }
      public Builder AddRangeTags(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.tags_.Add(values);
        return this;
      }
      public Builder ClearTags() {
        PrepareBuilder();
        result.tags_.Clear();
        return this;
      }
    }
    static ScenarioInfo() {
      object.ReferenceEquals(global::Gauge.Messages.Messages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class StepInfo : pb::GeneratedMessage<StepInfo, StepInfo.Builder> {
    private StepInfo() { }
    private static readonly StepInfo defaultInstance = new StepInfo().MakeReadOnly();
    private static readonly string[] _stepInfoFieldNames = new string[] { "isFailed", "step" };
    private static readonly uint[] _stepInfoFieldTags = new uint[] { 16, 10 };
    public static StepInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override StepInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override StepInfo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.Messages.internal__static_gauge_messages_StepInfo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<StepInfo, StepInfo.Builder> InternalFieldAccessors {
      get { return global::Gauge.Messages.Messages.internal__static_gauge_messages_StepInfo__FieldAccessorTable; }
    }
    
    public const int StepFieldNumber = 1;
    private bool hasStep;
    private global::Gauge.Messages.ExecuteStepRequest step_;
    public bool HasStep {
      get { return hasStep; }
    }
    public global::Gauge.Messages.ExecuteStepRequest Step {
      get { return step_ ?? global::Gauge.Messages.ExecuteStepRequest.DefaultInstance; }
    }
    
    public const int IsFailedFieldNumber = 2;
    private bool hasIsFailed;
    private bool isFailed_;
    public bool HasIsFailed {
      get { return hasIsFailed; }
    }
    public bool IsFailed {
      get { return isFailed_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasStep) return false;
        if (!hasIsFailed) return false;
        if (!Step.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _stepInfoFieldNames;
      if (hasStep) {
        output.WriteMessage(1, field_names[1], Step);
      }
      if (hasIsFailed) {
        output.WriteBool(2, field_names[0], IsFailed);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasStep) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Step);
        }
        if (hasIsFailed) {
          size += pb::CodedOutputStream.ComputeBoolSize(2, IsFailed);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static StepInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StepInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StepInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StepInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StepInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StepInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static StepInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static StepInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static StepInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StepInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private StepInfo MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(StepInfo prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<StepInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(StepInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private StepInfo result;
      
      private StepInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          StepInfo original = result;
          result = new StepInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override StepInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gauge.Messages.StepInfo.Descriptor; }
      }
      
      public override StepInfo DefaultInstanceForType {
        get { return global::Gauge.Messages.StepInfo.DefaultInstance; }
      }
      
      public override StepInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is StepInfo) {
          return MergeFrom((StepInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(StepInfo other) {
        if (other == global::Gauge.Messages.StepInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasStep) {
          MergeStep(other.Step);
        }
        if (other.HasIsFailed) {
          IsFailed = other.IsFailed;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_stepInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _stepInfoFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Gauge.Messages.ExecuteStepRequest.Builder subBuilder = global::Gauge.Messages.ExecuteStepRequest.CreateBuilder();
              if (result.hasStep) {
                subBuilder.MergeFrom(Step);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Step = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasIsFailed = input.ReadBool(ref result.isFailed_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasStep {
       get { return result.hasStep; }
      }
      public global::Gauge.Messages.ExecuteStepRequest Step {
        get { return result.Step; }
        set { SetStep(value); }
      }
      public Builder SetStep(global::Gauge.Messages.ExecuteStepRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStep = true;
        result.step_ = value;
        return this;
      }
      public Builder SetStep(global::Gauge.Messages.ExecuteStepRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasStep = true;
        result.step_ = builderForValue.Build();
        return this;
      }
      public Builder MergeStep(global::Gauge.Messages.ExecuteStepRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasStep &&
            result.step_ != global::Gauge.Messages.ExecuteStepRequest.DefaultInstance) {
            result.step_ = global::Gauge.Messages.ExecuteStepRequest.CreateBuilder(result.step_).MergeFrom(value).BuildPartial();
        } else {
          result.step_ = value;
        }
        result.hasStep = true;
        return this;
      }
      public Builder ClearStep() {
        PrepareBuilder();
        result.hasStep = false;
        result.step_ = null;
        return this;
      }
      
      public bool HasIsFailed {
        get { return result.hasIsFailed; }
      }
      public bool IsFailed {
        get { return result.IsFailed; }
        set { SetIsFailed(value); }
      }
      public Builder SetIsFailed(bool value) {
        PrepareBuilder();
        result.hasIsFailed = true;
        result.isFailed_ = value;
        return this;
      }
      public Builder ClearIsFailed() {
        PrepareBuilder();
        result.hasIsFailed = false;
        result.isFailed_ = false;
        return this;
      }
    }
    static StepInfo() {
      object.ReferenceEquals(global::Gauge.Messages.Messages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ExecuteStepRequest : pb::GeneratedMessage<ExecuteStepRequest, ExecuteStepRequest.Builder> {
    private ExecuteStepRequest() { }
    private static readonly ExecuteStepRequest defaultInstance = new ExecuteStepRequest().MakeReadOnly();
    private static readonly string[] _executeStepRequestFieldNames = new string[] { "actualStepText", "parameters", "parsedStepText", "scenarioFailing" };
    private static readonly uint[] _executeStepRequestFieldTags = new uint[] { 10, 34, 18, 24 };
    public static ExecuteStepRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ExecuteStepRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ExecuteStepRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.Messages.internal__static_gauge_messages_ExecuteStepRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ExecuteStepRequest, ExecuteStepRequest.Builder> InternalFieldAccessors {
      get { return global::Gauge.Messages.Messages.internal__static_gauge_messages_ExecuteStepRequest__FieldAccessorTable; }
    }
    
    public const int ActualStepTextFieldNumber = 1;
    private bool hasActualStepText;
    private string actualStepText_ = "";
    public bool HasActualStepText {
      get { return hasActualStepText; }
    }
    public string ActualStepText {
      get { return actualStepText_; }
    }
    
    public const int ParsedStepTextFieldNumber = 2;
    private bool hasParsedStepText;
    private string parsedStepText_ = "";
    public bool HasParsedStepText {
      get { return hasParsedStepText; }
    }
    public string ParsedStepText {
      get { return parsedStepText_; }
    }
    
    public const int ScenarioFailingFieldNumber = 3;
    private bool hasScenarioFailing;
    private bool scenarioFailing_;
    public bool HasScenarioFailing {
      get { return hasScenarioFailing; }
    }
    public bool ScenarioFailing {
      get { return scenarioFailing_; }
    }
    
    public const int ParametersFieldNumber = 4;
    private pbc::PopsicleList<global::Gauge.Messages.Parameter> parameters_ = new pbc::PopsicleList<global::Gauge.Messages.Parameter>();
    public scg::IList<global::Gauge.Messages.Parameter> ParametersList {
      get { return parameters_; }
    }
    public int ParametersCount {
      get { return parameters_.Count; }
    }
    public global::Gauge.Messages.Parameter GetParameters(int index) {
      return parameters_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasActualStepText) return false;
        if (!hasParsedStepText) return false;
        foreach (global::Gauge.Messages.Parameter element in ParametersList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _executeStepRequestFieldNames;
      if (hasActualStepText) {
        output.WriteString(1, field_names[0], ActualStepText);
      }
      if (hasParsedStepText) {
        output.WriteString(2, field_names[2], ParsedStepText);
      }
      if (hasScenarioFailing) {
        output.WriteBool(3, field_names[3], ScenarioFailing);
      }
      if (parameters_.Count > 0) {
        output.WriteMessageArray(4, field_names[1], parameters_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasActualStepText) {
          size += pb::CodedOutputStream.ComputeStringSize(1, ActualStepText);
        }
        if (hasParsedStepText) {
          size += pb::CodedOutputStream.ComputeStringSize(2, ParsedStepText);
        }
        if (hasScenarioFailing) {
          size += pb::CodedOutputStream.ComputeBoolSize(3, ScenarioFailing);
        }
        foreach (global::Gauge.Messages.Parameter element in ParametersList) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ExecuteStepRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ExecuteStepRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ExecuteStepRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ExecuteStepRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ExecuteStepRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ExecuteStepRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ExecuteStepRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ExecuteStepRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ExecuteStepRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ExecuteStepRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ExecuteStepRequest MakeReadOnly() {
      parameters_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ExecuteStepRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ExecuteStepRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ExecuteStepRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ExecuteStepRequest result;
      
      private ExecuteStepRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          ExecuteStepRequest original = result;
          result = new ExecuteStepRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ExecuteStepRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gauge.Messages.ExecuteStepRequest.Descriptor; }
      }
      
      public override ExecuteStepRequest DefaultInstanceForType {
        get { return global::Gauge.Messages.ExecuteStepRequest.DefaultInstance; }
      }
      
      public override ExecuteStepRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ExecuteStepRequest) {
          return MergeFrom((ExecuteStepRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ExecuteStepRequest other) {
        if (other == global::Gauge.Messages.ExecuteStepRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasActualStepText) {
          ActualStepText = other.ActualStepText;
        }
        if (other.HasParsedStepText) {
          ParsedStepText = other.ParsedStepText;
        }
        if (other.HasScenarioFailing) {
          ScenarioFailing = other.ScenarioFailing;
        }
        if (other.parameters_.Count != 0) {
          result.parameters_.Add(other.parameters_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_executeStepRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _executeStepRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasActualStepText = input.ReadString(ref result.actualStepText_);
              break;
            }
            case 18: {
              result.hasParsedStepText = input.ReadString(ref result.parsedStepText_);
              break;
            }
            case 24: {
              result.hasScenarioFailing = input.ReadBool(ref result.scenarioFailing_);
              break;
            }
            case 34: {
              input.ReadMessageArray(tag, field_name, result.parameters_, global::Gauge.Messages.Parameter.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasActualStepText {
        get { return result.hasActualStepText; }
      }
      public string ActualStepText {
        get { return result.ActualStepText; }
        set { SetActualStepText(value); }
      }
      public Builder SetActualStepText(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasActualStepText = true;
        result.actualStepText_ = value;
        return this;
      }
      public Builder ClearActualStepText() {
        PrepareBuilder();
        result.hasActualStepText = false;
        result.actualStepText_ = "";
        return this;
      }
      
      public bool HasParsedStepText {
        get { return result.hasParsedStepText; }
      }
      public string ParsedStepText {
        get { return result.ParsedStepText; }
        set { SetParsedStepText(value); }
      }
      public Builder SetParsedStepText(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasParsedStepText = true;
        result.parsedStepText_ = value;
        return this;
      }
      public Builder ClearParsedStepText() {
        PrepareBuilder();
        result.hasParsedStepText = false;
        result.parsedStepText_ = "";
        return this;
      }
      
      public bool HasScenarioFailing {
        get { return result.hasScenarioFailing; }
      }
      public bool ScenarioFailing {
        get { return result.ScenarioFailing; }
        set { SetScenarioFailing(value); }
      }
      public Builder SetScenarioFailing(bool value) {
        PrepareBuilder();
        result.hasScenarioFailing = true;
        result.scenarioFailing_ = value;
        return this;
      }
      public Builder ClearScenarioFailing() {
        PrepareBuilder();
        result.hasScenarioFailing = false;
        result.scenarioFailing_ = false;
        return this;
      }
      
      public pbc::IPopsicleList<global::Gauge.Messages.Parameter> ParametersList {
        get { return PrepareBuilder().parameters_; }
      }
      public int ParametersCount {
        get { return result.ParametersCount; }
      }
      public global::Gauge.Messages.Parameter GetParameters(int index) {
        return result.GetParameters(index);
      }
      public Builder SetParameters(int index, global::Gauge.Messages.Parameter value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.parameters_[index] = value;
        return this;
      }
      public Builder SetParameters(int index, global::Gauge.Messages.Parameter.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.parameters_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddParameters(global::Gauge.Messages.Parameter value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.parameters_.Add(value);
        return this;
      }
      public Builder AddParameters(global::Gauge.Messages.Parameter.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.parameters_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeParameters(scg::IEnumerable<global::Gauge.Messages.Parameter> values) {
        PrepareBuilder();
        result.parameters_.Add(values);
        return this;
      }
      public Builder ClearParameters() {
        PrepareBuilder();
        result.parameters_.Clear();
        return this;
      }
    }
    static ExecuteStepRequest() {
      object.ReferenceEquals(global::Gauge.Messages.Messages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class StepValidateRequest : pb::GeneratedMessage<StepValidateRequest, StepValidateRequest.Builder> {
    private StepValidateRequest() { }
    private static readonly StepValidateRequest defaultInstance = new StepValidateRequest().MakeReadOnly();
    private static readonly string[] _stepValidateRequestFieldNames = new string[] { "numberOfParameters", "stepText" };
    private static readonly uint[] _stepValidateRequestFieldTags = new uint[] { 16, 10 };
    public static StepValidateRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override StepValidateRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override StepValidateRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.Messages.internal__static_gauge_messages_StepValidateRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<StepValidateRequest, StepValidateRequest.Builder> InternalFieldAccessors {
      get { return global::Gauge.Messages.Messages.internal__static_gauge_messages_StepValidateRequest__FieldAccessorTable; }
    }
    
    public const int StepTextFieldNumber = 1;
    private bool hasStepText;
    private string stepText_ = "";
    public bool HasStepText {
      get { return hasStepText; }
    }
    public string StepText {
      get { return stepText_; }
    }
    
    public const int NumberOfParametersFieldNumber = 2;
    private bool hasNumberOfParameters;
    private int numberOfParameters_;
    public bool HasNumberOfParameters {
      get { return hasNumberOfParameters; }
    }
    public int NumberOfParameters {
      get { return numberOfParameters_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasStepText) return false;
        if (!hasNumberOfParameters) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _stepValidateRequestFieldNames;
      if (hasStepText) {
        output.WriteString(1, field_names[1], StepText);
      }
      if (hasNumberOfParameters) {
        output.WriteInt32(2, field_names[0], NumberOfParameters);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasStepText) {
          size += pb::CodedOutputStream.ComputeStringSize(1, StepText);
        }
        if (hasNumberOfParameters) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, NumberOfParameters);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static StepValidateRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StepValidateRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StepValidateRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StepValidateRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StepValidateRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StepValidateRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static StepValidateRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static StepValidateRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static StepValidateRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StepValidateRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private StepValidateRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(StepValidateRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<StepValidateRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(StepValidateRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private StepValidateRequest result;
      
      private StepValidateRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          StepValidateRequest original = result;
          result = new StepValidateRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override StepValidateRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gauge.Messages.StepValidateRequest.Descriptor; }
      }
      
      public override StepValidateRequest DefaultInstanceForType {
        get { return global::Gauge.Messages.StepValidateRequest.DefaultInstance; }
      }
      
      public override StepValidateRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is StepValidateRequest) {
          return MergeFrom((StepValidateRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(StepValidateRequest other) {
        if (other == global::Gauge.Messages.StepValidateRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasStepText) {
          StepText = other.StepText;
        }
        if (other.HasNumberOfParameters) {
          NumberOfParameters = other.NumberOfParameters;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_stepValidateRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _stepValidateRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasStepText = input.ReadString(ref result.stepText_);
              break;
            }
            case 16: {
              result.hasNumberOfParameters = input.ReadInt32(ref result.numberOfParameters_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasStepText {
        get { return result.hasStepText; }
      }
      public string StepText {
        get { return result.StepText; }
        set { SetStepText(value); }
      }
      public Builder SetStepText(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStepText = true;
        result.stepText_ = value;
        return this;
      }
      public Builder ClearStepText() {
        PrepareBuilder();
        result.hasStepText = false;
        result.stepText_ = "";
        return this;
      }
      
      public bool HasNumberOfParameters {
        get { return result.hasNumberOfParameters; }
      }
      public int NumberOfParameters {
        get { return result.NumberOfParameters; }
        set { SetNumberOfParameters(value); }
      }
      public Builder SetNumberOfParameters(int value) {
        PrepareBuilder();
        result.hasNumberOfParameters = true;
        result.numberOfParameters_ = value;
        return this;
      }
      public Builder ClearNumberOfParameters() {
        PrepareBuilder();
        result.hasNumberOfParameters = false;
        result.numberOfParameters_ = 0;
        return this;
      }
    }
    static StepValidateRequest() {
      object.ReferenceEquals(global::Gauge.Messages.Messages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class StepValidateResponse : pb::GeneratedMessage<StepValidateResponse, StepValidateResponse.Builder> {
    private StepValidateResponse() { }
    private static readonly StepValidateResponse defaultInstance = new StepValidateResponse().MakeReadOnly();
    private static readonly string[] _stepValidateResponseFieldNames = new string[] { "errorMessage", "isValid" };
    private static readonly uint[] _stepValidateResponseFieldTags = new uint[] { 18, 8 };
    public static StepValidateResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override StepValidateResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override StepValidateResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.Messages.internal__static_gauge_messages_StepValidateResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<StepValidateResponse, StepValidateResponse.Builder> InternalFieldAccessors {
      get { return global::Gauge.Messages.Messages.internal__static_gauge_messages_StepValidateResponse__FieldAccessorTable; }
    }
    
    public const int IsValidFieldNumber = 1;
    private bool hasIsValid;
    private bool isValid_;
    public bool HasIsValid {
      get { return hasIsValid; }
    }
    public bool IsValid {
      get { return isValid_; }
    }
    
    public const int ErrorMessageFieldNumber = 2;
    private bool hasErrorMessage;
    private string errorMessage_ = "";
    public bool HasErrorMessage {
      get { return hasErrorMessage; }
    }
    public string ErrorMessage {
      get { return errorMessage_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasIsValid) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _stepValidateResponseFieldNames;
      if (hasIsValid) {
        output.WriteBool(1, field_names[1], IsValid);
      }
      if (hasErrorMessage) {
        output.WriteString(2, field_names[0], ErrorMessage);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasIsValid) {
          size += pb::CodedOutputStream.ComputeBoolSize(1, IsValid);
        }
        if (hasErrorMessage) {
          size += pb::CodedOutputStream.ComputeStringSize(2, ErrorMessage);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static StepValidateResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StepValidateResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StepValidateResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StepValidateResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StepValidateResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StepValidateResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static StepValidateResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static StepValidateResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static StepValidateResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StepValidateResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private StepValidateResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(StepValidateResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<StepValidateResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(StepValidateResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private StepValidateResponse result;
      
      private StepValidateResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          StepValidateResponse original = result;
          result = new StepValidateResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override StepValidateResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gauge.Messages.StepValidateResponse.Descriptor; }
      }
      
      public override StepValidateResponse DefaultInstanceForType {
        get { return global::Gauge.Messages.StepValidateResponse.DefaultInstance; }
      }
      
      public override StepValidateResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is StepValidateResponse) {
          return MergeFrom((StepValidateResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(StepValidateResponse other) {
        if (other == global::Gauge.Messages.StepValidateResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasIsValid) {
          IsValid = other.IsValid;
        }
        if (other.HasErrorMessage) {
          ErrorMessage = other.ErrorMessage;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_stepValidateResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _stepValidateResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasIsValid = input.ReadBool(ref result.isValid_);
              break;
            }
            case 18: {
              result.hasErrorMessage = input.ReadString(ref result.errorMessage_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasIsValid {
        get { return result.hasIsValid; }
      }
      public bool IsValid {
        get { return result.IsValid; }
        set { SetIsValid(value); }
      }
      public Builder SetIsValid(bool value) {
        PrepareBuilder();
        result.hasIsValid = true;
        result.isValid_ = value;
        return this;
      }
      public Builder ClearIsValid() {
        PrepareBuilder();
        result.hasIsValid = false;
        result.isValid_ = false;
        return this;
      }
      
      public bool HasErrorMessage {
        get { return result.hasErrorMessage; }
      }
      public string ErrorMessage {
        get { return result.ErrorMessage; }
        set { SetErrorMessage(value); }
      }
      public Builder SetErrorMessage(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasErrorMessage = true;
        result.errorMessage_ = value;
        return this;
      }
      public Builder ClearErrorMessage() {
        PrepareBuilder();
        result.hasErrorMessage = false;
        result.errorMessage_ = "";
        return this;
      }
    }
    static StepValidateResponse() {
      object.ReferenceEquals(global::Gauge.Messages.Messages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ExecutionEndingRequest : pb::GeneratedMessage<ExecutionEndingRequest, ExecutionEndingRequest.Builder> {
    private ExecutionEndingRequest() { }
    private static readonly ExecutionEndingRequest defaultInstance = new ExecutionEndingRequest().MakeReadOnly();
    private static readonly string[] _executionEndingRequestFieldNames = new string[] { "currentExecutionInfo" };
    private static readonly uint[] _executionEndingRequestFieldTags = new uint[] { 10 };
    public static ExecutionEndingRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ExecutionEndingRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ExecutionEndingRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.Messages.internal__static_gauge_messages_ExecutionEndingRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ExecutionEndingRequest, ExecutionEndingRequest.Builder> InternalFieldAccessors {
      get { return global::Gauge.Messages.Messages.internal__static_gauge_messages_ExecutionEndingRequest__FieldAccessorTable; }
    }
    
    public const int CurrentExecutionInfoFieldNumber = 1;
    private bool hasCurrentExecutionInfo;
    private global::Gauge.Messages.ExecutionInfo currentExecutionInfo_;
    public bool HasCurrentExecutionInfo {
      get { return hasCurrentExecutionInfo; }
    }
    public global::Gauge.Messages.ExecutionInfo CurrentExecutionInfo {
      get { return currentExecutionInfo_ ?? global::Gauge.Messages.ExecutionInfo.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasCurrentExecutionInfo) {
          if (!CurrentExecutionInfo.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _executionEndingRequestFieldNames;
      if (hasCurrentExecutionInfo) {
        output.WriteMessage(1, field_names[0], CurrentExecutionInfo);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasCurrentExecutionInfo) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, CurrentExecutionInfo);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ExecutionEndingRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ExecutionEndingRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ExecutionEndingRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ExecutionEndingRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ExecutionEndingRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ExecutionEndingRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ExecutionEndingRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ExecutionEndingRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ExecutionEndingRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ExecutionEndingRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ExecutionEndingRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ExecutionEndingRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ExecutionEndingRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ExecutionEndingRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ExecutionEndingRequest result;
      
      private ExecutionEndingRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          ExecutionEndingRequest original = result;
          result = new ExecutionEndingRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ExecutionEndingRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gauge.Messages.ExecutionEndingRequest.Descriptor; }
      }
      
      public override ExecutionEndingRequest DefaultInstanceForType {
        get { return global::Gauge.Messages.ExecutionEndingRequest.DefaultInstance; }
      }
      
      public override ExecutionEndingRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ExecutionEndingRequest) {
          return MergeFrom((ExecutionEndingRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ExecutionEndingRequest other) {
        if (other == global::Gauge.Messages.ExecutionEndingRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCurrentExecutionInfo) {
          MergeCurrentExecutionInfo(other.CurrentExecutionInfo);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_executionEndingRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _executionEndingRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Gauge.Messages.ExecutionInfo.Builder subBuilder = global::Gauge.Messages.ExecutionInfo.CreateBuilder();
              if (result.hasCurrentExecutionInfo) {
                subBuilder.MergeFrom(CurrentExecutionInfo);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              CurrentExecutionInfo = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCurrentExecutionInfo {
       get { return result.hasCurrentExecutionInfo; }
      }
      public global::Gauge.Messages.ExecutionInfo CurrentExecutionInfo {
        get { return result.CurrentExecutionInfo; }
        set { SetCurrentExecutionInfo(value); }
      }
      public Builder SetCurrentExecutionInfo(global::Gauge.Messages.ExecutionInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCurrentExecutionInfo = true;
        result.currentExecutionInfo_ = value;
        return this;
      }
      public Builder SetCurrentExecutionInfo(global::Gauge.Messages.ExecutionInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCurrentExecutionInfo = true;
        result.currentExecutionInfo_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCurrentExecutionInfo(global::Gauge.Messages.ExecutionInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCurrentExecutionInfo &&
            result.currentExecutionInfo_ != global::Gauge.Messages.ExecutionInfo.DefaultInstance) {
            result.currentExecutionInfo_ = global::Gauge.Messages.ExecutionInfo.CreateBuilder(result.currentExecutionInfo_).MergeFrom(value).BuildPartial();
        } else {
          result.currentExecutionInfo_ = value;
        }
        result.hasCurrentExecutionInfo = true;
        return this;
      }
      public Builder ClearCurrentExecutionInfo() {
        PrepareBuilder();
        result.hasCurrentExecutionInfo = false;
        result.currentExecutionInfo_ = null;
        return this;
      }
    }
    static ExecutionEndingRequest() {
      object.ReferenceEquals(global::Gauge.Messages.Messages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SuiteExecutionResult : pb::GeneratedMessage<SuiteExecutionResult, SuiteExecutionResult.Builder> {
    private SuiteExecutionResult() { }
    private static readonly SuiteExecutionResult defaultInstance = new SuiteExecutionResult().MakeReadOnly();
    private static readonly string[] _suiteExecutionResultFieldNames = new string[] { "suiteResult" };
    private static readonly uint[] _suiteExecutionResultFieldTags = new uint[] { 10 };
    public static SuiteExecutionResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SuiteExecutionResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SuiteExecutionResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.Messages.internal__static_gauge_messages_SuiteExecutionResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SuiteExecutionResult, SuiteExecutionResult.Builder> InternalFieldAccessors {
      get { return global::Gauge.Messages.Messages.internal__static_gauge_messages_SuiteExecutionResult__FieldAccessorTable; }
    }
    
    public const int SuiteResultFieldNumber = 1;
    private bool hasSuiteResult;
    private global::Gauge.Messages.ProtoSuiteResult suiteResult_;
    public bool HasSuiteResult {
      get { return hasSuiteResult; }
    }
    public global::Gauge.Messages.ProtoSuiteResult SuiteResult {
      get { return suiteResult_ ?? global::Gauge.Messages.ProtoSuiteResult.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasSuiteResult) return false;
        if (!SuiteResult.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _suiteExecutionResultFieldNames;
      if (hasSuiteResult) {
        output.WriteMessage(1, field_names[0], SuiteResult);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasSuiteResult) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, SuiteResult);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SuiteExecutionResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SuiteExecutionResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SuiteExecutionResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SuiteExecutionResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SuiteExecutionResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SuiteExecutionResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SuiteExecutionResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SuiteExecutionResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SuiteExecutionResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SuiteExecutionResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SuiteExecutionResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SuiteExecutionResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SuiteExecutionResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SuiteExecutionResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SuiteExecutionResult result;
      
      private SuiteExecutionResult PrepareBuilder() {
        if (resultIsReadOnly) {
          SuiteExecutionResult original = result;
          result = new SuiteExecutionResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SuiteExecutionResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gauge.Messages.SuiteExecutionResult.Descriptor; }
      }
      
      public override SuiteExecutionResult DefaultInstanceForType {
        get { return global::Gauge.Messages.SuiteExecutionResult.DefaultInstance; }
      }
      
      public override SuiteExecutionResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SuiteExecutionResult) {
          return MergeFrom((SuiteExecutionResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SuiteExecutionResult other) {
        if (other == global::Gauge.Messages.SuiteExecutionResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSuiteResult) {
          MergeSuiteResult(other.SuiteResult);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_suiteExecutionResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _suiteExecutionResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Gauge.Messages.ProtoSuiteResult.Builder subBuilder = global::Gauge.Messages.ProtoSuiteResult.CreateBuilder();
              if (result.hasSuiteResult) {
                subBuilder.MergeFrom(SuiteResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SuiteResult = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSuiteResult {
       get { return result.hasSuiteResult; }
      }
      public global::Gauge.Messages.ProtoSuiteResult SuiteResult {
        get { return result.SuiteResult; }
        set { SetSuiteResult(value); }
      }
      public Builder SetSuiteResult(global::Gauge.Messages.ProtoSuiteResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSuiteResult = true;
        result.suiteResult_ = value;
        return this;
      }
      public Builder SetSuiteResult(global::Gauge.Messages.ProtoSuiteResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSuiteResult = true;
        result.suiteResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSuiteResult(global::Gauge.Messages.ProtoSuiteResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSuiteResult &&
            result.suiteResult_ != global::Gauge.Messages.ProtoSuiteResult.DefaultInstance) {
            result.suiteResult_ = global::Gauge.Messages.ProtoSuiteResult.CreateBuilder(result.suiteResult_).MergeFrom(value).BuildPartial();
        } else {
          result.suiteResult_ = value;
        }
        result.hasSuiteResult = true;
        return this;
      }
      public Builder ClearSuiteResult() {
        PrepareBuilder();
        result.hasSuiteResult = false;
        result.suiteResult_ = null;
        return this;
      }
    }
    static SuiteExecutionResult() {
      object.ReferenceEquals(global::Gauge.Messages.Messages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class StepNamesRequest : pb::GeneratedMessage<StepNamesRequest, StepNamesRequest.Builder> {
    private StepNamesRequest() { }
    private static readonly StepNamesRequest defaultInstance = new StepNamesRequest().MakeReadOnly();
    private static readonly string[] _stepNamesRequestFieldNames = new string[] {  };
    private static readonly uint[] _stepNamesRequestFieldTags = new uint[] {  };
    public static StepNamesRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override StepNamesRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override StepNamesRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.Messages.internal__static_gauge_messages_StepNamesRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<StepNamesRequest, StepNamesRequest.Builder> InternalFieldAccessors {
      get { return global::Gauge.Messages.Messages.internal__static_gauge_messages_StepNamesRequest__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _stepNamesRequestFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static StepNamesRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StepNamesRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StepNamesRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StepNamesRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StepNamesRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StepNamesRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static StepNamesRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static StepNamesRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static StepNamesRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StepNamesRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private StepNamesRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(StepNamesRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<StepNamesRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(StepNamesRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private StepNamesRequest result;
      
      private StepNamesRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          StepNamesRequest original = result;
          result = new StepNamesRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override StepNamesRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gauge.Messages.StepNamesRequest.Descriptor; }
      }
      
      public override StepNamesRequest DefaultInstanceForType {
        get { return global::Gauge.Messages.StepNamesRequest.DefaultInstance; }
      }
      
      public override StepNamesRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is StepNamesRequest) {
          return MergeFrom((StepNamesRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(StepNamesRequest other) {
        if (other == global::Gauge.Messages.StepNamesRequest.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_stepNamesRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _stepNamesRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static StepNamesRequest() {
      object.ReferenceEquals(global::Gauge.Messages.Messages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class StepNamesResponse : pb::GeneratedMessage<StepNamesResponse, StepNamesResponse.Builder> {
    private StepNamesResponse() { }
    private static readonly StepNamesResponse defaultInstance = new StepNamesResponse().MakeReadOnly();
    private static readonly string[] _stepNamesResponseFieldNames = new string[] { "steps" };
    private static readonly uint[] _stepNamesResponseFieldTags = new uint[] { 10 };
    public static StepNamesResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override StepNamesResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override StepNamesResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.Messages.internal__static_gauge_messages_StepNamesResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<StepNamesResponse, StepNamesResponse.Builder> InternalFieldAccessors {
      get { return global::Gauge.Messages.Messages.internal__static_gauge_messages_StepNamesResponse__FieldAccessorTable; }
    }
    
    public const int StepsFieldNumber = 1;
    private pbc::PopsicleList<string> steps_ = new pbc::PopsicleList<string>();
    public scg::IList<string> StepsList {
      get { return pbc::Lists.AsReadOnly(steps_); }
    }
    public int StepsCount {
      get { return steps_.Count; }
    }
    public string GetSteps(int index) {
      return steps_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _stepNamesResponseFieldNames;
      if (steps_.Count > 0) {
        output.WriteStringArray(1, field_names[0], steps_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        {
          int dataSize = 0;
          foreach (string element in StepsList) {
            dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
          }
          size += dataSize;
          size += 1 * steps_.Count;
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static StepNamesResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StepNamesResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StepNamesResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StepNamesResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StepNamesResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StepNamesResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static StepNamesResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static StepNamesResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static StepNamesResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StepNamesResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private StepNamesResponse MakeReadOnly() {
      steps_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(StepNamesResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<StepNamesResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(StepNamesResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private StepNamesResponse result;
      
      private StepNamesResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          StepNamesResponse original = result;
          result = new StepNamesResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override StepNamesResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gauge.Messages.StepNamesResponse.Descriptor; }
      }
      
      public override StepNamesResponse DefaultInstanceForType {
        get { return global::Gauge.Messages.StepNamesResponse.DefaultInstance; }
      }
      
      public override StepNamesResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is StepNamesResponse) {
          return MergeFrom((StepNamesResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(StepNamesResponse other) {
        if (other == global::Gauge.Messages.StepNamesResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.steps_.Count != 0) {
          result.steps_.Add(other.steps_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_stepNamesResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _stepNamesResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadStringArray(tag, field_name, result.steps_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<string> StepsList {
        get { return PrepareBuilder().steps_; }
      }
      public int StepsCount {
        get { return result.StepsCount; }
      }
      public string GetSteps(int index) {
        return result.GetSteps(index);
      }
      public Builder SetSteps(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.steps_[index] = value;
        return this;
      }
      public Builder AddSteps(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.steps_.Add(value);
        return this;
      }
      public Builder AddRangeSteps(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.steps_.Add(values);
        return this;
      }
      public Builder ClearSteps() {
        PrepareBuilder();
        result.steps_.Clear();
        return this;
      }
    }
    static StepNamesResponse() {
      object.ReferenceEquals(global::Gauge.Messages.Messages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ScenarioDataStoreInitRequest : pb::GeneratedMessage<ScenarioDataStoreInitRequest, ScenarioDataStoreInitRequest.Builder> {
    private ScenarioDataStoreInitRequest() { }
    private static readonly ScenarioDataStoreInitRequest defaultInstance = new ScenarioDataStoreInitRequest().MakeReadOnly();
    private static readonly string[] _scenarioDataStoreInitRequestFieldNames = new string[] {  };
    private static readonly uint[] _scenarioDataStoreInitRequestFieldTags = new uint[] {  };
    public static ScenarioDataStoreInitRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ScenarioDataStoreInitRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ScenarioDataStoreInitRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.Messages.internal__static_gauge_messages_ScenarioDataStoreInitRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ScenarioDataStoreInitRequest, ScenarioDataStoreInitRequest.Builder> InternalFieldAccessors {
      get { return global::Gauge.Messages.Messages.internal__static_gauge_messages_ScenarioDataStoreInitRequest__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _scenarioDataStoreInitRequestFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ScenarioDataStoreInitRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ScenarioDataStoreInitRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ScenarioDataStoreInitRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ScenarioDataStoreInitRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ScenarioDataStoreInitRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ScenarioDataStoreInitRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ScenarioDataStoreInitRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ScenarioDataStoreInitRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ScenarioDataStoreInitRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ScenarioDataStoreInitRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ScenarioDataStoreInitRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ScenarioDataStoreInitRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ScenarioDataStoreInitRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ScenarioDataStoreInitRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ScenarioDataStoreInitRequest result;
      
      private ScenarioDataStoreInitRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          ScenarioDataStoreInitRequest original = result;
          result = new ScenarioDataStoreInitRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ScenarioDataStoreInitRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gauge.Messages.ScenarioDataStoreInitRequest.Descriptor; }
      }
      
      public override ScenarioDataStoreInitRequest DefaultInstanceForType {
        get { return global::Gauge.Messages.ScenarioDataStoreInitRequest.DefaultInstance; }
      }
      
      public override ScenarioDataStoreInitRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ScenarioDataStoreInitRequest) {
          return MergeFrom((ScenarioDataStoreInitRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ScenarioDataStoreInitRequest other) {
        if (other == global::Gauge.Messages.ScenarioDataStoreInitRequest.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_scenarioDataStoreInitRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _scenarioDataStoreInitRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static ScenarioDataStoreInitRequest() {
      object.ReferenceEquals(global::Gauge.Messages.Messages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SpecDataStoreInitRequest : pb::GeneratedMessage<SpecDataStoreInitRequest, SpecDataStoreInitRequest.Builder> {
    private SpecDataStoreInitRequest() { }
    private static readonly SpecDataStoreInitRequest defaultInstance = new SpecDataStoreInitRequest().MakeReadOnly();
    private static readonly string[] _specDataStoreInitRequestFieldNames = new string[] {  };
    private static readonly uint[] _specDataStoreInitRequestFieldTags = new uint[] {  };
    public static SpecDataStoreInitRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SpecDataStoreInitRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SpecDataStoreInitRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.Messages.internal__static_gauge_messages_SpecDataStoreInitRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SpecDataStoreInitRequest, SpecDataStoreInitRequest.Builder> InternalFieldAccessors {
      get { return global::Gauge.Messages.Messages.internal__static_gauge_messages_SpecDataStoreInitRequest__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _specDataStoreInitRequestFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SpecDataStoreInitRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SpecDataStoreInitRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SpecDataStoreInitRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SpecDataStoreInitRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SpecDataStoreInitRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SpecDataStoreInitRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SpecDataStoreInitRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SpecDataStoreInitRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SpecDataStoreInitRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SpecDataStoreInitRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SpecDataStoreInitRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SpecDataStoreInitRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SpecDataStoreInitRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SpecDataStoreInitRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SpecDataStoreInitRequest result;
      
      private SpecDataStoreInitRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          SpecDataStoreInitRequest original = result;
          result = new SpecDataStoreInitRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SpecDataStoreInitRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gauge.Messages.SpecDataStoreInitRequest.Descriptor; }
      }
      
      public override SpecDataStoreInitRequest DefaultInstanceForType {
        get { return global::Gauge.Messages.SpecDataStoreInitRequest.DefaultInstance; }
      }
      
      public override SpecDataStoreInitRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SpecDataStoreInitRequest) {
          return MergeFrom((SpecDataStoreInitRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SpecDataStoreInitRequest other) {
        if (other == global::Gauge.Messages.SpecDataStoreInitRequest.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_specDataStoreInitRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _specDataStoreInitRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static SpecDataStoreInitRequest() {
      object.ReferenceEquals(global::Gauge.Messages.Messages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SuiteDataStoreInitRequest : pb::GeneratedMessage<SuiteDataStoreInitRequest, SuiteDataStoreInitRequest.Builder> {
    private SuiteDataStoreInitRequest() { }
    private static readonly SuiteDataStoreInitRequest defaultInstance = new SuiteDataStoreInitRequest().MakeReadOnly();
    private static readonly string[] _suiteDataStoreInitRequestFieldNames = new string[] {  };
    private static readonly uint[] _suiteDataStoreInitRequestFieldTags = new uint[] {  };
    public static SuiteDataStoreInitRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SuiteDataStoreInitRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SuiteDataStoreInitRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.Messages.internal__static_gauge_messages_SuiteDataStoreInitRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SuiteDataStoreInitRequest, SuiteDataStoreInitRequest.Builder> InternalFieldAccessors {
      get { return global::Gauge.Messages.Messages.internal__static_gauge_messages_SuiteDataStoreInitRequest__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _suiteDataStoreInitRequestFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SuiteDataStoreInitRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SuiteDataStoreInitRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SuiteDataStoreInitRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SuiteDataStoreInitRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SuiteDataStoreInitRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SuiteDataStoreInitRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SuiteDataStoreInitRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SuiteDataStoreInitRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SuiteDataStoreInitRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SuiteDataStoreInitRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SuiteDataStoreInitRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SuiteDataStoreInitRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SuiteDataStoreInitRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SuiteDataStoreInitRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SuiteDataStoreInitRequest result;
      
      private SuiteDataStoreInitRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          SuiteDataStoreInitRequest original = result;
          result = new SuiteDataStoreInitRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SuiteDataStoreInitRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gauge.Messages.SuiteDataStoreInitRequest.Descriptor; }
      }
      
      public override SuiteDataStoreInitRequest DefaultInstanceForType {
        get { return global::Gauge.Messages.SuiteDataStoreInitRequest.DefaultInstance; }
      }
      
      public override SuiteDataStoreInitRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SuiteDataStoreInitRequest) {
          return MergeFrom((SuiteDataStoreInitRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SuiteDataStoreInitRequest other) {
        if (other == global::Gauge.Messages.SuiteDataStoreInitRequest.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_suiteDataStoreInitRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _suiteDataStoreInitRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static SuiteDataStoreInitRequest() {
      object.ReferenceEquals(global::Gauge.Messages.Messages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ParameterPosition : pb::GeneratedMessage<ParameterPosition, ParameterPosition.Builder> {
    private ParameterPosition() { }
    private static readonly ParameterPosition defaultInstance = new ParameterPosition().MakeReadOnly();
    private static readonly string[] _parameterPositionFieldNames = new string[] { "newPosition", "oldPosition" };
    private static readonly uint[] _parameterPositionFieldTags = new uint[] { 16, 8 };
    public static ParameterPosition DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ParameterPosition DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ParameterPosition ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.Messages.internal__static_gauge_messages_ParameterPosition__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ParameterPosition, ParameterPosition.Builder> InternalFieldAccessors {
      get { return global::Gauge.Messages.Messages.internal__static_gauge_messages_ParameterPosition__FieldAccessorTable; }
    }
    
    public const int OldPositionFieldNumber = 1;
    private bool hasOldPosition;
    private int oldPosition_;
    public bool HasOldPosition {
      get { return hasOldPosition; }
    }
    public int OldPosition {
      get { return oldPosition_; }
    }
    
    public const int NewPositionFieldNumber = 2;
    private bool hasNewPosition;
    private int newPosition_;
    public bool HasNewPosition {
      get { return hasNewPosition; }
    }
    public int NewPosition {
      get { return newPosition_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasOldPosition) return false;
        if (!hasNewPosition) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _parameterPositionFieldNames;
      if (hasOldPosition) {
        output.WriteInt32(1, field_names[1], OldPosition);
      }
      if (hasNewPosition) {
        output.WriteInt32(2, field_names[0], NewPosition);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasOldPosition) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, OldPosition);
        }
        if (hasNewPosition) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, NewPosition);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ParameterPosition ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ParameterPosition ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ParameterPosition ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ParameterPosition ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ParameterPosition ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ParameterPosition ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ParameterPosition ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ParameterPosition ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ParameterPosition ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ParameterPosition ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ParameterPosition MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ParameterPosition prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ParameterPosition, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ParameterPosition cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ParameterPosition result;
      
      private ParameterPosition PrepareBuilder() {
        if (resultIsReadOnly) {
          ParameterPosition original = result;
          result = new ParameterPosition();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ParameterPosition MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gauge.Messages.ParameterPosition.Descriptor; }
      }
      
      public override ParameterPosition DefaultInstanceForType {
        get { return global::Gauge.Messages.ParameterPosition.DefaultInstance; }
      }
      
      public override ParameterPosition BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ParameterPosition) {
          return MergeFrom((ParameterPosition) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ParameterPosition other) {
        if (other == global::Gauge.Messages.ParameterPosition.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasOldPosition) {
          OldPosition = other.OldPosition;
        }
        if (other.HasNewPosition) {
          NewPosition = other.NewPosition;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_parameterPositionFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _parameterPositionFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasOldPosition = input.ReadInt32(ref result.oldPosition_);
              break;
            }
            case 16: {
              result.hasNewPosition = input.ReadInt32(ref result.newPosition_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasOldPosition {
        get { return result.hasOldPosition; }
      }
      public int OldPosition {
        get { return result.OldPosition; }
        set { SetOldPosition(value); }
      }
      public Builder SetOldPosition(int value) {
        PrepareBuilder();
        result.hasOldPosition = true;
        result.oldPosition_ = value;
        return this;
      }
      public Builder ClearOldPosition() {
        PrepareBuilder();
        result.hasOldPosition = false;
        result.oldPosition_ = 0;
        return this;
      }
      
      public bool HasNewPosition {
        get { return result.hasNewPosition; }
      }
      public int NewPosition {
        get { return result.NewPosition; }
        set { SetNewPosition(value); }
      }
      public Builder SetNewPosition(int value) {
        PrepareBuilder();
        result.hasNewPosition = true;
        result.newPosition_ = value;
        return this;
      }
      public Builder ClearNewPosition() {
        PrepareBuilder();
        result.hasNewPosition = false;
        result.newPosition_ = 0;
        return this;
      }
    }
    static ParameterPosition() {
      object.ReferenceEquals(global::Gauge.Messages.Messages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RefactorRequest : pb::GeneratedMessage<RefactorRequest, RefactorRequest.Builder> {
    private RefactorRequest() { }
    private static readonly RefactorRequest defaultInstance = new RefactorRequest().MakeReadOnly();
    private static readonly string[] _refactorRequestFieldNames = new string[] { "newStepValue", "oldStepValue", "paramPositions" };
    private static readonly uint[] _refactorRequestFieldTags = new uint[] { 18, 10, 26 };
    public static RefactorRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RefactorRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RefactorRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.Messages.internal__static_gauge_messages_RefactorRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RefactorRequest, RefactorRequest.Builder> InternalFieldAccessors {
      get { return global::Gauge.Messages.Messages.internal__static_gauge_messages_RefactorRequest__FieldAccessorTable; }
    }
    
    public const int OldStepValueFieldNumber = 1;
    private bool hasOldStepValue;
    private global::Gauge.Messages.ProtoStepValue oldStepValue_;
    public bool HasOldStepValue {
      get { return hasOldStepValue; }
    }
    public global::Gauge.Messages.ProtoStepValue OldStepValue {
      get { return oldStepValue_ ?? global::Gauge.Messages.ProtoStepValue.DefaultInstance; }
    }
    
    public const int NewStepValueFieldNumber = 2;
    private bool hasNewStepValue;
    private global::Gauge.Messages.ProtoStepValue newStepValue_;
    public bool HasNewStepValue {
      get { return hasNewStepValue; }
    }
    public global::Gauge.Messages.ProtoStepValue NewStepValue {
      get { return newStepValue_ ?? global::Gauge.Messages.ProtoStepValue.DefaultInstance; }
    }
    
    public const int ParamPositionsFieldNumber = 3;
    private pbc::PopsicleList<global::Gauge.Messages.ParameterPosition> paramPositions_ = new pbc::PopsicleList<global::Gauge.Messages.ParameterPosition>();
    public scg::IList<global::Gauge.Messages.ParameterPosition> ParamPositionsList {
      get { return paramPositions_; }
    }
    public int ParamPositionsCount {
      get { return paramPositions_.Count; }
    }
    public global::Gauge.Messages.ParameterPosition GetParamPositions(int index) {
      return paramPositions_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasOldStepValue) return false;
        if (!hasNewStepValue) return false;
        if (!OldStepValue.IsInitialized) return false;
        if (!NewStepValue.IsInitialized) return false;
        foreach (global::Gauge.Messages.ParameterPosition element in ParamPositionsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _refactorRequestFieldNames;
      if (hasOldStepValue) {
        output.WriteMessage(1, field_names[1], OldStepValue);
      }
      if (hasNewStepValue) {
        output.WriteMessage(2, field_names[0], NewStepValue);
      }
      if (paramPositions_.Count > 0) {
        output.WriteMessageArray(3, field_names[2], paramPositions_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasOldStepValue) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, OldStepValue);
        }
        if (hasNewStepValue) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, NewStepValue);
        }
        foreach (global::Gauge.Messages.ParameterPosition element in ParamPositionsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static RefactorRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RefactorRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RefactorRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RefactorRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RefactorRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RefactorRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RefactorRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RefactorRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RefactorRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RefactorRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RefactorRequest MakeReadOnly() {
      paramPositions_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RefactorRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RefactorRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RefactorRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RefactorRequest result;
      
      private RefactorRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          RefactorRequest original = result;
          result = new RefactorRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RefactorRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gauge.Messages.RefactorRequest.Descriptor; }
      }
      
      public override RefactorRequest DefaultInstanceForType {
        get { return global::Gauge.Messages.RefactorRequest.DefaultInstance; }
      }
      
      public override RefactorRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RefactorRequest) {
          return MergeFrom((RefactorRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RefactorRequest other) {
        if (other == global::Gauge.Messages.RefactorRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasOldStepValue) {
          MergeOldStepValue(other.OldStepValue);
        }
        if (other.HasNewStepValue) {
          MergeNewStepValue(other.NewStepValue);
        }
        if (other.paramPositions_.Count != 0) {
          result.paramPositions_.Add(other.paramPositions_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_refactorRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _refactorRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Gauge.Messages.ProtoStepValue.Builder subBuilder = global::Gauge.Messages.ProtoStepValue.CreateBuilder();
              if (result.hasOldStepValue) {
                subBuilder.MergeFrom(OldStepValue);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              OldStepValue = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::Gauge.Messages.ProtoStepValue.Builder subBuilder = global::Gauge.Messages.ProtoStepValue.CreateBuilder();
              if (result.hasNewStepValue) {
                subBuilder.MergeFrom(NewStepValue);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              NewStepValue = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.paramPositions_, global::Gauge.Messages.ParameterPosition.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasOldStepValue {
       get { return result.hasOldStepValue; }
      }
      public global::Gauge.Messages.ProtoStepValue OldStepValue {
        get { return result.OldStepValue; }
        set { SetOldStepValue(value); }
      }
      public Builder SetOldStepValue(global::Gauge.Messages.ProtoStepValue value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOldStepValue = true;
        result.oldStepValue_ = value;
        return this;
      }
      public Builder SetOldStepValue(global::Gauge.Messages.ProtoStepValue.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOldStepValue = true;
        result.oldStepValue_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOldStepValue(global::Gauge.Messages.ProtoStepValue value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOldStepValue &&
            result.oldStepValue_ != global::Gauge.Messages.ProtoStepValue.DefaultInstance) {
            result.oldStepValue_ = global::Gauge.Messages.ProtoStepValue.CreateBuilder(result.oldStepValue_).MergeFrom(value).BuildPartial();
        } else {
          result.oldStepValue_ = value;
        }
        result.hasOldStepValue = true;
        return this;
      }
      public Builder ClearOldStepValue() {
        PrepareBuilder();
        result.hasOldStepValue = false;
        result.oldStepValue_ = null;
        return this;
      }
      
      public bool HasNewStepValue {
       get { return result.hasNewStepValue; }
      }
      public global::Gauge.Messages.ProtoStepValue NewStepValue {
        get { return result.NewStepValue; }
        set { SetNewStepValue(value); }
      }
      public Builder SetNewStepValue(global::Gauge.Messages.ProtoStepValue value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNewStepValue = true;
        result.newStepValue_ = value;
        return this;
      }
      public Builder SetNewStepValue(global::Gauge.Messages.ProtoStepValue.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasNewStepValue = true;
        result.newStepValue_ = builderForValue.Build();
        return this;
      }
      public Builder MergeNewStepValue(global::Gauge.Messages.ProtoStepValue value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasNewStepValue &&
            result.newStepValue_ != global::Gauge.Messages.ProtoStepValue.DefaultInstance) {
            result.newStepValue_ = global::Gauge.Messages.ProtoStepValue.CreateBuilder(result.newStepValue_).MergeFrom(value).BuildPartial();
        } else {
          result.newStepValue_ = value;
        }
        result.hasNewStepValue = true;
        return this;
      }
      public Builder ClearNewStepValue() {
        PrepareBuilder();
        result.hasNewStepValue = false;
        result.newStepValue_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::Gauge.Messages.ParameterPosition> ParamPositionsList {
        get { return PrepareBuilder().paramPositions_; }
      }
      public int ParamPositionsCount {
        get { return result.ParamPositionsCount; }
      }
      public global::Gauge.Messages.ParameterPosition GetParamPositions(int index) {
        return result.GetParamPositions(index);
      }
      public Builder SetParamPositions(int index, global::Gauge.Messages.ParameterPosition value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.paramPositions_[index] = value;
        return this;
      }
      public Builder SetParamPositions(int index, global::Gauge.Messages.ParameterPosition.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.paramPositions_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddParamPositions(global::Gauge.Messages.ParameterPosition value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.paramPositions_.Add(value);
        return this;
      }
      public Builder AddParamPositions(global::Gauge.Messages.ParameterPosition.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.paramPositions_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeParamPositions(scg::IEnumerable<global::Gauge.Messages.ParameterPosition> values) {
        PrepareBuilder();
        result.paramPositions_.Add(values);
        return this;
      }
      public Builder ClearParamPositions() {
        PrepareBuilder();
        result.paramPositions_.Clear();
        return this;
      }
    }
    static RefactorRequest() {
      object.ReferenceEquals(global::Gauge.Messages.Messages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RefactorResponse : pb::GeneratedMessage<RefactorResponse, RefactorResponse.Builder> {
    private RefactorResponse() { }
    private static readonly RefactorResponse defaultInstance = new RefactorResponse().MakeReadOnly();
    private static readonly string[] _refactorResponseFieldNames = new string[] { "error", "filesChanged", "success" };
    private static readonly uint[] _refactorResponseFieldTags = new uint[] { 18, 26, 8 };
    public static RefactorResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RefactorResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RefactorResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.Messages.internal__static_gauge_messages_RefactorResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RefactorResponse, RefactorResponse.Builder> InternalFieldAccessors {
      get { return global::Gauge.Messages.Messages.internal__static_gauge_messages_RefactorResponse__FieldAccessorTable; }
    }
    
    public const int SuccessFieldNumber = 1;
    private bool hasSuccess;
    private bool success_;
    public bool HasSuccess {
      get { return hasSuccess; }
    }
    public bool Success {
      get { return success_; }
    }
    
    public const int ErrorFieldNumber = 2;
    private bool hasError;
    private string error_ = "";
    public bool HasError {
      get { return hasError; }
    }
    public string Error {
      get { return error_; }
    }
    
    public const int FilesChangedFieldNumber = 3;
    private pbc::PopsicleList<string> filesChanged_ = new pbc::PopsicleList<string>();
    public scg::IList<string> FilesChangedList {
      get { return pbc::Lists.AsReadOnly(filesChanged_); }
    }
    public int FilesChangedCount {
      get { return filesChanged_.Count; }
    }
    public string GetFilesChanged(int index) {
      return filesChanged_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasSuccess) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _refactorResponseFieldNames;
      if (hasSuccess) {
        output.WriteBool(1, field_names[2], Success);
      }
      if (hasError) {
        output.WriteString(2, field_names[0], Error);
      }
      if (filesChanged_.Count > 0) {
        output.WriteStringArray(3, field_names[1], filesChanged_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasSuccess) {
          size += pb::CodedOutputStream.ComputeBoolSize(1, Success);
        }
        if (hasError) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Error);
        }
        {
          int dataSize = 0;
          foreach (string element in FilesChangedList) {
            dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
          }
          size += dataSize;
          size += 1 * filesChanged_.Count;
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static RefactorResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RefactorResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RefactorResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RefactorResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RefactorResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RefactorResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RefactorResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RefactorResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RefactorResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RefactorResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RefactorResponse MakeReadOnly() {
      filesChanged_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RefactorResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RefactorResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RefactorResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RefactorResponse result;
      
      private RefactorResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          RefactorResponse original = result;
          result = new RefactorResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RefactorResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gauge.Messages.RefactorResponse.Descriptor; }
      }
      
      public override RefactorResponse DefaultInstanceForType {
        get { return global::Gauge.Messages.RefactorResponse.DefaultInstance; }
      }
      
      public override RefactorResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RefactorResponse) {
          return MergeFrom((RefactorResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RefactorResponse other) {
        if (other == global::Gauge.Messages.RefactorResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSuccess) {
          Success = other.Success;
        }
        if (other.HasError) {
          Error = other.Error;
        }
        if (other.filesChanged_.Count != 0) {
          result.filesChanged_.Add(other.filesChanged_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_refactorResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _refactorResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasSuccess = input.ReadBool(ref result.success_);
              break;
            }
            case 18: {
              result.hasError = input.ReadString(ref result.error_);
              break;
            }
            case 26: {
              input.ReadStringArray(tag, field_name, result.filesChanged_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSuccess {
        get { return result.hasSuccess; }
      }
      public bool Success {
        get { return result.Success; }
        set { SetSuccess(value); }
      }
      public Builder SetSuccess(bool value) {
        PrepareBuilder();
        result.hasSuccess = true;
        result.success_ = value;
        return this;
      }
      public Builder ClearSuccess() {
        PrepareBuilder();
        result.hasSuccess = false;
        result.success_ = false;
        return this;
      }
      
      public bool HasError {
        get { return result.hasError; }
      }
      public string Error {
        get { return result.Error; }
        set { SetError(value); }
      }
      public Builder SetError(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasError = true;
        result.error_ = value;
        return this;
      }
      public Builder ClearError() {
        PrepareBuilder();
        result.hasError = false;
        result.error_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<string> FilesChangedList {
        get { return PrepareBuilder().filesChanged_; }
      }
      public int FilesChangedCount {
        get { return result.FilesChangedCount; }
      }
      public string GetFilesChanged(int index) {
        return result.GetFilesChanged(index);
      }
      public Builder SetFilesChanged(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.filesChanged_[index] = value;
        return this;
      }
      public Builder AddFilesChanged(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.filesChanged_.Add(value);
        return this;
      }
      public Builder AddRangeFilesChanged(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.filesChanged_.Add(values);
        return this;
      }
      public Builder ClearFilesChanged() {
        PrepareBuilder();
        result.filesChanged_.Clear();
        return this;
      }
    }
    static RefactorResponse() {
      object.ReferenceEquals(global::Gauge.Messages.Messages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class StepNameRequest : pb::GeneratedMessage<StepNameRequest, StepNameRequest.Builder> {
    private StepNameRequest() { }
    private static readonly StepNameRequest defaultInstance = new StepNameRequest().MakeReadOnly();
    private static readonly string[] _stepNameRequestFieldNames = new string[] { "stepValue" };
    private static readonly uint[] _stepNameRequestFieldTags = new uint[] { 10 };
    public static StepNameRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override StepNameRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override StepNameRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.Messages.internal__static_gauge_messages_StepNameRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<StepNameRequest, StepNameRequest.Builder> InternalFieldAccessors {
      get { return global::Gauge.Messages.Messages.internal__static_gauge_messages_StepNameRequest__FieldAccessorTable; }
    }
    
    public const int StepValueFieldNumber = 1;
    private bool hasStepValue;
    private string stepValue_ = "";
    public bool HasStepValue {
      get { return hasStepValue; }
    }
    public string StepValue {
      get { return stepValue_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasStepValue) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _stepNameRequestFieldNames;
      if (hasStepValue) {
        output.WriteString(1, field_names[0], StepValue);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasStepValue) {
          size += pb::CodedOutputStream.ComputeStringSize(1, StepValue);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static StepNameRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StepNameRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StepNameRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StepNameRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StepNameRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StepNameRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static StepNameRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static StepNameRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static StepNameRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StepNameRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private StepNameRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(StepNameRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<StepNameRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(StepNameRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private StepNameRequest result;
      
      private StepNameRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          StepNameRequest original = result;
          result = new StepNameRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override StepNameRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gauge.Messages.StepNameRequest.Descriptor; }
      }
      
      public override StepNameRequest DefaultInstanceForType {
        get { return global::Gauge.Messages.StepNameRequest.DefaultInstance; }
      }
      
      public override StepNameRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is StepNameRequest) {
          return MergeFrom((StepNameRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(StepNameRequest other) {
        if (other == global::Gauge.Messages.StepNameRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasStepValue) {
          StepValue = other.StepValue;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_stepNameRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _stepNameRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasStepValue = input.ReadString(ref result.stepValue_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasStepValue {
        get { return result.hasStepValue; }
      }
      public string StepValue {
        get { return result.StepValue; }
        set { SetStepValue(value); }
      }
      public Builder SetStepValue(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStepValue = true;
        result.stepValue_ = value;
        return this;
      }
      public Builder ClearStepValue() {
        PrepareBuilder();
        result.hasStepValue = false;
        result.stepValue_ = "";
        return this;
      }
    }
    static StepNameRequest() {
      object.ReferenceEquals(global::Gauge.Messages.Messages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class StepNameResponse : pb::GeneratedMessage<StepNameResponse, StepNameResponse.Builder> {
    private StepNameResponse() { }
    private static readonly StepNameResponse defaultInstance = new StepNameResponse().MakeReadOnly();
    private static readonly string[] _stepNameResponseFieldNames = new string[] { "hasAlias", "isStepPresent", "stepName" };
    private static readonly uint[] _stepNameResponseFieldTags = new uint[] { 24, 8, 18 };
    public static StepNameResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override StepNameResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override StepNameResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.Messages.internal__static_gauge_messages_StepNameResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<StepNameResponse, StepNameResponse.Builder> InternalFieldAccessors {
      get { return global::Gauge.Messages.Messages.internal__static_gauge_messages_StepNameResponse__FieldAccessorTable; }
    }
    
    public const int IsStepPresentFieldNumber = 1;
    private bool hasIsStepPresent;
    private bool isStepPresent_;
    public bool HasIsStepPresent {
      get { return hasIsStepPresent; }
    }
    public bool IsStepPresent {
      get { return isStepPresent_; }
    }
    
    public const int StepNameFieldNumber = 2;
    private pbc::PopsicleList<string> stepName_ = new pbc::PopsicleList<string>();
    public scg::IList<string> StepNameList {
      get { return pbc::Lists.AsReadOnly(stepName_); }
    }
    public int StepNameCount {
      get { return stepName_.Count; }
    }
    public string GetStepName(int index) {
      return stepName_[index];
    }
    
    public const int HasAliasFieldNumber = 3;
    private bool hasHasAlias;
    private bool hasAlias_;
    public bool HasHasAlias {
      get { return hasHasAlias; }
    }
    public bool HasAlias {
      get { return hasAlias_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasIsStepPresent) return false;
        if (!hasHasAlias) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _stepNameResponseFieldNames;
      if (hasIsStepPresent) {
        output.WriteBool(1, field_names[1], IsStepPresent);
      }
      if (stepName_.Count > 0) {
        output.WriteStringArray(2, field_names[2], stepName_);
      }
      if (hasHasAlias) {
        output.WriteBool(3, field_names[0], HasAlias);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasIsStepPresent) {
          size += pb::CodedOutputStream.ComputeBoolSize(1, IsStepPresent);
        }
        {
          int dataSize = 0;
          foreach (string element in StepNameList) {
            dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
          }
          size += dataSize;
          size += 1 * stepName_.Count;
        }
        if (hasHasAlias) {
          size += pb::CodedOutputStream.ComputeBoolSize(3, HasAlias);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static StepNameResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StepNameResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StepNameResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StepNameResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StepNameResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StepNameResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static StepNameResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static StepNameResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static StepNameResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StepNameResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private StepNameResponse MakeReadOnly() {
      stepName_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(StepNameResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<StepNameResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(StepNameResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private StepNameResponse result;
      
      private StepNameResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          StepNameResponse original = result;
          result = new StepNameResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override StepNameResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gauge.Messages.StepNameResponse.Descriptor; }
      }
      
      public override StepNameResponse DefaultInstanceForType {
        get { return global::Gauge.Messages.StepNameResponse.DefaultInstance; }
      }
      
      public override StepNameResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is StepNameResponse) {
          return MergeFrom((StepNameResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(StepNameResponse other) {
        if (other == global::Gauge.Messages.StepNameResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasIsStepPresent) {
          IsStepPresent = other.IsStepPresent;
        }
        if (other.stepName_.Count != 0) {
          result.stepName_.Add(other.stepName_);
        }
        if (other.HasHasAlias) {
          HasAlias = other.HasAlias;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_stepNameResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _stepNameResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasIsStepPresent = input.ReadBool(ref result.isStepPresent_);
              break;
            }
            case 18: {
              input.ReadStringArray(tag, field_name, result.stepName_);
              break;
            }
            case 24: {
              result.hasHasAlias = input.ReadBool(ref result.hasAlias_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasIsStepPresent {
        get { return result.hasIsStepPresent; }
      }
      public bool IsStepPresent {
        get { return result.IsStepPresent; }
        set { SetIsStepPresent(value); }
      }
      public Builder SetIsStepPresent(bool value) {
        PrepareBuilder();
        result.hasIsStepPresent = true;
        result.isStepPresent_ = value;
        return this;
      }
      public Builder ClearIsStepPresent() {
        PrepareBuilder();
        result.hasIsStepPresent = false;
        result.isStepPresent_ = false;
        return this;
      }
      
      public pbc::IPopsicleList<string> StepNameList {
        get { return PrepareBuilder().stepName_; }
      }
      public int StepNameCount {
        get { return result.StepNameCount; }
      }
      public string GetStepName(int index) {
        return result.GetStepName(index);
      }
      public Builder SetStepName(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.stepName_[index] = value;
        return this;
      }
      public Builder AddStepName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.stepName_.Add(value);
        return this;
      }
      public Builder AddRangeStepName(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.stepName_.Add(values);
        return this;
      }
      public Builder ClearStepName() {
        PrepareBuilder();
        result.stepName_.Clear();
        return this;
      }
      
      public bool HasHasAlias {
        get { return result.hasHasAlias; }
      }
      public bool HasAlias {
        get { return result.HasAlias; }
        set { SetHasAlias(value); }
      }
      public Builder SetHasAlias(bool value) {
        PrepareBuilder();
        result.hasHasAlias = true;
        result.hasAlias_ = value;
        return this;
      }
      public Builder ClearHasAlias() {
        PrepareBuilder();
        result.hasHasAlias = false;
        result.hasAlias_ = false;
        return this;
      }
    }
    static StepNameResponse() {
      object.ReferenceEquals(global::Gauge.Messages.Messages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Message : pb::GeneratedMessage<Message, Message.Builder> {
    private Message() { }
    private static readonly Message defaultInstance = new Message().MakeReadOnly();
    private static readonly string[] _messageFieldNames = new string[] { "executeStepRequest", "executionEndingRequest", "executionStartingRequest", "executionStatusResponse", "killProcessRequest", "messageId", "messageType", "refactorRequest", "refactorResponse", "scenarioDataStoreInitRequest", "scenarioExecutionEndingRequest", "scenarioExecutionStartingRequest", "specDataStoreInitRequest", "specExecutionEndingRequest", "specExecutionStartingRequest", "stepExecutionEndingRequest", "stepExecutionStartingRequest", "stepNameRequest", "stepNameResponse", "stepNamesRequest", "stepNamesResponse", "stepValidateRequest", "stepValidateResponse", "suiteDataStoreInitRequest", "suiteExecutionResult" };
    private static readonly uint[] _messageFieldTags = new uint[] { 82, 90, 26, 114, 146, 16, 8, 194, 202, 154, 58, 50, 162, 42, 34, 74, 66, 178, 186, 122, 130, 98, 106, 170, 138 };
    public static Message DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Message DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Message ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.Messages.internal__static_gauge_messages_Message__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Message, Message.Builder> InternalFieldAccessors {
      get { return global::Gauge.Messages.Messages.internal__static_gauge_messages_Message__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum MessageType {
        ExecutionStarting = 0,
        SpecExecutionStarting = 1,
        SpecExecutionEnding = 2,
        ScenarioExecutionStarting = 3,
        ScenarioExecutionEnding = 4,
        StepExecutionStarting = 5,
        StepExecutionEnding = 6,
        ExecuteStep = 7,
        ExecutionEnding = 8,
        StepValidateRequest = 9,
        StepValidateResponse = 10,
        ExecutionStatusResponse = 11,
        StepNamesRequest = 12,
        StepNamesResponse = 13,
        KillProcessRequest = 14,
        SuiteExecutionResult = 15,
        ScenarioDataStoreInit = 16,
        SpecDataStoreInit = 17,
        SuiteDataStoreInit = 18,
        StepNameRequest = 19,
        StepNameResponse = 20,
        RefactorRequest = 21,
        RefactorResponse = 22,
      }
      
    }
    #endregion
    
    public const int MessageTypeFieldNumber = 1;
    private bool hasMessageType;
    private global::Gauge.Messages.Message.Types.MessageType messageType_ = global::Gauge.Messages.Message.Types.MessageType.ExecutionStarting;
    public bool HasMessageType {
      get { return hasMessageType; }
    }
    public global::Gauge.Messages.Message.Types.MessageType MessageType {
      get { return messageType_; }
    }
    
    public const int MessageIdFieldNumber = 2;
    private bool hasMessageId;
    private long messageId_;
    public bool HasMessageId {
      get { return hasMessageId; }
    }
    public long MessageId {
      get { return messageId_; }
    }
    
    public const int ExecutionStartingRequestFieldNumber = 3;
    private bool hasExecutionStartingRequest;
    private global::Gauge.Messages.ExecutionStartingRequest executionStartingRequest_;
    public bool HasExecutionStartingRequest {
      get { return hasExecutionStartingRequest; }
    }
    public global::Gauge.Messages.ExecutionStartingRequest ExecutionStartingRequest {
      get { return executionStartingRequest_ ?? global::Gauge.Messages.ExecutionStartingRequest.DefaultInstance; }
    }
    
    public const int SpecExecutionStartingRequestFieldNumber = 4;
    private bool hasSpecExecutionStartingRequest;
    private global::Gauge.Messages.SpecExecutionStartingRequest specExecutionStartingRequest_;
    public bool HasSpecExecutionStartingRequest {
      get { return hasSpecExecutionStartingRequest; }
    }
    public global::Gauge.Messages.SpecExecutionStartingRequest SpecExecutionStartingRequest {
      get { return specExecutionStartingRequest_ ?? global::Gauge.Messages.SpecExecutionStartingRequest.DefaultInstance; }
    }
    
    public const int SpecExecutionEndingRequestFieldNumber = 5;
    private bool hasSpecExecutionEndingRequest;
    private global::Gauge.Messages.SpecExecutionEndingRequest specExecutionEndingRequest_;
    public bool HasSpecExecutionEndingRequest {
      get { return hasSpecExecutionEndingRequest; }
    }
    public global::Gauge.Messages.SpecExecutionEndingRequest SpecExecutionEndingRequest {
      get { return specExecutionEndingRequest_ ?? global::Gauge.Messages.SpecExecutionEndingRequest.DefaultInstance; }
    }
    
    public const int ScenarioExecutionStartingRequestFieldNumber = 6;
    private bool hasScenarioExecutionStartingRequest;
    private global::Gauge.Messages.ScenarioExecutionStartingRequest scenarioExecutionStartingRequest_;
    public bool HasScenarioExecutionStartingRequest {
      get { return hasScenarioExecutionStartingRequest; }
    }
    public global::Gauge.Messages.ScenarioExecutionStartingRequest ScenarioExecutionStartingRequest {
      get { return scenarioExecutionStartingRequest_ ?? global::Gauge.Messages.ScenarioExecutionStartingRequest.DefaultInstance; }
    }
    
    public const int ScenarioExecutionEndingRequestFieldNumber = 7;
    private bool hasScenarioExecutionEndingRequest;
    private global::Gauge.Messages.ScenarioExecutionEndingRequest scenarioExecutionEndingRequest_;
    public bool HasScenarioExecutionEndingRequest {
      get { return hasScenarioExecutionEndingRequest; }
    }
    public global::Gauge.Messages.ScenarioExecutionEndingRequest ScenarioExecutionEndingRequest {
      get { return scenarioExecutionEndingRequest_ ?? global::Gauge.Messages.ScenarioExecutionEndingRequest.DefaultInstance; }
    }
    
    public const int StepExecutionStartingRequestFieldNumber = 8;
    private bool hasStepExecutionStartingRequest;
    private global::Gauge.Messages.StepExecutionStartingRequest stepExecutionStartingRequest_;
    public bool HasStepExecutionStartingRequest {
      get { return hasStepExecutionStartingRequest; }
    }
    public global::Gauge.Messages.StepExecutionStartingRequest StepExecutionStartingRequest {
      get { return stepExecutionStartingRequest_ ?? global::Gauge.Messages.StepExecutionStartingRequest.DefaultInstance; }
    }
    
    public const int StepExecutionEndingRequestFieldNumber = 9;
    private bool hasStepExecutionEndingRequest;
    private global::Gauge.Messages.StepExecutionEndingRequest stepExecutionEndingRequest_;
    public bool HasStepExecutionEndingRequest {
      get { return hasStepExecutionEndingRequest; }
    }
    public global::Gauge.Messages.StepExecutionEndingRequest StepExecutionEndingRequest {
      get { return stepExecutionEndingRequest_ ?? global::Gauge.Messages.StepExecutionEndingRequest.DefaultInstance; }
    }
    
    public const int ExecuteStepRequestFieldNumber = 10;
    private bool hasExecuteStepRequest;
    private global::Gauge.Messages.ExecuteStepRequest executeStepRequest_;
    public bool HasExecuteStepRequest {
      get { return hasExecuteStepRequest; }
    }
    public global::Gauge.Messages.ExecuteStepRequest ExecuteStepRequest {
      get { return executeStepRequest_ ?? global::Gauge.Messages.ExecuteStepRequest.DefaultInstance; }
    }
    
    public const int ExecutionEndingRequestFieldNumber = 11;
    private bool hasExecutionEndingRequest;
    private global::Gauge.Messages.ExecutionEndingRequest executionEndingRequest_;
    public bool HasExecutionEndingRequest {
      get { return hasExecutionEndingRequest; }
    }
    public global::Gauge.Messages.ExecutionEndingRequest ExecutionEndingRequest {
      get { return executionEndingRequest_ ?? global::Gauge.Messages.ExecutionEndingRequest.DefaultInstance; }
    }
    
    public const int StepValidateRequestFieldNumber = 12;
    private bool hasStepValidateRequest;
    private global::Gauge.Messages.StepValidateRequest stepValidateRequest_;
    public bool HasStepValidateRequest {
      get { return hasStepValidateRequest; }
    }
    public global::Gauge.Messages.StepValidateRequest StepValidateRequest {
      get { return stepValidateRequest_ ?? global::Gauge.Messages.StepValidateRequest.DefaultInstance; }
    }
    
    public const int StepValidateResponseFieldNumber = 13;
    private bool hasStepValidateResponse;
    private global::Gauge.Messages.StepValidateResponse stepValidateResponse_;
    public bool HasStepValidateResponse {
      get { return hasStepValidateResponse; }
    }
    public global::Gauge.Messages.StepValidateResponse StepValidateResponse {
      get { return stepValidateResponse_ ?? global::Gauge.Messages.StepValidateResponse.DefaultInstance; }
    }
    
    public const int ExecutionStatusResponseFieldNumber = 14;
    private bool hasExecutionStatusResponse;
    private global::Gauge.Messages.ExecutionStatusResponse executionStatusResponse_;
    public bool HasExecutionStatusResponse {
      get { return hasExecutionStatusResponse; }
    }
    public global::Gauge.Messages.ExecutionStatusResponse ExecutionStatusResponse {
      get { return executionStatusResponse_ ?? global::Gauge.Messages.ExecutionStatusResponse.DefaultInstance; }
    }
    
    public const int StepNamesRequestFieldNumber = 15;
    private bool hasStepNamesRequest;
    private global::Gauge.Messages.StepNamesRequest stepNamesRequest_;
    public bool HasStepNamesRequest {
      get { return hasStepNamesRequest; }
    }
    public global::Gauge.Messages.StepNamesRequest StepNamesRequest {
      get { return stepNamesRequest_ ?? global::Gauge.Messages.StepNamesRequest.DefaultInstance; }
    }
    
    public const int StepNamesResponseFieldNumber = 16;
    private bool hasStepNamesResponse;
    private global::Gauge.Messages.StepNamesResponse stepNamesResponse_;
    public bool HasStepNamesResponse {
      get { return hasStepNamesResponse; }
    }
    public global::Gauge.Messages.StepNamesResponse StepNamesResponse {
      get { return stepNamesResponse_ ?? global::Gauge.Messages.StepNamesResponse.DefaultInstance; }
    }
    
    public const int SuiteExecutionResultFieldNumber = 17;
    private bool hasSuiteExecutionResult;
    private global::Gauge.Messages.SuiteExecutionResult suiteExecutionResult_;
    public bool HasSuiteExecutionResult {
      get { return hasSuiteExecutionResult; }
    }
    public global::Gauge.Messages.SuiteExecutionResult SuiteExecutionResult {
      get { return suiteExecutionResult_ ?? global::Gauge.Messages.SuiteExecutionResult.DefaultInstance; }
    }
    
    public const int KillProcessRequestFieldNumber = 18;
    private bool hasKillProcessRequest;
    private global::Gauge.Messages.KillProcessRequest killProcessRequest_;
    public bool HasKillProcessRequest {
      get { return hasKillProcessRequest; }
    }
    public global::Gauge.Messages.KillProcessRequest KillProcessRequest {
      get { return killProcessRequest_ ?? global::Gauge.Messages.KillProcessRequest.DefaultInstance; }
    }
    
    public const int ScenarioDataStoreInitRequestFieldNumber = 19;
    private bool hasScenarioDataStoreInitRequest;
    private global::Gauge.Messages.ScenarioDataStoreInitRequest scenarioDataStoreInitRequest_;
    public bool HasScenarioDataStoreInitRequest {
      get { return hasScenarioDataStoreInitRequest; }
    }
    public global::Gauge.Messages.ScenarioDataStoreInitRequest ScenarioDataStoreInitRequest {
      get { return scenarioDataStoreInitRequest_ ?? global::Gauge.Messages.ScenarioDataStoreInitRequest.DefaultInstance; }
    }
    
    public const int SpecDataStoreInitRequestFieldNumber = 20;
    private bool hasSpecDataStoreInitRequest;
    private global::Gauge.Messages.SpecDataStoreInitRequest specDataStoreInitRequest_;
    public bool HasSpecDataStoreInitRequest {
      get { return hasSpecDataStoreInitRequest; }
    }
    public global::Gauge.Messages.SpecDataStoreInitRequest SpecDataStoreInitRequest {
      get { return specDataStoreInitRequest_ ?? global::Gauge.Messages.SpecDataStoreInitRequest.DefaultInstance; }
    }
    
    public const int SuiteDataStoreInitRequestFieldNumber = 21;
    private bool hasSuiteDataStoreInitRequest;
    private global::Gauge.Messages.SuiteDataStoreInitRequest suiteDataStoreInitRequest_;
    public bool HasSuiteDataStoreInitRequest {
      get { return hasSuiteDataStoreInitRequest; }
    }
    public global::Gauge.Messages.SuiteDataStoreInitRequest SuiteDataStoreInitRequest {
      get { return suiteDataStoreInitRequest_ ?? global::Gauge.Messages.SuiteDataStoreInitRequest.DefaultInstance; }
    }
    
    public const int StepNameRequestFieldNumber = 22;
    private bool hasStepNameRequest;
    private global::Gauge.Messages.StepNameRequest stepNameRequest_;
    public bool HasStepNameRequest {
      get { return hasStepNameRequest; }
    }
    public global::Gauge.Messages.StepNameRequest StepNameRequest {
      get { return stepNameRequest_ ?? global::Gauge.Messages.StepNameRequest.DefaultInstance; }
    }
    
    public const int StepNameResponseFieldNumber = 23;
    private bool hasStepNameResponse;
    private global::Gauge.Messages.StepNameResponse stepNameResponse_;
    public bool HasStepNameResponse {
      get { return hasStepNameResponse; }
    }
    public global::Gauge.Messages.StepNameResponse StepNameResponse {
      get { return stepNameResponse_ ?? global::Gauge.Messages.StepNameResponse.DefaultInstance; }
    }
    
    public const int RefactorRequestFieldNumber = 24;
    private bool hasRefactorRequest;
    private global::Gauge.Messages.RefactorRequest refactorRequest_;
    public bool HasRefactorRequest {
      get { return hasRefactorRequest; }
    }
    public global::Gauge.Messages.RefactorRequest RefactorRequest {
      get { return refactorRequest_ ?? global::Gauge.Messages.RefactorRequest.DefaultInstance; }
    }
    
    public const int RefactorResponseFieldNumber = 25;
    private bool hasRefactorResponse;
    private global::Gauge.Messages.RefactorResponse refactorResponse_;
    public bool HasRefactorResponse {
      get { return hasRefactorResponse; }
    }
    public global::Gauge.Messages.RefactorResponse RefactorResponse {
      get { return refactorResponse_ ?? global::Gauge.Messages.RefactorResponse.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasMessageType) return false;
        if (!hasMessageId) return false;
        if (HasExecutionStartingRequest) {
          if (!ExecutionStartingRequest.IsInitialized) return false;
        }
        if (HasSpecExecutionStartingRequest) {
          if (!SpecExecutionStartingRequest.IsInitialized) return false;
        }
        if (HasSpecExecutionEndingRequest) {
          if (!SpecExecutionEndingRequest.IsInitialized) return false;
        }
        if (HasScenarioExecutionStartingRequest) {
          if (!ScenarioExecutionStartingRequest.IsInitialized) return false;
        }
        if (HasScenarioExecutionEndingRequest) {
          if (!ScenarioExecutionEndingRequest.IsInitialized) return false;
        }
        if (HasStepExecutionStartingRequest) {
          if (!StepExecutionStartingRequest.IsInitialized) return false;
        }
        if (HasStepExecutionEndingRequest) {
          if (!StepExecutionEndingRequest.IsInitialized) return false;
        }
        if (HasExecuteStepRequest) {
          if (!ExecuteStepRequest.IsInitialized) return false;
        }
        if (HasExecutionEndingRequest) {
          if (!ExecutionEndingRequest.IsInitialized) return false;
        }
        if (HasStepValidateRequest) {
          if (!StepValidateRequest.IsInitialized) return false;
        }
        if (HasStepValidateResponse) {
          if (!StepValidateResponse.IsInitialized) return false;
        }
        if (HasExecutionStatusResponse) {
          if (!ExecutionStatusResponse.IsInitialized) return false;
        }
        if (HasSuiteExecutionResult) {
          if (!SuiteExecutionResult.IsInitialized) return false;
        }
        if (HasStepNameRequest) {
          if (!StepNameRequest.IsInitialized) return false;
        }
        if (HasStepNameResponse) {
          if (!StepNameResponse.IsInitialized) return false;
        }
        if (HasRefactorRequest) {
          if (!RefactorRequest.IsInitialized) return false;
        }
        if (HasRefactorResponse) {
          if (!RefactorResponse.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _messageFieldNames;
      if (hasMessageType) {
        output.WriteEnum(1, field_names[6], (int) MessageType, MessageType);
      }
      if (hasMessageId) {
        output.WriteInt64(2, field_names[5], MessageId);
      }
      if (hasExecutionStartingRequest) {
        output.WriteMessage(3, field_names[2], ExecutionStartingRequest);
      }
      if (hasSpecExecutionStartingRequest) {
        output.WriteMessage(4, field_names[14], SpecExecutionStartingRequest);
      }
      if (hasSpecExecutionEndingRequest) {
        output.WriteMessage(5, field_names[13], SpecExecutionEndingRequest);
      }
      if (hasScenarioExecutionStartingRequest) {
        output.WriteMessage(6, field_names[11], ScenarioExecutionStartingRequest);
      }
      if (hasScenarioExecutionEndingRequest) {
        output.WriteMessage(7, field_names[10], ScenarioExecutionEndingRequest);
      }
      if (hasStepExecutionStartingRequest) {
        output.WriteMessage(8, field_names[16], StepExecutionStartingRequest);
      }
      if (hasStepExecutionEndingRequest) {
        output.WriteMessage(9, field_names[15], StepExecutionEndingRequest);
      }
      if (hasExecuteStepRequest) {
        output.WriteMessage(10, field_names[0], ExecuteStepRequest);
      }
      if (hasExecutionEndingRequest) {
        output.WriteMessage(11, field_names[1], ExecutionEndingRequest);
      }
      if (hasStepValidateRequest) {
        output.WriteMessage(12, field_names[21], StepValidateRequest);
      }
      if (hasStepValidateResponse) {
        output.WriteMessage(13, field_names[22], StepValidateResponse);
      }
      if (hasExecutionStatusResponse) {
        output.WriteMessage(14, field_names[3], ExecutionStatusResponse);
      }
      if (hasStepNamesRequest) {
        output.WriteMessage(15, field_names[19], StepNamesRequest);
      }
      if (hasStepNamesResponse) {
        output.WriteMessage(16, field_names[20], StepNamesResponse);
      }
      if (hasSuiteExecutionResult) {
        output.WriteMessage(17, field_names[24], SuiteExecutionResult);
      }
      if (hasKillProcessRequest) {
        output.WriteMessage(18, field_names[4], KillProcessRequest);
      }
      if (hasScenarioDataStoreInitRequest) {
        output.WriteMessage(19, field_names[9], ScenarioDataStoreInitRequest);
      }
      if (hasSpecDataStoreInitRequest) {
        output.WriteMessage(20, field_names[12], SpecDataStoreInitRequest);
      }
      if (hasSuiteDataStoreInitRequest) {
        output.WriteMessage(21, field_names[23], SuiteDataStoreInitRequest);
      }
      if (hasStepNameRequest) {
        output.WriteMessage(22, field_names[17], StepNameRequest);
      }
      if (hasStepNameResponse) {
        output.WriteMessage(23, field_names[18], StepNameResponse);
      }
      if (hasRefactorRequest) {
        output.WriteMessage(24, field_names[7], RefactorRequest);
      }
      if (hasRefactorResponse) {
        output.WriteMessage(25, field_names[8], RefactorResponse);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasMessageType) {
          size += pb::CodedOutputStream.ComputeEnumSize(1, (int) MessageType);
        }
        if (hasMessageId) {
          size += pb::CodedOutputStream.ComputeInt64Size(2, MessageId);
        }
        if (hasExecutionStartingRequest) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, ExecutionStartingRequest);
        }
        if (hasSpecExecutionStartingRequest) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, SpecExecutionStartingRequest);
        }
        if (hasSpecExecutionEndingRequest) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, SpecExecutionEndingRequest);
        }
        if (hasScenarioExecutionStartingRequest) {
          size += pb::CodedOutputStream.ComputeMessageSize(6, ScenarioExecutionStartingRequest);
        }
        if (hasScenarioExecutionEndingRequest) {
          size += pb::CodedOutputStream.ComputeMessageSize(7, ScenarioExecutionEndingRequest);
        }
        if (hasStepExecutionStartingRequest) {
          size += pb::CodedOutputStream.ComputeMessageSize(8, StepExecutionStartingRequest);
        }
        if (hasStepExecutionEndingRequest) {
          size += pb::CodedOutputStream.ComputeMessageSize(9, StepExecutionEndingRequest);
        }
        if (hasExecuteStepRequest) {
          size += pb::CodedOutputStream.ComputeMessageSize(10, ExecuteStepRequest);
        }
        if (hasExecutionEndingRequest) {
          size += pb::CodedOutputStream.ComputeMessageSize(11, ExecutionEndingRequest);
        }
        if (hasStepValidateRequest) {
          size += pb::CodedOutputStream.ComputeMessageSize(12, StepValidateRequest);
        }
        if (hasStepValidateResponse) {
          size += pb::CodedOutputStream.ComputeMessageSize(13, StepValidateResponse);
        }
        if (hasExecutionStatusResponse) {
          size += pb::CodedOutputStream.ComputeMessageSize(14, ExecutionStatusResponse);
        }
        if (hasStepNamesRequest) {
          size += pb::CodedOutputStream.ComputeMessageSize(15, StepNamesRequest);
        }
        if (hasStepNamesResponse) {
          size += pb::CodedOutputStream.ComputeMessageSize(16, StepNamesResponse);
        }
        if (hasSuiteExecutionResult) {
          size += pb::CodedOutputStream.ComputeMessageSize(17, SuiteExecutionResult);
        }
        if (hasKillProcessRequest) {
          size += pb::CodedOutputStream.ComputeMessageSize(18, KillProcessRequest);
        }
        if (hasScenarioDataStoreInitRequest) {
          size += pb::CodedOutputStream.ComputeMessageSize(19, ScenarioDataStoreInitRequest);
        }
        if (hasSpecDataStoreInitRequest) {
          size += pb::CodedOutputStream.ComputeMessageSize(20, SpecDataStoreInitRequest);
        }
        if (hasSuiteDataStoreInitRequest) {
          size += pb::CodedOutputStream.ComputeMessageSize(21, SuiteDataStoreInitRequest);
        }
        if (hasStepNameRequest) {
          size += pb::CodedOutputStream.ComputeMessageSize(22, StepNameRequest);
        }
        if (hasStepNameResponse) {
          size += pb::CodedOutputStream.ComputeMessageSize(23, StepNameResponse);
        }
        if (hasRefactorRequest) {
          size += pb::CodedOutputStream.ComputeMessageSize(24, RefactorRequest);
        }
        if (hasRefactorResponse) {
          size += pb::CodedOutputStream.ComputeMessageSize(25, RefactorResponse);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Message ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Message ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Message ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Message ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Message ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Message ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Message ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Message ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Message ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Message ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Message MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Message prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Message, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Message cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Message result;
      
      private Message PrepareBuilder() {
        if (resultIsReadOnly) {
          Message original = result;
          result = new Message();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Message MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gauge.Messages.Message.Descriptor; }
      }
      
      public override Message DefaultInstanceForType {
        get { return global::Gauge.Messages.Message.DefaultInstance; }
      }
      
      public override Message BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Message) {
          return MergeFrom((Message) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Message other) {
        if (other == global::Gauge.Messages.Message.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMessageType) {
          MessageType = other.MessageType;
        }
        if (other.HasMessageId) {
          MessageId = other.MessageId;
        }
        if (other.HasExecutionStartingRequest) {
          MergeExecutionStartingRequest(other.ExecutionStartingRequest);
        }
        if (other.HasSpecExecutionStartingRequest) {
          MergeSpecExecutionStartingRequest(other.SpecExecutionStartingRequest);
        }
        if (other.HasSpecExecutionEndingRequest) {
          MergeSpecExecutionEndingRequest(other.SpecExecutionEndingRequest);
        }
        if (other.HasScenarioExecutionStartingRequest) {
          MergeScenarioExecutionStartingRequest(other.ScenarioExecutionStartingRequest);
        }
        if (other.HasScenarioExecutionEndingRequest) {
          MergeScenarioExecutionEndingRequest(other.ScenarioExecutionEndingRequest);
        }
        if (other.HasStepExecutionStartingRequest) {
          MergeStepExecutionStartingRequest(other.StepExecutionStartingRequest);
        }
        if (other.HasStepExecutionEndingRequest) {
          MergeStepExecutionEndingRequest(other.StepExecutionEndingRequest);
        }
        if (other.HasExecuteStepRequest) {
          MergeExecuteStepRequest(other.ExecuteStepRequest);
        }
        if (other.HasExecutionEndingRequest) {
          MergeExecutionEndingRequest(other.ExecutionEndingRequest);
        }
        if (other.HasStepValidateRequest) {
          MergeStepValidateRequest(other.StepValidateRequest);
        }
        if (other.HasStepValidateResponse) {
          MergeStepValidateResponse(other.StepValidateResponse);
        }
        if (other.HasExecutionStatusResponse) {
          MergeExecutionStatusResponse(other.ExecutionStatusResponse);
        }
        if (other.HasStepNamesRequest) {
          MergeStepNamesRequest(other.StepNamesRequest);
        }
        if (other.HasStepNamesResponse) {
          MergeStepNamesResponse(other.StepNamesResponse);
        }
        if (other.HasSuiteExecutionResult) {
          MergeSuiteExecutionResult(other.SuiteExecutionResult);
        }
        if (other.HasKillProcessRequest) {
          MergeKillProcessRequest(other.KillProcessRequest);
        }
        if (other.HasScenarioDataStoreInitRequest) {
          MergeScenarioDataStoreInitRequest(other.ScenarioDataStoreInitRequest);
        }
        if (other.HasSpecDataStoreInitRequest) {
          MergeSpecDataStoreInitRequest(other.SpecDataStoreInitRequest);
        }
        if (other.HasSuiteDataStoreInitRequest) {
          MergeSuiteDataStoreInitRequest(other.SuiteDataStoreInitRequest);
        }
        if (other.HasStepNameRequest) {
          MergeStepNameRequest(other.StepNameRequest);
        }
        if (other.HasStepNameResponse) {
          MergeStepNameResponse(other.StepNameResponse);
        }
        if (other.HasRefactorRequest) {
          MergeRefactorRequest(other.RefactorRequest);
        }
        if (other.HasRefactorResponse) {
          MergeRefactorResponse(other.RefactorResponse);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_messageFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _messageFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.messageType_, out unknown)) {
                result.hasMessageType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 16: {
              result.hasMessageId = input.ReadInt64(ref result.messageId_);
              break;
            }
            case 26: {
              global::Gauge.Messages.ExecutionStartingRequest.Builder subBuilder = global::Gauge.Messages.ExecutionStartingRequest.CreateBuilder();
              if (result.hasExecutionStartingRequest) {
                subBuilder.MergeFrom(ExecutionStartingRequest);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ExecutionStartingRequest = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              global::Gauge.Messages.SpecExecutionStartingRequest.Builder subBuilder = global::Gauge.Messages.SpecExecutionStartingRequest.CreateBuilder();
              if (result.hasSpecExecutionStartingRequest) {
                subBuilder.MergeFrom(SpecExecutionStartingRequest);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SpecExecutionStartingRequest = subBuilder.BuildPartial();
              break;
            }
            case 42: {
              global::Gauge.Messages.SpecExecutionEndingRequest.Builder subBuilder = global::Gauge.Messages.SpecExecutionEndingRequest.CreateBuilder();
              if (result.hasSpecExecutionEndingRequest) {
                subBuilder.MergeFrom(SpecExecutionEndingRequest);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SpecExecutionEndingRequest = subBuilder.BuildPartial();
              break;
            }
            case 50: {
              global::Gauge.Messages.ScenarioExecutionStartingRequest.Builder subBuilder = global::Gauge.Messages.ScenarioExecutionStartingRequest.CreateBuilder();
              if (result.hasScenarioExecutionStartingRequest) {
                subBuilder.MergeFrom(ScenarioExecutionStartingRequest);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ScenarioExecutionStartingRequest = subBuilder.BuildPartial();
              break;
            }
            case 58: {
              global::Gauge.Messages.ScenarioExecutionEndingRequest.Builder subBuilder = global::Gauge.Messages.ScenarioExecutionEndingRequest.CreateBuilder();
              if (result.hasScenarioExecutionEndingRequest) {
                subBuilder.MergeFrom(ScenarioExecutionEndingRequest);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ScenarioExecutionEndingRequest = subBuilder.BuildPartial();
              break;
            }
            case 66: {
              global::Gauge.Messages.StepExecutionStartingRequest.Builder subBuilder = global::Gauge.Messages.StepExecutionStartingRequest.CreateBuilder();
              if (result.hasStepExecutionStartingRequest) {
                subBuilder.MergeFrom(StepExecutionStartingRequest);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              StepExecutionStartingRequest = subBuilder.BuildPartial();
              break;
            }
            case 74: {
              global::Gauge.Messages.StepExecutionEndingRequest.Builder subBuilder = global::Gauge.Messages.StepExecutionEndingRequest.CreateBuilder();
              if (result.hasStepExecutionEndingRequest) {
                subBuilder.MergeFrom(StepExecutionEndingRequest);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              StepExecutionEndingRequest = subBuilder.BuildPartial();
              break;
            }
            case 82: {
              global::Gauge.Messages.ExecuteStepRequest.Builder subBuilder = global::Gauge.Messages.ExecuteStepRequest.CreateBuilder();
              if (result.hasExecuteStepRequest) {
                subBuilder.MergeFrom(ExecuteStepRequest);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ExecuteStepRequest = subBuilder.BuildPartial();
              break;
            }
            case 90: {
              global::Gauge.Messages.ExecutionEndingRequest.Builder subBuilder = global::Gauge.Messages.ExecutionEndingRequest.CreateBuilder();
              if (result.hasExecutionEndingRequest) {
                subBuilder.MergeFrom(ExecutionEndingRequest);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ExecutionEndingRequest = subBuilder.BuildPartial();
              break;
            }
            case 98: {
              global::Gauge.Messages.StepValidateRequest.Builder subBuilder = global::Gauge.Messages.StepValidateRequest.CreateBuilder();
              if (result.hasStepValidateRequest) {
                subBuilder.MergeFrom(StepValidateRequest);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              StepValidateRequest = subBuilder.BuildPartial();
              break;
            }
            case 106: {
              global::Gauge.Messages.StepValidateResponse.Builder subBuilder = global::Gauge.Messages.StepValidateResponse.CreateBuilder();
              if (result.hasStepValidateResponse) {
                subBuilder.MergeFrom(StepValidateResponse);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              StepValidateResponse = subBuilder.BuildPartial();
              break;
            }
            case 114: {
              global::Gauge.Messages.ExecutionStatusResponse.Builder subBuilder = global::Gauge.Messages.ExecutionStatusResponse.CreateBuilder();
              if (result.hasExecutionStatusResponse) {
                subBuilder.MergeFrom(ExecutionStatusResponse);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ExecutionStatusResponse = subBuilder.BuildPartial();
              break;
            }
            case 122: {
              global::Gauge.Messages.StepNamesRequest.Builder subBuilder = global::Gauge.Messages.StepNamesRequest.CreateBuilder();
              if (result.hasStepNamesRequest) {
                subBuilder.MergeFrom(StepNamesRequest);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              StepNamesRequest = subBuilder.BuildPartial();
              break;
            }
            case 130: {
              global::Gauge.Messages.StepNamesResponse.Builder subBuilder = global::Gauge.Messages.StepNamesResponse.CreateBuilder();
              if (result.hasStepNamesResponse) {
                subBuilder.MergeFrom(StepNamesResponse);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              StepNamesResponse = subBuilder.BuildPartial();
              break;
            }
            case 138: {
              global::Gauge.Messages.SuiteExecutionResult.Builder subBuilder = global::Gauge.Messages.SuiteExecutionResult.CreateBuilder();
              if (result.hasSuiteExecutionResult) {
                subBuilder.MergeFrom(SuiteExecutionResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SuiteExecutionResult = subBuilder.BuildPartial();
              break;
            }
            case 146: {
              global::Gauge.Messages.KillProcessRequest.Builder subBuilder = global::Gauge.Messages.KillProcessRequest.CreateBuilder();
              if (result.hasKillProcessRequest) {
                subBuilder.MergeFrom(KillProcessRequest);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              KillProcessRequest = subBuilder.BuildPartial();
              break;
            }
            case 154: {
              global::Gauge.Messages.ScenarioDataStoreInitRequest.Builder subBuilder = global::Gauge.Messages.ScenarioDataStoreInitRequest.CreateBuilder();
              if (result.hasScenarioDataStoreInitRequest) {
                subBuilder.MergeFrom(ScenarioDataStoreInitRequest);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ScenarioDataStoreInitRequest = subBuilder.BuildPartial();
              break;
            }
            case 162: {
              global::Gauge.Messages.SpecDataStoreInitRequest.Builder subBuilder = global::Gauge.Messages.SpecDataStoreInitRequest.CreateBuilder();
              if (result.hasSpecDataStoreInitRequest) {
                subBuilder.MergeFrom(SpecDataStoreInitRequest);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SpecDataStoreInitRequest = subBuilder.BuildPartial();
              break;
            }
            case 170: {
              global::Gauge.Messages.SuiteDataStoreInitRequest.Builder subBuilder = global::Gauge.Messages.SuiteDataStoreInitRequest.CreateBuilder();
              if (result.hasSuiteDataStoreInitRequest) {
                subBuilder.MergeFrom(SuiteDataStoreInitRequest);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SuiteDataStoreInitRequest = subBuilder.BuildPartial();
              break;
            }
            case 178: {
              global::Gauge.Messages.StepNameRequest.Builder subBuilder = global::Gauge.Messages.StepNameRequest.CreateBuilder();
              if (result.hasStepNameRequest) {
                subBuilder.MergeFrom(StepNameRequest);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              StepNameRequest = subBuilder.BuildPartial();
              break;
            }
            case 186: {
              global::Gauge.Messages.StepNameResponse.Builder subBuilder = global::Gauge.Messages.StepNameResponse.CreateBuilder();
              if (result.hasStepNameResponse) {
                subBuilder.MergeFrom(StepNameResponse);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              StepNameResponse = subBuilder.BuildPartial();
              break;
            }
            case 194: {
              global::Gauge.Messages.RefactorRequest.Builder subBuilder = global::Gauge.Messages.RefactorRequest.CreateBuilder();
              if (result.hasRefactorRequest) {
                subBuilder.MergeFrom(RefactorRequest);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              RefactorRequest = subBuilder.BuildPartial();
              break;
            }
            case 202: {
              global::Gauge.Messages.RefactorResponse.Builder subBuilder = global::Gauge.Messages.RefactorResponse.CreateBuilder();
              if (result.hasRefactorResponse) {
                subBuilder.MergeFrom(RefactorResponse);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              RefactorResponse = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMessageType {
       get { return result.hasMessageType; }
      }
      public global::Gauge.Messages.Message.Types.MessageType MessageType {
        get { return result.MessageType; }
        set { SetMessageType(value); }
      }
      public Builder SetMessageType(global::Gauge.Messages.Message.Types.MessageType value) {
        PrepareBuilder();
        result.hasMessageType = true;
        result.messageType_ = value;
        return this;
      }
      public Builder ClearMessageType() {
        PrepareBuilder();
        result.hasMessageType = false;
        result.messageType_ = global::Gauge.Messages.Message.Types.MessageType.ExecutionStarting;
        return this;
      }
      
      public bool HasMessageId {
        get { return result.hasMessageId; }
      }
      public long MessageId {
        get { return result.MessageId; }
        set { SetMessageId(value); }
      }
      public Builder SetMessageId(long value) {
        PrepareBuilder();
        result.hasMessageId = true;
        result.messageId_ = value;
        return this;
      }
      public Builder ClearMessageId() {
        PrepareBuilder();
        result.hasMessageId = false;
        result.messageId_ = 0L;
        return this;
      }
      
      public bool HasExecutionStartingRequest {
       get { return result.hasExecutionStartingRequest; }
      }
      public global::Gauge.Messages.ExecutionStartingRequest ExecutionStartingRequest {
        get { return result.ExecutionStartingRequest; }
        set { SetExecutionStartingRequest(value); }
      }
      public Builder SetExecutionStartingRequest(global::Gauge.Messages.ExecutionStartingRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasExecutionStartingRequest = true;
        result.executionStartingRequest_ = value;
        return this;
      }
      public Builder SetExecutionStartingRequest(global::Gauge.Messages.ExecutionStartingRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasExecutionStartingRequest = true;
        result.executionStartingRequest_ = builderForValue.Build();
        return this;
      }
      public Builder MergeExecutionStartingRequest(global::Gauge.Messages.ExecutionStartingRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasExecutionStartingRequest &&
            result.executionStartingRequest_ != global::Gauge.Messages.ExecutionStartingRequest.DefaultInstance) {
            result.executionStartingRequest_ = global::Gauge.Messages.ExecutionStartingRequest.CreateBuilder(result.executionStartingRequest_).MergeFrom(value).BuildPartial();
        } else {
          result.executionStartingRequest_ = value;
        }
        result.hasExecutionStartingRequest = true;
        return this;
      }
      public Builder ClearExecutionStartingRequest() {
        PrepareBuilder();
        result.hasExecutionStartingRequest = false;
        result.executionStartingRequest_ = null;
        return this;
      }
      
      public bool HasSpecExecutionStartingRequest {
       get { return result.hasSpecExecutionStartingRequest; }
      }
      public global::Gauge.Messages.SpecExecutionStartingRequest SpecExecutionStartingRequest {
        get { return result.SpecExecutionStartingRequest; }
        set { SetSpecExecutionStartingRequest(value); }
      }
      public Builder SetSpecExecutionStartingRequest(global::Gauge.Messages.SpecExecutionStartingRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSpecExecutionStartingRequest = true;
        result.specExecutionStartingRequest_ = value;
        return this;
      }
      public Builder SetSpecExecutionStartingRequest(global::Gauge.Messages.SpecExecutionStartingRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSpecExecutionStartingRequest = true;
        result.specExecutionStartingRequest_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSpecExecutionStartingRequest(global::Gauge.Messages.SpecExecutionStartingRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSpecExecutionStartingRequest &&
            result.specExecutionStartingRequest_ != global::Gauge.Messages.SpecExecutionStartingRequest.DefaultInstance) {
            result.specExecutionStartingRequest_ = global::Gauge.Messages.SpecExecutionStartingRequest.CreateBuilder(result.specExecutionStartingRequest_).MergeFrom(value).BuildPartial();
        } else {
          result.specExecutionStartingRequest_ = value;
        }
        result.hasSpecExecutionStartingRequest = true;
        return this;
      }
      public Builder ClearSpecExecutionStartingRequest() {
        PrepareBuilder();
        result.hasSpecExecutionStartingRequest = false;
        result.specExecutionStartingRequest_ = null;
        return this;
      }
      
      public bool HasSpecExecutionEndingRequest {
       get { return result.hasSpecExecutionEndingRequest; }
      }
      public global::Gauge.Messages.SpecExecutionEndingRequest SpecExecutionEndingRequest {
        get { return result.SpecExecutionEndingRequest; }
        set { SetSpecExecutionEndingRequest(value); }
      }
      public Builder SetSpecExecutionEndingRequest(global::Gauge.Messages.SpecExecutionEndingRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSpecExecutionEndingRequest = true;
        result.specExecutionEndingRequest_ = value;
        return this;
      }
      public Builder SetSpecExecutionEndingRequest(global::Gauge.Messages.SpecExecutionEndingRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSpecExecutionEndingRequest = true;
        result.specExecutionEndingRequest_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSpecExecutionEndingRequest(global::Gauge.Messages.SpecExecutionEndingRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSpecExecutionEndingRequest &&
            result.specExecutionEndingRequest_ != global::Gauge.Messages.SpecExecutionEndingRequest.DefaultInstance) {
            result.specExecutionEndingRequest_ = global::Gauge.Messages.SpecExecutionEndingRequest.CreateBuilder(result.specExecutionEndingRequest_).MergeFrom(value).BuildPartial();
        } else {
          result.specExecutionEndingRequest_ = value;
        }
        result.hasSpecExecutionEndingRequest = true;
        return this;
      }
      public Builder ClearSpecExecutionEndingRequest() {
        PrepareBuilder();
        result.hasSpecExecutionEndingRequest = false;
        result.specExecutionEndingRequest_ = null;
        return this;
      }
      
      public bool HasScenarioExecutionStartingRequest {
       get { return result.hasScenarioExecutionStartingRequest; }
      }
      public global::Gauge.Messages.ScenarioExecutionStartingRequest ScenarioExecutionStartingRequest {
        get { return result.ScenarioExecutionStartingRequest; }
        set { SetScenarioExecutionStartingRequest(value); }
      }
      public Builder SetScenarioExecutionStartingRequest(global::Gauge.Messages.ScenarioExecutionStartingRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasScenarioExecutionStartingRequest = true;
        result.scenarioExecutionStartingRequest_ = value;
        return this;
      }
      public Builder SetScenarioExecutionStartingRequest(global::Gauge.Messages.ScenarioExecutionStartingRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasScenarioExecutionStartingRequest = true;
        result.scenarioExecutionStartingRequest_ = builderForValue.Build();
        return this;
      }
      public Builder MergeScenarioExecutionStartingRequest(global::Gauge.Messages.ScenarioExecutionStartingRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasScenarioExecutionStartingRequest &&
            result.scenarioExecutionStartingRequest_ != global::Gauge.Messages.ScenarioExecutionStartingRequest.DefaultInstance) {
            result.scenarioExecutionStartingRequest_ = global::Gauge.Messages.ScenarioExecutionStartingRequest.CreateBuilder(result.scenarioExecutionStartingRequest_).MergeFrom(value).BuildPartial();
        } else {
          result.scenarioExecutionStartingRequest_ = value;
        }
        result.hasScenarioExecutionStartingRequest = true;
        return this;
      }
      public Builder ClearScenarioExecutionStartingRequest() {
        PrepareBuilder();
        result.hasScenarioExecutionStartingRequest = false;
        result.scenarioExecutionStartingRequest_ = null;
        return this;
      }
      
      public bool HasScenarioExecutionEndingRequest {
       get { return result.hasScenarioExecutionEndingRequest; }
      }
      public global::Gauge.Messages.ScenarioExecutionEndingRequest ScenarioExecutionEndingRequest {
        get { return result.ScenarioExecutionEndingRequest; }
        set { SetScenarioExecutionEndingRequest(value); }
      }
      public Builder SetScenarioExecutionEndingRequest(global::Gauge.Messages.ScenarioExecutionEndingRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasScenarioExecutionEndingRequest = true;
        result.scenarioExecutionEndingRequest_ = value;
        return this;
      }
      public Builder SetScenarioExecutionEndingRequest(global::Gauge.Messages.ScenarioExecutionEndingRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasScenarioExecutionEndingRequest = true;
        result.scenarioExecutionEndingRequest_ = builderForValue.Build();
        return this;
      }
      public Builder MergeScenarioExecutionEndingRequest(global::Gauge.Messages.ScenarioExecutionEndingRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasScenarioExecutionEndingRequest &&
            result.scenarioExecutionEndingRequest_ != global::Gauge.Messages.ScenarioExecutionEndingRequest.DefaultInstance) {
            result.scenarioExecutionEndingRequest_ = global::Gauge.Messages.ScenarioExecutionEndingRequest.CreateBuilder(result.scenarioExecutionEndingRequest_).MergeFrom(value).BuildPartial();
        } else {
          result.scenarioExecutionEndingRequest_ = value;
        }
        result.hasScenarioExecutionEndingRequest = true;
        return this;
      }
      public Builder ClearScenarioExecutionEndingRequest() {
        PrepareBuilder();
        result.hasScenarioExecutionEndingRequest = false;
        result.scenarioExecutionEndingRequest_ = null;
        return this;
      }
      
      public bool HasStepExecutionStartingRequest {
       get { return result.hasStepExecutionStartingRequest; }
      }
      public global::Gauge.Messages.StepExecutionStartingRequest StepExecutionStartingRequest {
        get { return result.StepExecutionStartingRequest; }
        set { SetStepExecutionStartingRequest(value); }
      }
      public Builder SetStepExecutionStartingRequest(global::Gauge.Messages.StepExecutionStartingRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStepExecutionStartingRequest = true;
        result.stepExecutionStartingRequest_ = value;
        return this;
      }
      public Builder SetStepExecutionStartingRequest(global::Gauge.Messages.StepExecutionStartingRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasStepExecutionStartingRequest = true;
        result.stepExecutionStartingRequest_ = builderForValue.Build();
        return this;
      }
      public Builder MergeStepExecutionStartingRequest(global::Gauge.Messages.StepExecutionStartingRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasStepExecutionStartingRequest &&
            result.stepExecutionStartingRequest_ != global::Gauge.Messages.StepExecutionStartingRequest.DefaultInstance) {
            result.stepExecutionStartingRequest_ = global::Gauge.Messages.StepExecutionStartingRequest.CreateBuilder(result.stepExecutionStartingRequest_).MergeFrom(value).BuildPartial();
        } else {
          result.stepExecutionStartingRequest_ = value;
        }
        result.hasStepExecutionStartingRequest = true;
        return this;
      }
      public Builder ClearStepExecutionStartingRequest() {
        PrepareBuilder();
        result.hasStepExecutionStartingRequest = false;
        result.stepExecutionStartingRequest_ = null;
        return this;
      }
      
      public bool HasStepExecutionEndingRequest {
       get { return result.hasStepExecutionEndingRequest; }
      }
      public global::Gauge.Messages.StepExecutionEndingRequest StepExecutionEndingRequest {
        get { return result.StepExecutionEndingRequest; }
        set { SetStepExecutionEndingRequest(value); }
      }
      public Builder SetStepExecutionEndingRequest(global::Gauge.Messages.StepExecutionEndingRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStepExecutionEndingRequest = true;
        result.stepExecutionEndingRequest_ = value;
        return this;
      }
      public Builder SetStepExecutionEndingRequest(global::Gauge.Messages.StepExecutionEndingRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasStepExecutionEndingRequest = true;
        result.stepExecutionEndingRequest_ = builderForValue.Build();
        return this;
      }
      public Builder MergeStepExecutionEndingRequest(global::Gauge.Messages.StepExecutionEndingRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasStepExecutionEndingRequest &&
            result.stepExecutionEndingRequest_ != global::Gauge.Messages.StepExecutionEndingRequest.DefaultInstance) {
            result.stepExecutionEndingRequest_ = global::Gauge.Messages.StepExecutionEndingRequest.CreateBuilder(result.stepExecutionEndingRequest_).MergeFrom(value).BuildPartial();
        } else {
          result.stepExecutionEndingRequest_ = value;
        }
        result.hasStepExecutionEndingRequest = true;
        return this;
      }
      public Builder ClearStepExecutionEndingRequest() {
        PrepareBuilder();
        result.hasStepExecutionEndingRequest = false;
        result.stepExecutionEndingRequest_ = null;
        return this;
      }
      
      public bool HasExecuteStepRequest {
       get { return result.hasExecuteStepRequest; }
      }
      public global::Gauge.Messages.ExecuteStepRequest ExecuteStepRequest {
        get { return result.ExecuteStepRequest; }
        set { SetExecuteStepRequest(value); }
      }
      public Builder SetExecuteStepRequest(global::Gauge.Messages.ExecuteStepRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasExecuteStepRequest = true;
        result.executeStepRequest_ = value;
        return this;
      }
      public Builder SetExecuteStepRequest(global::Gauge.Messages.ExecuteStepRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasExecuteStepRequest = true;
        result.executeStepRequest_ = builderForValue.Build();
        return this;
      }
      public Builder MergeExecuteStepRequest(global::Gauge.Messages.ExecuteStepRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasExecuteStepRequest &&
            result.executeStepRequest_ != global::Gauge.Messages.ExecuteStepRequest.DefaultInstance) {
            result.executeStepRequest_ = global::Gauge.Messages.ExecuteStepRequest.CreateBuilder(result.executeStepRequest_).MergeFrom(value).BuildPartial();
        } else {
          result.executeStepRequest_ = value;
        }
        result.hasExecuteStepRequest = true;
        return this;
      }
      public Builder ClearExecuteStepRequest() {
        PrepareBuilder();
        result.hasExecuteStepRequest = false;
        result.executeStepRequest_ = null;
        return this;
      }
      
      public bool HasExecutionEndingRequest {
       get { return result.hasExecutionEndingRequest; }
      }
      public global::Gauge.Messages.ExecutionEndingRequest ExecutionEndingRequest {
        get { return result.ExecutionEndingRequest; }
        set { SetExecutionEndingRequest(value); }
      }
      public Builder SetExecutionEndingRequest(global::Gauge.Messages.ExecutionEndingRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasExecutionEndingRequest = true;
        result.executionEndingRequest_ = value;
        return this;
      }
      public Builder SetExecutionEndingRequest(global::Gauge.Messages.ExecutionEndingRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasExecutionEndingRequest = true;
        result.executionEndingRequest_ = builderForValue.Build();
        return this;
      }
      public Builder MergeExecutionEndingRequest(global::Gauge.Messages.ExecutionEndingRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasExecutionEndingRequest &&
            result.executionEndingRequest_ != global::Gauge.Messages.ExecutionEndingRequest.DefaultInstance) {
            result.executionEndingRequest_ = global::Gauge.Messages.ExecutionEndingRequest.CreateBuilder(result.executionEndingRequest_).MergeFrom(value).BuildPartial();
        } else {
          result.executionEndingRequest_ = value;
        }
        result.hasExecutionEndingRequest = true;
        return this;
      }
      public Builder ClearExecutionEndingRequest() {
        PrepareBuilder();
        result.hasExecutionEndingRequest = false;
        result.executionEndingRequest_ = null;
        return this;
      }
      
      public bool HasStepValidateRequest {
       get { return result.hasStepValidateRequest; }
      }
      public global::Gauge.Messages.StepValidateRequest StepValidateRequest {
        get { return result.StepValidateRequest; }
        set { SetStepValidateRequest(value); }
      }
      public Builder SetStepValidateRequest(global::Gauge.Messages.StepValidateRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStepValidateRequest = true;
        result.stepValidateRequest_ = value;
        return this;
      }
      public Builder SetStepValidateRequest(global::Gauge.Messages.StepValidateRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasStepValidateRequest = true;
        result.stepValidateRequest_ = builderForValue.Build();
        return this;
      }
      public Builder MergeStepValidateRequest(global::Gauge.Messages.StepValidateRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasStepValidateRequest &&
            result.stepValidateRequest_ != global::Gauge.Messages.StepValidateRequest.DefaultInstance) {
            result.stepValidateRequest_ = global::Gauge.Messages.StepValidateRequest.CreateBuilder(result.stepValidateRequest_).MergeFrom(value).BuildPartial();
        } else {
          result.stepValidateRequest_ = value;
        }
        result.hasStepValidateRequest = true;
        return this;
      }
      public Builder ClearStepValidateRequest() {
        PrepareBuilder();
        result.hasStepValidateRequest = false;
        result.stepValidateRequest_ = null;
        return this;
      }
      
      public bool HasStepValidateResponse {
       get { return result.hasStepValidateResponse; }
      }
      public global::Gauge.Messages.StepValidateResponse StepValidateResponse {
        get { return result.StepValidateResponse; }
        set { SetStepValidateResponse(value); }
      }
      public Builder SetStepValidateResponse(global::Gauge.Messages.StepValidateResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStepValidateResponse = true;
        result.stepValidateResponse_ = value;
        return this;
      }
      public Builder SetStepValidateResponse(global::Gauge.Messages.StepValidateResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasStepValidateResponse = true;
        result.stepValidateResponse_ = builderForValue.Build();
        return this;
      }
      public Builder MergeStepValidateResponse(global::Gauge.Messages.StepValidateResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasStepValidateResponse &&
            result.stepValidateResponse_ != global::Gauge.Messages.StepValidateResponse.DefaultInstance) {
            result.stepValidateResponse_ = global::Gauge.Messages.StepValidateResponse.CreateBuilder(result.stepValidateResponse_).MergeFrom(value).BuildPartial();
        } else {
          result.stepValidateResponse_ = value;
        }
        result.hasStepValidateResponse = true;
        return this;
      }
      public Builder ClearStepValidateResponse() {
        PrepareBuilder();
        result.hasStepValidateResponse = false;
        result.stepValidateResponse_ = null;
        return this;
      }
      
      public bool HasExecutionStatusResponse {
       get { return result.hasExecutionStatusResponse; }
      }
      public global::Gauge.Messages.ExecutionStatusResponse ExecutionStatusResponse {
        get { return result.ExecutionStatusResponse; }
        set { SetExecutionStatusResponse(value); }
      }
      public Builder SetExecutionStatusResponse(global::Gauge.Messages.ExecutionStatusResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasExecutionStatusResponse = true;
        result.executionStatusResponse_ = value;
        return this;
      }
      public Builder SetExecutionStatusResponse(global::Gauge.Messages.ExecutionStatusResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasExecutionStatusResponse = true;
        result.executionStatusResponse_ = builderForValue.Build();
        return this;
      }
      public Builder MergeExecutionStatusResponse(global::Gauge.Messages.ExecutionStatusResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasExecutionStatusResponse &&
            result.executionStatusResponse_ != global::Gauge.Messages.ExecutionStatusResponse.DefaultInstance) {
            result.executionStatusResponse_ = global::Gauge.Messages.ExecutionStatusResponse.CreateBuilder(result.executionStatusResponse_).MergeFrom(value).BuildPartial();
        } else {
          result.executionStatusResponse_ = value;
        }
        result.hasExecutionStatusResponse = true;
        return this;
      }
      public Builder ClearExecutionStatusResponse() {
        PrepareBuilder();
        result.hasExecutionStatusResponse = false;
        result.executionStatusResponse_ = null;
        return this;
      }
      
      public bool HasStepNamesRequest {
       get { return result.hasStepNamesRequest; }
      }
      public global::Gauge.Messages.StepNamesRequest StepNamesRequest {
        get { return result.StepNamesRequest; }
        set { SetStepNamesRequest(value); }
      }
      public Builder SetStepNamesRequest(global::Gauge.Messages.StepNamesRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStepNamesRequest = true;
        result.stepNamesRequest_ = value;
        return this;
      }
      public Builder SetStepNamesRequest(global::Gauge.Messages.StepNamesRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasStepNamesRequest = true;
        result.stepNamesRequest_ = builderForValue.Build();
        return this;
      }
      public Builder MergeStepNamesRequest(global::Gauge.Messages.StepNamesRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasStepNamesRequest &&
            result.stepNamesRequest_ != global::Gauge.Messages.StepNamesRequest.DefaultInstance) {
            result.stepNamesRequest_ = global::Gauge.Messages.StepNamesRequest.CreateBuilder(result.stepNamesRequest_).MergeFrom(value).BuildPartial();
        } else {
          result.stepNamesRequest_ = value;
        }
        result.hasStepNamesRequest = true;
        return this;
      }
      public Builder ClearStepNamesRequest() {
        PrepareBuilder();
        result.hasStepNamesRequest = false;
        result.stepNamesRequest_ = null;
        return this;
      }
      
      public bool HasStepNamesResponse {
       get { return result.hasStepNamesResponse; }
      }
      public global::Gauge.Messages.StepNamesResponse StepNamesResponse {
        get { return result.StepNamesResponse; }
        set { SetStepNamesResponse(value); }
      }
      public Builder SetStepNamesResponse(global::Gauge.Messages.StepNamesResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStepNamesResponse = true;
        result.stepNamesResponse_ = value;
        return this;
      }
      public Builder SetStepNamesResponse(global::Gauge.Messages.StepNamesResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasStepNamesResponse = true;
        result.stepNamesResponse_ = builderForValue.Build();
        return this;
      }
      public Builder MergeStepNamesResponse(global::Gauge.Messages.StepNamesResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasStepNamesResponse &&
            result.stepNamesResponse_ != global::Gauge.Messages.StepNamesResponse.DefaultInstance) {
            result.stepNamesResponse_ = global::Gauge.Messages.StepNamesResponse.CreateBuilder(result.stepNamesResponse_).MergeFrom(value).BuildPartial();
        } else {
          result.stepNamesResponse_ = value;
        }
        result.hasStepNamesResponse = true;
        return this;
      }
      public Builder ClearStepNamesResponse() {
        PrepareBuilder();
        result.hasStepNamesResponse = false;
        result.stepNamesResponse_ = null;
        return this;
      }
      
      public bool HasSuiteExecutionResult {
       get { return result.hasSuiteExecutionResult; }
      }
      public global::Gauge.Messages.SuiteExecutionResult SuiteExecutionResult {
        get { return result.SuiteExecutionResult; }
        set { SetSuiteExecutionResult(value); }
      }
      public Builder SetSuiteExecutionResult(global::Gauge.Messages.SuiteExecutionResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSuiteExecutionResult = true;
        result.suiteExecutionResult_ = value;
        return this;
      }
      public Builder SetSuiteExecutionResult(global::Gauge.Messages.SuiteExecutionResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSuiteExecutionResult = true;
        result.suiteExecutionResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSuiteExecutionResult(global::Gauge.Messages.SuiteExecutionResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSuiteExecutionResult &&
            result.suiteExecutionResult_ != global::Gauge.Messages.SuiteExecutionResult.DefaultInstance) {
            result.suiteExecutionResult_ = global::Gauge.Messages.SuiteExecutionResult.CreateBuilder(result.suiteExecutionResult_).MergeFrom(value).BuildPartial();
        } else {
          result.suiteExecutionResult_ = value;
        }
        result.hasSuiteExecutionResult = true;
        return this;
      }
      public Builder ClearSuiteExecutionResult() {
        PrepareBuilder();
        result.hasSuiteExecutionResult = false;
        result.suiteExecutionResult_ = null;
        return this;
      }
      
      public bool HasKillProcessRequest {
       get { return result.hasKillProcessRequest; }
      }
      public global::Gauge.Messages.KillProcessRequest KillProcessRequest {
        get { return result.KillProcessRequest; }
        set { SetKillProcessRequest(value); }
      }
      public Builder SetKillProcessRequest(global::Gauge.Messages.KillProcessRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasKillProcessRequest = true;
        result.killProcessRequest_ = value;
        return this;
      }
      public Builder SetKillProcessRequest(global::Gauge.Messages.KillProcessRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasKillProcessRequest = true;
        result.killProcessRequest_ = builderForValue.Build();
        return this;
      }
      public Builder MergeKillProcessRequest(global::Gauge.Messages.KillProcessRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasKillProcessRequest &&
            result.killProcessRequest_ != global::Gauge.Messages.KillProcessRequest.DefaultInstance) {
            result.killProcessRequest_ = global::Gauge.Messages.KillProcessRequest.CreateBuilder(result.killProcessRequest_).MergeFrom(value).BuildPartial();
        } else {
          result.killProcessRequest_ = value;
        }
        result.hasKillProcessRequest = true;
        return this;
      }
      public Builder ClearKillProcessRequest() {
        PrepareBuilder();
        result.hasKillProcessRequest = false;
        result.killProcessRequest_ = null;
        return this;
      }
      
      public bool HasScenarioDataStoreInitRequest {
       get { return result.hasScenarioDataStoreInitRequest; }
      }
      public global::Gauge.Messages.ScenarioDataStoreInitRequest ScenarioDataStoreInitRequest {
        get { return result.ScenarioDataStoreInitRequest; }
        set { SetScenarioDataStoreInitRequest(value); }
      }
      public Builder SetScenarioDataStoreInitRequest(global::Gauge.Messages.ScenarioDataStoreInitRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasScenarioDataStoreInitRequest = true;
        result.scenarioDataStoreInitRequest_ = value;
        return this;
      }
      public Builder SetScenarioDataStoreInitRequest(global::Gauge.Messages.ScenarioDataStoreInitRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasScenarioDataStoreInitRequest = true;
        result.scenarioDataStoreInitRequest_ = builderForValue.Build();
        return this;
      }
      public Builder MergeScenarioDataStoreInitRequest(global::Gauge.Messages.ScenarioDataStoreInitRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasScenarioDataStoreInitRequest &&
            result.scenarioDataStoreInitRequest_ != global::Gauge.Messages.ScenarioDataStoreInitRequest.DefaultInstance) {
            result.scenarioDataStoreInitRequest_ = global::Gauge.Messages.ScenarioDataStoreInitRequest.CreateBuilder(result.scenarioDataStoreInitRequest_).MergeFrom(value).BuildPartial();
        } else {
          result.scenarioDataStoreInitRequest_ = value;
        }
        result.hasScenarioDataStoreInitRequest = true;
        return this;
      }
      public Builder ClearScenarioDataStoreInitRequest() {
        PrepareBuilder();
        result.hasScenarioDataStoreInitRequest = false;
        result.scenarioDataStoreInitRequest_ = null;
        return this;
      }
      
      public bool HasSpecDataStoreInitRequest {
       get { return result.hasSpecDataStoreInitRequest; }
      }
      public global::Gauge.Messages.SpecDataStoreInitRequest SpecDataStoreInitRequest {
        get { return result.SpecDataStoreInitRequest; }
        set { SetSpecDataStoreInitRequest(value); }
      }
      public Builder SetSpecDataStoreInitRequest(global::Gauge.Messages.SpecDataStoreInitRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSpecDataStoreInitRequest = true;
        result.specDataStoreInitRequest_ = value;
        return this;
      }
      public Builder SetSpecDataStoreInitRequest(global::Gauge.Messages.SpecDataStoreInitRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSpecDataStoreInitRequest = true;
        result.specDataStoreInitRequest_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSpecDataStoreInitRequest(global::Gauge.Messages.SpecDataStoreInitRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSpecDataStoreInitRequest &&
            result.specDataStoreInitRequest_ != global::Gauge.Messages.SpecDataStoreInitRequest.DefaultInstance) {
            result.specDataStoreInitRequest_ = global::Gauge.Messages.SpecDataStoreInitRequest.CreateBuilder(result.specDataStoreInitRequest_).MergeFrom(value).BuildPartial();
        } else {
          result.specDataStoreInitRequest_ = value;
        }
        result.hasSpecDataStoreInitRequest = true;
        return this;
      }
      public Builder ClearSpecDataStoreInitRequest() {
        PrepareBuilder();
        result.hasSpecDataStoreInitRequest = false;
        result.specDataStoreInitRequest_ = null;
        return this;
      }
      
      public bool HasSuiteDataStoreInitRequest {
       get { return result.hasSuiteDataStoreInitRequest; }
      }
      public global::Gauge.Messages.SuiteDataStoreInitRequest SuiteDataStoreInitRequest {
        get { return result.SuiteDataStoreInitRequest; }
        set { SetSuiteDataStoreInitRequest(value); }
      }
      public Builder SetSuiteDataStoreInitRequest(global::Gauge.Messages.SuiteDataStoreInitRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSuiteDataStoreInitRequest = true;
        result.suiteDataStoreInitRequest_ = value;
        return this;
      }
      public Builder SetSuiteDataStoreInitRequest(global::Gauge.Messages.SuiteDataStoreInitRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSuiteDataStoreInitRequest = true;
        result.suiteDataStoreInitRequest_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSuiteDataStoreInitRequest(global::Gauge.Messages.SuiteDataStoreInitRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSuiteDataStoreInitRequest &&
            result.suiteDataStoreInitRequest_ != global::Gauge.Messages.SuiteDataStoreInitRequest.DefaultInstance) {
            result.suiteDataStoreInitRequest_ = global::Gauge.Messages.SuiteDataStoreInitRequest.CreateBuilder(result.suiteDataStoreInitRequest_).MergeFrom(value).BuildPartial();
        } else {
          result.suiteDataStoreInitRequest_ = value;
        }
        result.hasSuiteDataStoreInitRequest = true;
        return this;
      }
      public Builder ClearSuiteDataStoreInitRequest() {
        PrepareBuilder();
        result.hasSuiteDataStoreInitRequest = false;
        result.suiteDataStoreInitRequest_ = null;
        return this;
      }
      
      public bool HasStepNameRequest {
       get { return result.hasStepNameRequest; }
      }
      public global::Gauge.Messages.StepNameRequest StepNameRequest {
        get { return result.StepNameRequest; }
        set { SetStepNameRequest(value); }
      }
      public Builder SetStepNameRequest(global::Gauge.Messages.StepNameRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStepNameRequest = true;
        result.stepNameRequest_ = value;
        return this;
      }
      public Builder SetStepNameRequest(global::Gauge.Messages.StepNameRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasStepNameRequest = true;
        result.stepNameRequest_ = builderForValue.Build();
        return this;
      }
      public Builder MergeStepNameRequest(global::Gauge.Messages.StepNameRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasStepNameRequest &&
            result.stepNameRequest_ != global::Gauge.Messages.StepNameRequest.DefaultInstance) {
            result.stepNameRequest_ = global::Gauge.Messages.StepNameRequest.CreateBuilder(result.stepNameRequest_).MergeFrom(value).BuildPartial();
        } else {
          result.stepNameRequest_ = value;
        }
        result.hasStepNameRequest = true;
        return this;
      }
      public Builder ClearStepNameRequest() {
        PrepareBuilder();
        result.hasStepNameRequest = false;
        result.stepNameRequest_ = null;
        return this;
      }
      
      public bool HasStepNameResponse {
       get { return result.hasStepNameResponse; }
      }
      public global::Gauge.Messages.StepNameResponse StepNameResponse {
        get { return result.StepNameResponse; }
        set { SetStepNameResponse(value); }
      }
      public Builder SetStepNameResponse(global::Gauge.Messages.StepNameResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStepNameResponse = true;
        result.stepNameResponse_ = value;
        return this;
      }
      public Builder SetStepNameResponse(global::Gauge.Messages.StepNameResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasStepNameResponse = true;
        result.stepNameResponse_ = builderForValue.Build();
        return this;
      }
      public Builder MergeStepNameResponse(global::Gauge.Messages.StepNameResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasStepNameResponse &&
            result.stepNameResponse_ != global::Gauge.Messages.StepNameResponse.DefaultInstance) {
            result.stepNameResponse_ = global::Gauge.Messages.StepNameResponse.CreateBuilder(result.stepNameResponse_).MergeFrom(value).BuildPartial();
        } else {
          result.stepNameResponse_ = value;
        }
        result.hasStepNameResponse = true;
        return this;
      }
      public Builder ClearStepNameResponse() {
        PrepareBuilder();
        result.hasStepNameResponse = false;
        result.stepNameResponse_ = null;
        return this;
      }
      
      public bool HasRefactorRequest {
       get { return result.hasRefactorRequest; }
      }
      public global::Gauge.Messages.RefactorRequest RefactorRequest {
        get { return result.RefactorRequest; }
        set { SetRefactorRequest(value); }
      }
      public Builder SetRefactorRequest(global::Gauge.Messages.RefactorRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRefactorRequest = true;
        result.refactorRequest_ = value;
        return this;
      }
      public Builder SetRefactorRequest(global::Gauge.Messages.RefactorRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRefactorRequest = true;
        result.refactorRequest_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRefactorRequest(global::Gauge.Messages.RefactorRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRefactorRequest &&
            result.refactorRequest_ != global::Gauge.Messages.RefactorRequest.DefaultInstance) {
            result.refactorRequest_ = global::Gauge.Messages.RefactorRequest.CreateBuilder(result.refactorRequest_).MergeFrom(value).BuildPartial();
        } else {
          result.refactorRequest_ = value;
        }
        result.hasRefactorRequest = true;
        return this;
      }
      public Builder ClearRefactorRequest() {
        PrepareBuilder();
        result.hasRefactorRequest = false;
        result.refactorRequest_ = null;
        return this;
      }
      
      public bool HasRefactorResponse {
       get { return result.hasRefactorResponse; }
      }
      public global::Gauge.Messages.RefactorResponse RefactorResponse {
        get { return result.RefactorResponse; }
        set { SetRefactorResponse(value); }
      }
      public Builder SetRefactorResponse(global::Gauge.Messages.RefactorResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRefactorResponse = true;
        result.refactorResponse_ = value;
        return this;
      }
      public Builder SetRefactorResponse(global::Gauge.Messages.RefactorResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRefactorResponse = true;
        result.refactorResponse_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRefactorResponse(global::Gauge.Messages.RefactorResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRefactorResponse &&
            result.refactorResponse_ != global::Gauge.Messages.RefactorResponse.DefaultInstance) {
            result.refactorResponse_ = global::Gauge.Messages.RefactorResponse.CreateBuilder(result.refactorResponse_).MergeFrom(value).BuildPartial();
        } else {
          result.refactorResponse_ = value;
        }
        result.hasRefactorResponse = true;
        return this;
      }
      public Builder ClearRefactorResponse() {
        PrepareBuilder();
        result.hasRefactorResponse = false;
        result.refactorResponse_ = null;
        return this;
      }
    }
    static Message() {
      object.ReferenceEquals(global::Gauge.Messages.Messages.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
